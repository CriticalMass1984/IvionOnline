#!/usr/bin/env python

import shlex
import subprocess
import fnmatch
import os
import pathlib


FILE_PATH = os.getcwd()
FILE_PATH = os.path.join(FILE_PATH, "IOEngine")
print("FILE_PATH: {}".format(FILE_PATH))



def GetSources(directory):
    matches = list()
    for root, dirnames, filenames in os.walk(directory):
        for filename in fnmatch.filter(filenames, '*.cpp'):
            matches.append(os.path.join(root, filename))
    print("GetSources: {}".format("\n".join(matches)))
    return matches


def GetSharedLibs(directory):
    matches = list()
    directory = os.path.join(FILE_PATH, directory)
    for root, dirnames, filenames in os.walk(directory):
        for filename in fnmatch.filter(filenames, '*.so'):
            matches.append(filename)  # [:len(filename)-len(".so")])
    print("GetSharedLibs: {}".format("\n".join(matches)))
    return matches

# Thirdparty source files
# Not unbundled for now as they are not commonly available as shared library

#"{}/{}".format(FILE_PATH, x)
Libraries = ["libIOEngine.so"]
#"{}/{}".format(FILE_PATH, x)
LibraryDir = ["IOEngine"]

#https://github.com/Xrayez/godot-anl/blob/gd3/SCsub
Import('env')

module_env = env.Clone()

module_env.Append(CCFLAGS = '-g')

#
module_env.Append(CXXFLAGS=['-std=c++17'])
#module_env.Append(CCFLAGS=['-O2'])

#
sources = ["register_types.cpp"]
IncludeDirs = list()

# source.extend(GetSources('IOEngine/Extern/Source/grpc/src'))
# IncludeDirs.append('IOEngine/Extern/Source/grpc/include')

# source.extend(GetSources('IOEngine/Extern/Source/grpc/src'))
# IncludeDirs.append('IOEngine/Extern/Source/grpc/spm-core-include')
# IncludeDirs.append('IOEngine/Extern/Source/grpc/spm-cpp-include')

sources.extend(GetSources('GodotWrapper/Source'))
IncludeDirs.append('GodotWrapper/Include')

# sources.extend(GetSources('IOEngine/Source'))
IncludeDirs.append('IOEngine/Include')
IncludeDirs.append('IOEngine/Extern/Install/GRPC/include')

#
module_env.Append(CPPPATH=IncludeDirs)

env.Append(LIBS=Libraries)
env.Append(LIBPATH="/home/zack/Documents/IvionOnline/Godot/modules/ivion_online/IOEngine/build")

if ARGUMENTS.get('custom_modules_shared', 'no') == 'yes':
    # Shared lib compilation
    module_env.Append(CCFLAGS=['-fPIC'])
    module_env['LIBS'] = []
    shared_lib = module_env.SharedLibrary(target='#bin/ess', source=sources)
    shared_lib_shim = shared_lib[0].name.rsplit('.', 1)[0]
    env.Append(LIBS=[shared_lib_shim])
    env.Append(LIBPATH=['#bin'])
else:
    # Static compilation
    module_env.add_source_files(env.modules_sources, sources)

Export('module_env')