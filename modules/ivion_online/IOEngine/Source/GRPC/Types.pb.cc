// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Types.proto

#include <GRPC/Types.pb.h>

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CardRef_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Integer_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntegerRef_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IntegerValue_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Path_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Path_FieldIndecies_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlayerRef_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TileRef_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec2i_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Vec2iRef_Types_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Types_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Vec2iValue_Types_2eproto;
namespace Types {
class Path_FieldIndeciesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Path_FieldIndecies> _instance;
} _Path_FieldIndecies_default_instance_;
class PathDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Path> _instance;
} _Path_default_instance_;
class IntegerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Integer> _instance;
} _Integer_default_instance_;
class Vec2iDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec2i> _instance;
} _Vec2i_default_instance_;
class PlayerRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayerRef> _instance;
} _PlayerRef_default_instance_;
class CardRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardRef> _instance;
} _CardRef_default_instance_;
class TileRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TileRef> _instance;
} _TileRef_default_instance_;
class IntegerRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntegerRef> _instance;
} _IntegerRef_default_instance_;
class Vec2iRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec2iRef> _instance;
} _Vec2iRef_default_instance_;
class IntegerValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntegerValue> _instance;
} _IntegerValue_default_instance_;
class Vec2iValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec2iValue> _instance;
} _Vec2iValue_default_instance_;
class EntityRefDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityRef> _instance;
} _EntityRef_default_instance_;
class EntityValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EntityValue> _instance;
} _EntityValue_default_instance_;
}  // namespace Types
static void InitDefaultsscc_info_CardRef_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_CardRef_default_instance_;
    new (ptr) ::Types::CardRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CardRef_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CardRef_Types_2eproto}, {
      &scc_info_Path_Types_2eproto.base,}};

static void InitDefaultsscc_info_EntityRef_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_EntityRef_default_instance_;
    new (ptr) ::Types::EntityRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_EntityRef_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_EntityRef_Types_2eproto}, {
      &scc_info_IntegerRef_Types_2eproto.base,
      &scc_info_Vec2iRef_Types_2eproto.base,
      &scc_info_PlayerRef_Types_2eproto.base,
      &scc_info_CardRef_Types_2eproto.base,
      &scc_info_TileRef_Types_2eproto.base,}};

static void InitDefaultsscc_info_EntityValue_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_EntityValue_default_instance_;
    new (ptr) ::Types::EntityValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_EntityValue_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_EntityValue_Types_2eproto}, {
      &scc_info_IntegerValue_Types_2eproto.base,
      &scc_info_Vec2iValue_Types_2eproto.base,
      &scc_info_PlayerRef_Types_2eproto.base,
      &scc_info_CardRef_Types_2eproto.base,
      &scc_info_TileRef_Types_2eproto.base,}};

static void InitDefaultsscc_info_Integer_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_Integer_default_instance_;
    new (ptr) ::Types::Integer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Integer_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Integer_Types_2eproto}, {}};

static void InitDefaultsscc_info_IntegerRef_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_IntegerRef_default_instance_;
    new (ptr) ::Types::IntegerRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IntegerRef_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IntegerRef_Types_2eproto}, {
      &scc_info_Path_Types_2eproto.base,}};

static void InitDefaultsscc_info_IntegerValue_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_IntegerValue_default_instance_;
    new (ptr) ::Types::IntegerValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_IntegerValue_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_IntegerValue_Types_2eproto}, {
      &scc_info_Integer_Types_2eproto.base,
      &scc_info_IntegerRef_Types_2eproto.base,}};

static void InitDefaultsscc_info_Path_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_Path_default_instance_;
    new (ptr) ::Types::Path();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Path_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Path_Types_2eproto}, {
      &scc_info_Path_FieldIndecies_Types_2eproto.base,}};

static void InitDefaultsscc_info_Path_FieldIndecies_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_Path_FieldIndecies_default_instance_;
    new (ptr) ::Types::Path_FieldIndecies();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Path_FieldIndecies_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Path_FieldIndecies_Types_2eproto}, {}};

static void InitDefaultsscc_info_PlayerRef_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_PlayerRef_default_instance_;
    new (ptr) ::Types::PlayerRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlayerRef_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlayerRef_Types_2eproto}, {
      &scc_info_Path_Types_2eproto.base,}};

static void InitDefaultsscc_info_TileRef_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_TileRef_default_instance_;
    new (ptr) ::Types::TileRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TileRef_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TileRef_Types_2eproto}, {
      &scc_info_Path_Types_2eproto.base,}};

static void InitDefaultsscc_info_Vec2i_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_Vec2i_default_instance_;
    new (ptr) ::Types::Vec2i();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vec2i_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vec2i_Types_2eproto}, {}};

static void InitDefaultsscc_info_Vec2iRef_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_Vec2iRef_default_instance_;
    new (ptr) ::Types::Vec2iRef();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Vec2iRef_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Vec2iRef_Types_2eproto}, {
      &scc_info_Path_Types_2eproto.base,}};

static void InitDefaultsscc_info_Vec2iValue_Types_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Types::_Vec2iValue_default_instance_;
    new (ptr) ::Types::Vec2iValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Vec2iValue_Types_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Vec2iValue_Types_2eproto}, {
      &scc_info_Vec2i_Types_2eproto.base,
      &scc_info_Vec2iRef_Types_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Types_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Types_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Types_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Types_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::Path_FieldIndecies, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::Path_FieldIndecies, indecies_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::Path, fields_),
  PROTOBUF_FIELD_OFFSET(::Types::Path, fullpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::Integer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::Integer, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::Vec2i, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::Vec2i, x_),
  PROTOBUF_FIELD_OFFSET(::Types::Vec2i, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::PlayerRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::PlayerRef, objectpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::CardRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::CardRef, objectpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::TileRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::TileRef, objectpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::IntegerRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::IntegerRef, objectpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::Vec2iRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Types::Vec2iRef, objectpath_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::IntegerValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Types::IntegerValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Types::IntegerValue, int_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::Vec2iValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Types::Vec2iValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Types::Vec2iValue, vec2i_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::EntityRef, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Types::EntityRef, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Types::EntityRef, entity_ref_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Types::EntityValue, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Types::EntityValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Types::EntityValue, entity_val_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Types::Path_FieldIndecies)},
  { 6, -1, sizeof(::Types::Path)},
  { 13, -1, sizeof(::Types::Integer)},
  { 19, -1, sizeof(::Types::Vec2i)},
  { 26, -1, sizeof(::Types::PlayerRef)},
  { 32, -1, sizeof(::Types::CardRef)},
  { 38, -1, sizeof(::Types::TileRef)},
  { 44, -1, sizeof(::Types::IntegerRef)},
  { 50, -1, sizeof(::Types::Vec2iRef)},
  { 56, -1, sizeof(::Types::IntegerValue)},
  { 64, -1, sizeof(::Types::Vec2iValue)},
  { 72, -1, sizeof(::Types::EntityRef)},
  { 83, -1, sizeof(::Types::EntityValue)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_Path_FieldIndecies_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_Path_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_Integer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_Vec2i_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_PlayerRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_CardRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_TileRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_IntegerRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_Vec2iRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_IntegerValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_Vec2iValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_EntityRef_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Types::_EntityValue_default_instance_),
};

const char descriptor_table_protodef_Types_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013Types.proto\022\005Types\"f\n\004Path\022)\n\006Fields\030\001"
  " \001(\0132\031.Types.Path.FieldIndecies\022\020\n\010FullP"
  "ath\030\002 \001(\t\032!\n\rFieldIndecies\022\020\n\010Indecies\030\001"
  " \003(\005\"\030\n\007Integer\022\r\n\005Value\030\001 \001(\005\"\035\n\005Vec2i\022"
  "\t\n\001X\030\001 \001(\005\022\t\n\001Y\030\002 \001(\005\",\n\tPlayerRef\022\037\n\nOb"
  "jectPath\030\001 \001(\0132\013.Types.Path\"*\n\007CardRef\022\037"
  "\n\nObjectPath\030\001 \001(\0132\013.Types.Path\"*\n\007TileR"
  "ef\022\037\n\nObjectPath\030\001 \001(\0132\013.Types.Path\"-\n\nI"
  "ntegerRef\022\037\n\nObjectPath\030\001 \001(\0132\013.Types.Pa"
  "th\"+\n\010Vec2iRef\022\037\n\nObjectPath\030\001 \001(\0132\013.Typ"
  "es.Path\"^\n\014IntegerValue\022\037\n\005Value\030\001 \001(\0132\016"
  ".Types.IntegerH\000\022 \n\003Ref\030\002 \001(\0132\021.Types.In"
  "tegerRefH\000B\013\n\tint_value\"Z\n\nVec2iValue\022\035\n"
  "\005Value\030\001 \001(\0132\014.Types.Vec2iH\000\022\036\n\003Ref\030\002 \001("
  "\0132\017.Types.Vec2iRefH\000B\r\n\013vec2i_value\"\305\001\n\t"
  "EntityRef\022$\n\007Integer\030\001 \001(\0132\021.Types.Integ"
  "erRefH\000\022 \n\005Vec2i\030\002 \001(\0132\017.Types.Vec2iRefH"
  "\000\022\"\n\006Player\030\003 \001(\0132\020.Types.PlayerRefH\000\022\036\n"
  "\004Card\030\004 \001(\0132\016.Types.CardRefH\000\022\036\n\004Tile\030\005 "
  "\001(\0132\016.Types.TileRefH\000B\014\n\nentity_ref\"\367\001\n\013"
  "EntityValue\022&\n\007Integer\030\001 \001(\0132\023.Types.Int"
  "egerValueH\000\022\"\n\005Vec2i\030\002 \001(\0132\021.Types.Vec2i"
  "ValueH\000\022\"\n\006Player\030\003 \001(\0132\020.Types.PlayerRe"
  "fH\000\022\036\n\004Card\030\004 \001(\0132\016.Types.CardRefH\000\022\036\n\004T"
  "ile\030\005 \001(\0132\016.Types.TileRefH\000\022*\n\014TerrainVa"
  "lue\030\006 \001(\0162\022.Types.TerrainTypeH\000B\014\n\nentit"
  "y_val*M\n\013TerrainType\022\020\n\014TERRAIN_NONE\020\000\022\025"
  "\n\021TERRAIN_DIFFICULT\020\001\022\025\n\021TERRAIN_ENCHANT"
  "ED\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Types_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Types_2eproto_sccs[13] = {
  &scc_info_CardRef_Types_2eproto.base,
  &scc_info_EntityRef_Types_2eproto.base,
  &scc_info_EntityValue_Types_2eproto.base,
  &scc_info_Integer_Types_2eproto.base,
  &scc_info_IntegerRef_Types_2eproto.base,
  &scc_info_IntegerValue_Types_2eproto.base,
  &scc_info_Path_Types_2eproto.base,
  &scc_info_Path_FieldIndecies_Types_2eproto.base,
  &scc_info_PlayerRef_Types_2eproto.base,
  &scc_info_TileRef_Types_2eproto.base,
  &scc_info_Vec2i_Types_2eproto.base,
  &scc_info_Vec2iRef_Types_2eproto.base,
  &scc_info_Vec2iValue_Types_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Types_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Types_2eproto = {
  false, false, descriptor_table_protodef_Types_2eproto, "Types.proto", 1132,
  &descriptor_table_Types_2eproto_once, descriptor_table_Types_2eproto_sccs, descriptor_table_Types_2eproto_deps, 13, 0,
  schemas, file_default_instances, TableStruct_Types_2eproto::offsets,
  file_level_metadata_Types_2eproto, 13, file_level_enum_descriptors_Types_2eproto, file_level_service_descriptors_Types_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Types_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Types_2eproto)), true);
namespace Types {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TerrainType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Types_2eproto);
  return file_level_enum_descriptors_Types_2eproto[0];
}
bool TerrainType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Path_FieldIndecies::_Internal {
 public:
};

Path_FieldIndecies::Path_FieldIndecies(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  indecies_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.Path.FieldIndecies)
}
Path_FieldIndecies::Path_FieldIndecies(const Path_FieldIndecies& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      indecies_(from.indecies_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Types.Path.FieldIndecies)
}

void Path_FieldIndecies::SharedCtor() {
}

Path_FieldIndecies::~Path_FieldIndecies() {
  // @@protoc_insertion_point(destructor:Types.Path.FieldIndecies)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Path_FieldIndecies::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Path_FieldIndecies::ArenaDtor(void* object) {
  Path_FieldIndecies* _this = reinterpret_cast< Path_FieldIndecies* >(object);
  (void)_this;
}
void Path_FieldIndecies::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Path_FieldIndecies::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Path_FieldIndecies& Path_FieldIndecies::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Path_FieldIndecies_Types_2eproto.base);
  return *internal_default_instance();
}


void Path_FieldIndecies::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.Path.FieldIndecies)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indecies_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Path_FieldIndecies::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 Indecies = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_indecies(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_indecies(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Path_FieldIndecies::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.Path.FieldIndecies)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 Indecies = 1;
  {
    int byte_size = _indecies_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_indecies(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.Path.FieldIndecies)
  return target;
}

size_t Path_FieldIndecies::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.Path.FieldIndecies)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 Indecies = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->indecies_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _indecies_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Path_FieldIndecies::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.Path.FieldIndecies)
  GOOGLE_DCHECK_NE(&from, this);
  const Path_FieldIndecies* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Path_FieldIndecies>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.Path.FieldIndecies)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.Path.FieldIndecies)
    MergeFrom(*source);
  }
}

void Path_FieldIndecies::MergeFrom(const Path_FieldIndecies& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.Path.FieldIndecies)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indecies_.MergeFrom(from.indecies_);
}

void Path_FieldIndecies::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.Path.FieldIndecies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path_FieldIndecies::CopyFrom(const Path_FieldIndecies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.Path.FieldIndecies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path_FieldIndecies::IsInitialized() const {
  return true;
}

void Path_FieldIndecies::InternalSwap(Path_FieldIndecies* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  indecies_.InternalSwap(&other->indecies_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Path_FieldIndecies::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Path::_Internal {
 public:
  static const ::Types::Path_FieldIndecies& fields(const Path* msg);
};

const ::Types::Path_FieldIndecies&
Path::_Internal::fields(const Path* msg) {
  return *msg->fields_;
}
Path::Path(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.Path)
}
Path::Path(const Path& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fullpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fullpath().empty()) {
    fullpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_fullpath(), 
      GetArena());
  }
  if (from._internal_has_fields()) {
    fields_ = new ::Types::Path_FieldIndecies(*from.fields_);
  } else {
    fields_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Types.Path)
}

void Path::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Path_Types_2eproto.base);
  fullpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  fields_ = nullptr;
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:Types.Path)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Path::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  fullpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete fields_;
}

void Path::ArenaDtor(void* object) {
  Path* _this = reinterpret_cast< Path* >(object);
  (void)_this;
}
void Path::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Path::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Path& Path::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Path_Types_2eproto.base);
  return *internal_default_instance();
}


void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.Path)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fullpath_.ClearToEmpty();
  if (GetArena() == nullptr && fields_ != nullptr) {
    delete fields_;
  }
  fields_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Path::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Path.FieldIndecies Fields = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_fields(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string FullPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_fullpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Types.Path.FullPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Path::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.Path)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Path.FieldIndecies Fields = 1;
  if (this->has_fields()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::fields(this), target, stream);
  }

  // string FullPath = 2;
  if (this->fullpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_fullpath().data(), static_cast<int>(this->_internal_fullpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Types.Path.FullPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_fullpath(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.Path)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string FullPath = 2;
  if (this->fullpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_fullpath());
  }

  // .Types.Path.FieldIndecies Fields = 1;
  if (this->has_fields()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *fields_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Path::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Path>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.Path)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fullpath().size() > 0) {
    _internal_set_fullpath(from._internal_fullpath());
  }
  if (from.has_fields()) {
    _internal_mutable_fields()->::Types::Path_FieldIndecies::MergeFrom(from._internal_fields());
  }
}

void Path::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::InternalSwap(Path* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fullpath_.Swap(&other->fullpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(fields_, other->fields_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Path::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Integer::_Internal {
 public:
};

Integer::Integer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.Integer)
}
Integer::Integer(const Integer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:Types.Integer)
}

void Integer::SharedCtor() {
  value_ = 0;
}

Integer::~Integer() {
  // @@protoc_insertion_point(destructor:Types.Integer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Integer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Integer::ArenaDtor(void* object) {
  Integer* _this = reinterpret_cast< Integer* >(object);
  (void)_this;
}
void Integer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Integer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Integer& Integer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Integer_Types_2eproto.base);
  return *internal_default_instance();
}


void Integer::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.Integer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Integer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Integer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.Integer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.Integer)
  return target;
}

size_t Integer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.Integer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Integer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  const Integer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Integer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.Integer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.Integer)
    MergeFrom(*source);
  }
}

void Integer::MergeFrom(const Integer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Integer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Integer::CopyFrom(const Integer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Integer::IsInitialized() const {
  return true;
}

void Integer::InternalSwap(Integer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Integer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vec2i::_Internal {
 public:
};

Vec2i::Vec2i(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.Vec2i)
}
Vec2i::Vec2i(const Vec2i& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:Types.Vec2i)
}

void Vec2i::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Vec2i::~Vec2i() {
  // @@protoc_insertion_point(destructor:Types.Vec2i)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec2i::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Vec2i::ArenaDtor(void* object) {
  Vec2i* _this = reinterpret_cast< Vec2i* >(object);
  (void)_this;
}
void Vec2i::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec2i::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec2i& Vec2i::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec2i_Types_2eproto.base);
  return *internal_default_instance();
}


void Vec2i::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.Vec2i)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec2i::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 X = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec2i::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.Vec2i)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 X = 1;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 Y = 2;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.Vec2i)
  return target;
}

size_t Vec2i::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.Vec2i)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 X = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x());
  }

  // int32 Y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec2i::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.Vec2i)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec2i* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec2i>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.Vec2i)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.Vec2i)
    MergeFrom(*source);
  }
}

void Vec2i::MergeFrom(const Vec2i& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.Vec2i)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
}

void Vec2i::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.Vec2i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2i::CopyFrom(const Vec2i& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.Vec2i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2i::IsInitialized() const {
  return true;
}

void Vec2i::InternalSwap(Vec2i* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec2i, y_)
      + sizeof(Vec2i::y_)
      - PROTOBUF_FIELD_OFFSET(Vec2i, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec2i::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlayerRef::_Internal {
 public:
  static const ::Types::Path& objectpath(const PlayerRef* msg);
};

const ::Types::Path&
PlayerRef::_Internal::objectpath(const PlayerRef* msg) {
  return *msg->objectpath_;
}
PlayerRef::PlayerRef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.PlayerRef)
}
PlayerRef::PlayerRef(const PlayerRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_objectpath()) {
    objectpath_ = new ::Types::Path(*from.objectpath_);
  } else {
    objectpath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Types.PlayerRef)
}

void PlayerRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayerRef_Types_2eproto.base);
  objectpath_ = nullptr;
}

PlayerRef::~PlayerRef() {
  // @@protoc_insertion_point(destructor:Types.PlayerRef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayerRef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete objectpath_;
}

void PlayerRef::ArenaDtor(void* object) {
  PlayerRef* _this = reinterpret_cast< PlayerRef* >(object);
  (void)_this;
}
void PlayerRef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayerRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayerRef& PlayerRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayerRef_Types_2eproto.base);
  return *internal_default_instance();
}


void PlayerRef::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.PlayerRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && objectpath_ != nullptr) {
    delete objectpath_;
  }
  objectpath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayerRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Path ObjectPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayerRef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.PlayerRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::objectpath(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.PlayerRef)
  return target;
}

size_t PlayerRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.PlayerRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectpath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.PlayerRef)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayerRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.PlayerRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.PlayerRef)
    MergeFrom(*source);
  }
}

void PlayerRef::MergeFrom(const PlayerRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.PlayerRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_objectpath()) {
    _internal_mutable_objectpath()->::Types::Path::MergeFrom(from._internal_objectpath());
  }
}

void PlayerRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.PlayerRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerRef::CopyFrom(const PlayerRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.PlayerRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerRef::IsInitialized() const {
  return true;
}

void PlayerRef::InternalSwap(PlayerRef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectpath_, other->objectpath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayerRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CardRef::_Internal {
 public:
  static const ::Types::Path& objectpath(const CardRef* msg);
};

const ::Types::Path&
CardRef::_Internal::objectpath(const CardRef* msg) {
  return *msg->objectpath_;
}
CardRef::CardRef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.CardRef)
}
CardRef::CardRef(const CardRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_objectpath()) {
    objectpath_ = new ::Types::Path(*from.objectpath_);
  } else {
    objectpath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Types.CardRef)
}

void CardRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardRef_Types_2eproto.base);
  objectpath_ = nullptr;
}

CardRef::~CardRef() {
  // @@protoc_insertion_point(destructor:Types.CardRef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardRef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete objectpath_;
}

void CardRef::ArenaDtor(void* object) {
  CardRef* _this = reinterpret_cast< CardRef* >(object);
  (void)_this;
}
void CardRef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardRef& CardRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardRef_Types_2eproto.base);
  return *internal_default_instance();
}


void CardRef::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.CardRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && objectpath_ != nullptr) {
    delete objectpath_;
  }
  objectpath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Path ObjectPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardRef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.CardRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::objectpath(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.CardRef)
  return target;
}

size_t CardRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.CardRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectpath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.CardRef)
  GOOGLE_DCHECK_NE(&from, this);
  const CardRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.CardRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.CardRef)
    MergeFrom(*source);
  }
}

void CardRef::MergeFrom(const CardRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.CardRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_objectpath()) {
    _internal_mutable_objectpath()->::Types::Path::MergeFrom(from._internal_objectpath());
  }
}

void CardRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.CardRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardRef::CopyFrom(const CardRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.CardRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardRef::IsInitialized() const {
  return true;
}

void CardRef::InternalSwap(CardRef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectpath_, other->objectpath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CardRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TileRef::_Internal {
 public:
  static const ::Types::Path& objectpath(const TileRef* msg);
};

const ::Types::Path&
TileRef::_Internal::objectpath(const TileRef* msg) {
  return *msg->objectpath_;
}
TileRef::TileRef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.TileRef)
}
TileRef::TileRef(const TileRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_objectpath()) {
    objectpath_ = new ::Types::Path(*from.objectpath_);
  } else {
    objectpath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Types.TileRef)
}

void TileRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TileRef_Types_2eproto.base);
  objectpath_ = nullptr;
}

TileRef::~TileRef() {
  // @@protoc_insertion_point(destructor:Types.TileRef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TileRef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete objectpath_;
}

void TileRef::ArenaDtor(void* object) {
  TileRef* _this = reinterpret_cast< TileRef* >(object);
  (void)_this;
}
void TileRef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TileRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TileRef& TileRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TileRef_Types_2eproto.base);
  return *internal_default_instance();
}


void TileRef::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.TileRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && objectpath_ != nullptr) {
    delete objectpath_;
  }
  objectpath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TileRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Path ObjectPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TileRef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.TileRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::objectpath(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.TileRef)
  return target;
}

size_t TileRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.TileRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectpath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TileRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.TileRef)
  GOOGLE_DCHECK_NE(&from, this);
  const TileRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TileRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.TileRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.TileRef)
    MergeFrom(*source);
  }
}

void TileRef::MergeFrom(const TileRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.TileRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_objectpath()) {
    _internal_mutable_objectpath()->::Types::Path::MergeFrom(from._internal_objectpath());
  }
}

void TileRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.TileRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TileRef::CopyFrom(const TileRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.TileRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TileRef::IsInitialized() const {
  return true;
}

void TileRef::InternalSwap(TileRef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectpath_, other->objectpath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TileRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IntegerRef::_Internal {
 public:
  static const ::Types::Path& objectpath(const IntegerRef* msg);
};

const ::Types::Path&
IntegerRef::_Internal::objectpath(const IntegerRef* msg) {
  return *msg->objectpath_;
}
IntegerRef::IntegerRef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.IntegerRef)
}
IntegerRef::IntegerRef(const IntegerRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_objectpath()) {
    objectpath_ = new ::Types::Path(*from.objectpath_);
  } else {
    objectpath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Types.IntegerRef)
}

void IntegerRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntegerRef_Types_2eproto.base);
  objectpath_ = nullptr;
}

IntegerRef::~IntegerRef() {
  // @@protoc_insertion_point(destructor:Types.IntegerRef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IntegerRef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete objectpath_;
}

void IntegerRef::ArenaDtor(void* object) {
  IntegerRef* _this = reinterpret_cast< IntegerRef* >(object);
  (void)_this;
}
void IntegerRef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntegerRef& IntegerRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntegerRef_Types_2eproto.base);
  return *internal_default_instance();
}


void IntegerRef::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.IntegerRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && objectpath_ != nullptr) {
    delete objectpath_;
  }
  objectpath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntegerRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Path ObjectPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntegerRef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.IntegerRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::objectpath(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.IntegerRef)
  return target;
}

size_t IntegerRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.IntegerRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectpath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.IntegerRef)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntegerRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.IntegerRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.IntegerRef)
    MergeFrom(*source);
  }
}

void IntegerRef::MergeFrom(const IntegerRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.IntegerRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_objectpath()) {
    _internal_mutable_objectpath()->::Types::Path::MergeFrom(from._internal_objectpath());
  }
}

void IntegerRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.IntegerRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerRef::CopyFrom(const IntegerRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.IntegerRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerRef::IsInitialized() const {
  return true;
}

void IntegerRef::InternalSwap(IntegerRef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectpath_, other->objectpath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vec2iRef::_Internal {
 public:
  static const ::Types::Path& objectpath(const Vec2iRef* msg);
};

const ::Types::Path&
Vec2iRef::_Internal::objectpath(const Vec2iRef* msg) {
  return *msg->objectpath_;
}
Vec2iRef::Vec2iRef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.Vec2iRef)
}
Vec2iRef::Vec2iRef(const Vec2iRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_objectpath()) {
    objectpath_ = new ::Types::Path(*from.objectpath_);
  } else {
    objectpath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Types.Vec2iRef)
}

void Vec2iRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Vec2iRef_Types_2eproto.base);
  objectpath_ = nullptr;
}

Vec2iRef::~Vec2iRef() {
  // @@protoc_insertion_point(destructor:Types.Vec2iRef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec2iRef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete objectpath_;
}

void Vec2iRef::ArenaDtor(void* object) {
  Vec2iRef* _this = reinterpret_cast< Vec2iRef* >(object);
  (void)_this;
}
void Vec2iRef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec2iRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec2iRef& Vec2iRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec2iRef_Types_2eproto.base);
  return *internal_default_instance();
}


void Vec2iRef::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.Vec2iRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && objectpath_ != nullptr) {
    delete objectpath_;
  }
  objectpath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec2iRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Path ObjectPath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec2iRef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.Vec2iRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::objectpath(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.Vec2iRef)
  return target;
}

size_t Vec2iRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.Vec2iRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Types.Path ObjectPath = 1;
  if (this->has_objectpath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *objectpath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec2iRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.Vec2iRef)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec2iRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec2iRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.Vec2iRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.Vec2iRef)
    MergeFrom(*source);
  }
}

void Vec2iRef::MergeFrom(const Vec2iRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.Vec2iRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_objectpath()) {
    _internal_mutable_objectpath()->::Types::Path::MergeFrom(from._internal_objectpath());
  }
}

void Vec2iRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.Vec2iRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2iRef::CopyFrom(const Vec2iRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.Vec2iRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2iRef::IsInitialized() const {
  return true;
}

void Vec2iRef::InternalSwap(Vec2iRef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(objectpath_, other->objectpath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec2iRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IntegerValue::_Internal {
 public:
  static const ::Types::Integer& value(const IntegerValue* msg);
  static const ::Types::IntegerRef& ref(const IntegerValue* msg);
};

const ::Types::Integer&
IntegerValue::_Internal::value(const IntegerValue* msg) {
  return *msg->int_value_.value_;
}
const ::Types::IntegerRef&
IntegerValue::_Internal::ref(const IntegerValue* msg) {
  return *msg->int_value_.ref_;
}
void IntegerValue::set_allocated_value(::Types::Integer* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_int_value();
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    set_has_value();
    int_value_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.IntegerValue.Value)
}
void IntegerValue::set_allocated_ref(::Types::IntegerRef* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_int_value();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    int_value_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.IntegerValue.Ref)
}
IntegerValue::IntegerValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.IntegerValue)
}
IntegerValue::IntegerValue(const IntegerValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_int_value();
  switch (from.int_value_case()) {
    case kValue: {
      _internal_mutable_value()->::Types::Integer::MergeFrom(from._internal_value());
      break;
    }
    case kRef: {
      _internal_mutable_ref()->::Types::IntegerRef::MergeFrom(from._internal_ref());
      break;
    }
    case INT_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Types.IntegerValue)
}

void IntegerValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntegerValue_Types_2eproto.base);
  clear_has_int_value();
}

IntegerValue::~IntegerValue() {
  // @@protoc_insertion_point(destructor:Types.IntegerValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IntegerValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_int_value()) {
    clear_int_value();
  }
}

void IntegerValue::ArenaDtor(void* object) {
  IntegerValue* _this = reinterpret_cast< IntegerValue* >(object);
  (void)_this;
}
void IntegerValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IntegerValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntegerValue& IntegerValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntegerValue_Types_2eproto.base);
  return *internal_default_instance();
}


void IntegerValue::clear_int_value() {
// @@protoc_insertion_point(one_of_clear_start:Types.IntegerValue)
  switch (int_value_case()) {
    case kValue: {
      if (GetArena() == nullptr) {
        delete int_value_.value_;
      }
      break;
    }
    case kRef: {
      if (GetArena() == nullptr) {
        delete int_value_.ref_;
      }
      break;
    }
    case INT_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INT_VALUE_NOT_SET;
}


void IntegerValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.IntegerValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_int_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntegerValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Integer Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.IntegerRef Ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntegerValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.IntegerValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Integer Value = 1;
  if (_internal_has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  // .Types.IntegerRef Ref = 2;
  if (_internal_has_ref()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::ref(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.IntegerValue)
  return target;
}

size_t IntegerValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.IntegerValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (int_value_case()) {
    // .Types.Integer Value = 1;
    case kValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *int_value_.value_);
      break;
    }
    // .Types.IntegerRef Ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *int_value_.ref_);
      break;
    }
    case INT_VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntegerValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.IntegerValue)
  GOOGLE_DCHECK_NE(&from, this);
  const IntegerValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntegerValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.IntegerValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.IntegerValue)
    MergeFrom(*source);
  }
}

void IntegerValue::MergeFrom(const IntegerValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.IntegerValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.int_value_case()) {
    case kValue: {
      _internal_mutable_value()->::Types::Integer::MergeFrom(from._internal_value());
      break;
    }
    case kRef: {
      _internal_mutable_ref()->::Types::IntegerRef::MergeFrom(from._internal_ref());
      break;
    }
    case INT_VALUE_NOT_SET: {
      break;
    }
  }
}

void IntegerValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.IntegerValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntegerValue::CopyFrom(const IntegerValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.IntegerValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntegerValue::IsInitialized() const {
  return true;
}

void IntegerValue::InternalSwap(IntegerValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(int_value_, other->int_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntegerValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vec2iValue::_Internal {
 public:
  static const ::Types::Vec2i& value(const Vec2iValue* msg);
  static const ::Types::Vec2iRef& ref(const Vec2iValue* msg);
};

const ::Types::Vec2i&
Vec2iValue::_Internal::value(const Vec2iValue* msg) {
  return *msg->vec2i_value_.value_;
}
const ::Types::Vec2iRef&
Vec2iValue::_Internal::ref(const Vec2iValue* msg) {
  return *msg->vec2i_value_.ref_;
}
void Vec2iValue::set_allocated_value(::Types::Vec2i* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_vec2i_value();
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    set_has_value();
    vec2i_value_.value_ = value;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.Vec2iValue.Value)
}
void Vec2iValue::set_allocated_ref(::Types::Vec2iRef* ref) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_vec2i_value();
  if (ref) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(ref);
    if (message_arena != submessage_arena) {
      ref = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ref, submessage_arena);
    }
    set_has_ref();
    vec2i_value_.ref_ = ref;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.Vec2iValue.Ref)
}
Vec2iValue::Vec2iValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.Vec2iValue)
}
Vec2iValue::Vec2iValue(const Vec2iValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_vec2i_value();
  switch (from.vec2i_value_case()) {
    case kValue: {
      _internal_mutable_value()->::Types::Vec2i::MergeFrom(from._internal_value());
      break;
    }
    case kRef: {
      _internal_mutable_ref()->::Types::Vec2iRef::MergeFrom(from._internal_ref());
      break;
    }
    case VEC2I_VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Types.Vec2iValue)
}

void Vec2iValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Vec2iValue_Types_2eproto.base);
  clear_has_vec2i_value();
}

Vec2iValue::~Vec2iValue() {
  // @@protoc_insertion_point(destructor:Types.Vec2iValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec2iValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_vec2i_value()) {
    clear_vec2i_value();
  }
}

void Vec2iValue::ArenaDtor(void* object) {
  Vec2iValue* _this = reinterpret_cast< Vec2iValue* >(object);
  (void)_this;
}
void Vec2iValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec2iValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec2iValue& Vec2iValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec2iValue_Types_2eproto.base);
  return *internal_default_instance();
}


void Vec2iValue::clear_vec2i_value() {
// @@protoc_insertion_point(one_of_clear_start:Types.Vec2iValue)
  switch (vec2i_value_case()) {
    case kValue: {
      if (GetArena() == nullptr) {
        delete vec2i_value_.value_;
      }
      break;
    }
    case kRef: {
      if (GetArena() == nullptr) {
        delete vec2i_value_.ref_;
      }
      break;
    }
    case VEC2I_VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VEC2I_VALUE_NOT_SET;
}


void Vec2iValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.Vec2iValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_vec2i_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec2iValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.Vec2i Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.Vec2iRef Ref = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec2iValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.Vec2iValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.Vec2i Value = 1;
  if (_internal_has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::value(this), target, stream);
  }

  // .Types.Vec2iRef Ref = 2;
  if (_internal_has_ref()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::ref(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.Vec2iValue)
  return target;
}

size_t Vec2iValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.Vec2iValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (vec2i_value_case()) {
    // .Types.Vec2i Value = 1;
    case kValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vec2i_value_.value_);
      break;
    }
    // .Types.Vec2iRef Ref = 2;
    case kRef: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vec2i_value_.ref_);
      break;
    }
    case VEC2I_VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec2iValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.Vec2iValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec2iValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec2iValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.Vec2iValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.Vec2iValue)
    MergeFrom(*source);
  }
}

void Vec2iValue::MergeFrom(const Vec2iValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.Vec2iValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.vec2i_value_case()) {
    case kValue: {
      _internal_mutable_value()->::Types::Vec2i::MergeFrom(from._internal_value());
      break;
    }
    case kRef: {
      _internal_mutable_ref()->::Types::Vec2iRef::MergeFrom(from._internal_ref());
      break;
    }
    case VEC2I_VALUE_NOT_SET: {
      break;
    }
  }
}

void Vec2iValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.Vec2iValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2iValue::CopyFrom(const Vec2iValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.Vec2iValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2iValue::IsInitialized() const {
  return true;
}

void Vec2iValue::InternalSwap(Vec2iValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(vec2i_value_, other->vec2i_value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec2iValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityRef::_Internal {
 public:
  static const ::Types::IntegerRef& integer(const EntityRef* msg);
  static const ::Types::Vec2iRef& vec2i(const EntityRef* msg);
  static const ::Types::PlayerRef& player(const EntityRef* msg);
  static const ::Types::CardRef& card(const EntityRef* msg);
  static const ::Types::TileRef& tile(const EntityRef* msg);
};

const ::Types::IntegerRef&
EntityRef::_Internal::integer(const EntityRef* msg) {
  return *msg->entity_ref_.integer_;
}
const ::Types::Vec2iRef&
EntityRef::_Internal::vec2i(const EntityRef* msg) {
  return *msg->entity_ref_.vec2i_;
}
const ::Types::PlayerRef&
EntityRef::_Internal::player(const EntityRef* msg) {
  return *msg->entity_ref_.player_;
}
const ::Types::CardRef&
EntityRef::_Internal::card(const EntityRef* msg) {
  return *msg->entity_ref_.card_;
}
const ::Types::TileRef&
EntityRef::_Internal::tile(const EntityRef* msg) {
  return *msg->entity_ref_.tile_;
}
void EntityRef::set_allocated_integer(::Types::IntegerRef* integer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_ref();
  if (integer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(integer);
    if (message_arena != submessage_arena) {
      integer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    entity_ref_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityRef.Integer)
}
void EntityRef::set_allocated_vec2i(::Types::Vec2iRef* vec2i) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_ref();
  if (vec2i) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vec2i);
    if (message_arena != submessage_arena) {
      vec2i = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vec2i, submessage_arena);
    }
    set_has_vec2i();
    entity_ref_.vec2i_ = vec2i;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityRef.Vec2i)
}
void EntityRef::set_allocated_player(::Types::PlayerRef* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_ref();
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    set_has_player();
    entity_ref_.player_ = player;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityRef.Player)
}
void EntityRef::set_allocated_card(::Types::CardRef* card) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_ref();
  if (card) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(card);
    if (message_arena != submessage_arena) {
      card = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    set_has_card();
    entity_ref_.card_ = card;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityRef.Card)
}
void EntityRef::set_allocated_tile(::Types::TileRef* tile) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_ref();
  if (tile) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tile);
    if (message_arena != submessage_arena) {
      tile = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tile, submessage_arena);
    }
    set_has_tile();
    entity_ref_.tile_ = tile;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityRef.Tile)
}
EntityRef::EntityRef(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.EntityRef)
}
EntityRef::EntityRef(const EntityRef& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entity_ref();
  switch (from.entity_ref_case()) {
    case kInteger: {
      _internal_mutable_integer()->::Types::IntegerRef::MergeFrom(from._internal_integer());
      break;
    }
    case kVec2I: {
      _internal_mutable_vec2i()->::Types::Vec2iRef::MergeFrom(from._internal_vec2i());
      break;
    }
    case kPlayer: {
      _internal_mutable_player()->::Types::PlayerRef::MergeFrom(from._internal_player());
      break;
    }
    case kCard: {
      _internal_mutable_card()->::Types::CardRef::MergeFrom(from._internal_card());
      break;
    }
    case kTile: {
      _internal_mutable_tile()->::Types::TileRef::MergeFrom(from._internal_tile());
      break;
    }
    case ENTITY_REF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Types.EntityRef)
}

void EntityRef::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityRef_Types_2eproto.base);
  clear_has_entity_ref();
}

EntityRef::~EntityRef() {
  // @@protoc_insertion_point(destructor:Types.EntityRef)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityRef::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entity_ref()) {
    clear_entity_ref();
  }
}

void EntityRef::ArenaDtor(void* object) {
  EntityRef* _this = reinterpret_cast< EntityRef* >(object);
  (void)_this;
}
void EntityRef::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityRef& EntityRef::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityRef_Types_2eproto.base);
  return *internal_default_instance();
}


void EntityRef::clear_entity_ref() {
// @@protoc_insertion_point(one_of_clear_start:Types.EntityRef)
  switch (entity_ref_case()) {
    case kInteger: {
      if (GetArena() == nullptr) {
        delete entity_ref_.integer_;
      }
      break;
    }
    case kVec2I: {
      if (GetArena() == nullptr) {
        delete entity_ref_.vec2i_;
      }
      break;
    }
    case kPlayer: {
      if (GetArena() == nullptr) {
        delete entity_ref_.player_;
      }
      break;
    }
    case kCard: {
      if (GetArena() == nullptr) {
        delete entity_ref_.card_;
      }
      break;
    }
    case kTile: {
      if (GetArena() == nullptr) {
        delete entity_ref_.tile_;
      }
      break;
    }
    case ENTITY_REF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_REF_NOT_SET;
}


void EntityRef::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.EntityRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entity_ref();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityRef::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.IntegerRef Integer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_integer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.Vec2iRef Vec2i = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vec2i(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.PlayerRef Player = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.CardRef Card = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.TileRef Tile = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_tile(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityRef::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.EntityRef)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.IntegerRef Integer = 1;
  if (_internal_has_integer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::integer(this), target, stream);
  }

  // .Types.Vec2iRef Vec2i = 2;
  if (_internal_has_vec2i()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vec2i(this), target, stream);
  }

  // .Types.PlayerRef Player = 3;
  if (_internal_has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::player(this), target, stream);
  }

  // .Types.CardRef Card = 4;
  if (_internal_has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::card(this), target, stream);
  }

  // .Types.TileRef Tile = 5;
  if (_internal_has_tile()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::tile(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.EntityRef)
  return target;
}

size_t EntityRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.EntityRef)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entity_ref_case()) {
    // .Types.IntegerRef Integer = 1;
    case kInteger: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_ref_.integer_);
      break;
    }
    // .Types.Vec2iRef Vec2i = 2;
    case kVec2I: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_ref_.vec2i_);
      break;
    }
    // .Types.PlayerRef Player = 3;
    case kPlayer: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_ref_.player_);
      break;
    }
    // .Types.CardRef Card = 4;
    case kCard: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_ref_.card_);
      break;
    }
    // .Types.TileRef Tile = 5;
    case kTile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_ref_.tile_);
      break;
    }
    case ENTITY_REF_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityRef::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.EntityRef)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityRef* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityRef>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.EntityRef)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.EntityRef)
    MergeFrom(*source);
  }
}

void EntityRef::MergeFrom(const EntityRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.EntityRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entity_ref_case()) {
    case kInteger: {
      _internal_mutable_integer()->::Types::IntegerRef::MergeFrom(from._internal_integer());
      break;
    }
    case kVec2I: {
      _internal_mutable_vec2i()->::Types::Vec2iRef::MergeFrom(from._internal_vec2i());
      break;
    }
    case kPlayer: {
      _internal_mutable_player()->::Types::PlayerRef::MergeFrom(from._internal_player());
      break;
    }
    case kCard: {
      _internal_mutable_card()->::Types::CardRef::MergeFrom(from._internal_card());
      break;
    }
    case kTile: {
      _internal_mutable_tile()->::Types::TileRef::MergeFrom(from._internal_tile());
      break;
    }
    case ENTITY_REF_NOT_SET: {
      break;
    }
  }
}

void EntityRef::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.EntityRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRef::CopyFrom(const EntityRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.EntityRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRef::IsInitialized() const {
  return true;
}

void EntityRef::InternalSwap(EntityRef* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entity_ref_, other->entity_ref_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityRef::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class EntityValue::_Internal {
 public:
  static const ::Types::IntegerValue& integer(const EntityValue* msg);
  static const ::Types::Vec2iValue& vec2i(const EntityValue* msg);
  static const ::Types::PlayerRef& player(const EntityValue* msg);
  static const ::Types::CardRef& card(const EntityValue* msg);
  static const ::Types::TileRef& tile(const EntityValue* msg);
};

const ::Types::IntegerValue&
EntityValue::_Internal::integer(const EntityValue* msg) {
  return *msg->entity_val_.integer_;
}
const ::Types::Vec2iValue&
EntityValue::_Internal::vec2i(const EntityValue* msg) {
  return *msg->entity_val_.vec2i_;
}
const ::Types::PlayerRef&
EntityValue::_Internal::player(const EntityValue* msg) {
  return *msg->entity_val_.player_;
}
const ::Types::CardRef&
EntityValue::_Internal::card(const EntityValue* msg) {
  return *msg->entity_val_.card_;
}
const ::Types::TileRef&
EntityValue::_Internal::tile(const EntityValue* msg) {
  return *msg->entity_val_.tile_;
}
void EntityValue::set_allocated_integer(::Types::IntegerValue* integer) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_val();
  if (integer) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(integer);
    if (message_arena != submessage_arena) {
      integer = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, integer, submessage_arena);
    }
    set_has_integer();
    entity_val_.integer_ = integer;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityValue.Integer)
}
void EntityValue::set_allocated_vec2i(::Types::Vec2iValue* vec2i) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_val();
  if (vec2i) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vec2i);
    if (message_arena != submessage_arena) {
      vec2i = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vec2i, submessage_arena);
    }
    set_has_vec2i();
    entity_val_.vec2i_ = vec2i;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityValue.Vec2i)
}
void EntityValue::set_allocated_player(::Types::PlayerRef* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_val();
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    set_has_player();
    entity_val_.player_ = player;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityValue.Player)
}
void EntityValue::set_allocated_card(::Types::CardRef* card) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_val();
  if (card) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(card);
    if (message_arena != submessage_arena) {
      card = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    set_has_card();
    entity_val_.card_ = card;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityValue.Card)
}
void EntityValue::set_allocated_tile(::Types::TileRef* tile) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_entity_val();
  if (tile) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tile);
    if (message_arena != submessage_arena) {
      tile = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tile, submessage_arena);
    }
    set_has_tile();
    entity_val_.tile_ = tile;
  }
  // @@protoc_insertion_point(field_set_allocated:Types.EntityValue.Tile)
}
EntityValue::EntityValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Types.EntityValue)
}
EntityValue::EntityValue(const EntityValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_entity_val();
  switch (from.entity_val_case()) {
    case kInteger: {
      _internal_mutable_integer()->::Types::IntegerValue::MergeFrom(from._internal_integer());
      break;
    }
    case kVec2I: {
      _internal_mutable_vec2i()->::Types::Vec2iValue::MergeFrom(from._internal_vec2i());
      break;
    }
    case kPlayer: {
      _internal_mutable_player()->::Types::PlayerRef::MergeFrom(from._internal_player());
      break;
    }
    case kCard: {
      _internal_mutable_card()->::Types::CardRef::MergeFrom(from._internal_card());
      break;
    }
    case kTile: {
      _internal_mutable_tile()->::Types::TileRef::MergeFrom(from._internal_tile());
      break;
    }
    case kTerrainValue: {
      _internal_set_terrainvalue(from._internal_terrainvalue());
      break;
    }
    case ENTITY_VAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Types.EntityValue)
}

void EntityValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EntityValue_Types_2eproto.base);
  clear_has_entity_val();
}

EntityValue::~EntityValue() {
  // @@protoc_insertion_point(destructor:Types.EntityValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EntityValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_entity_val()) {
    clear_entity_val();
  }
}

void EntityValue::ArenaDtor(void* object) {
  EntityValue* _this = reinterpret_cast< EntityValue* >(object);
  (void)_this;
}
void EntityValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EntityValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EntityValue& EntityValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EntityValue_Types_2eproto.base);
  return *internal_default_instance();
}


void EntityValue::clear_entity_val() {
// @@protoc_insertion_point(one_of_clear_start:Types.EntityValue)
  switch (entity_val_case()) {
    case kInteger: {
      if (GetArena() == nullptr) {
        delete entity_val_.integer_;
      }
      break;
    }
    case kVec2I: {
      if (GetArena() == nullptr) {
        delete entity_val_.vec2i_;
      }
      break;
    }
    case kPlayer: {
      if (GetArena() == nullptr) {
        delete entity_val_.player_;
      }
      break;
    }
    case kCard: {
      if (GetArena() == nullptr) {
        delete entity_val_.card_;
      }
      break;
    }
    case kTile: {
      if (GetArena() == nullptr) {
        delete entity_val_.tile_;
      }
      break;
    }
    case kTerrainValue: {
      // No need to clear
      break;
    }
    case ENTITY_VAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_VAL_NOT_SET;
}


void EntityValue::Clear() {
// @@protoc_insertion_point(message_clear_start:Types.EntityValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_entity_val();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EntityValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Types.IntegerValue Integer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_integer(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.Vec2iValue Vec2i = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_vec2i(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.PlayerRef Player = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.CardRef Card = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.TileRef Tile = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_tile(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Types.TerrainType TerrainValue = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_terrainvalue(static_cast<::Types::TerrainType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EntityValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Types.EntityValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Types.IntegerValue Integer = 1;
  if (_internal_has_integer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::integer(this), target, stream);
  }

  // .Types.Vec2iValue Vec2i = 2;
  if (_internal_has_vec2i()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::vec2i(this), target, stream);
  }

  // .Types.PlayerRef Player = 3;
  if (_internal_has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::player(this), target, stream);
  }

  // .Types.CardRef Card = 4;
  if (_internal_has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::card(this), target, stream);
  }

  // .Types.TileRef Tile = 5;
  if (_internal_has_tile()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::tile(this), target, stream);
  }

  // .Types.TerrainType TerrainValue = 6;
  if (_internal_has_terrainvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_terrainvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Types.EntityValue)
  return target;
}

size_t EntityValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Types.EntityValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (entity_val_case()) {
    // .Types.IntegerValue Integer = 1;
    case kInteger: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_val_.integer_);
      break;
    }
    // .Types.Vec2iValue Vec2i = 2;
    case kVec2I: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_val_.vec2i_);
      break;
    }
    // .Types.PlayerRef Player = 3;
    case kPlayer: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_val_.player_);
      break;
    }
    // .Types.CardRef Card = 4;
    case kCard: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_val_.card_);
      break;
    }
    // .Types.TileRef Tile = 5;
    case kTile: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *entity_val_.tile_);
      break;
    }
    // .Types.TerrainType TerrainValue = 6;
    case kTerrainValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_terrainvalue());
      break;
    }
    case ENTITY_VAL_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EntityValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Types.EntityValue)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EntityValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Types.EntityValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Types.EntityValue)
    MergeFrom(*source);
  }
}

void EntityValue::MergeFrom(const EntityValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Types.EntityValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.entity_val_case()) {
    case kInteger: {
      _internal_mutable_integer()->::Types::IntegerValue::MergeFrom(from._internal_integer());
      break;
    }
    case kVec2I: {
      _internal_mutable_vec2i()->::Types::Vec2iValue::MergeFrom(from._internal_vec2i());
      break;
    }
    case kPlayer: {
      _internal_mutable_player()->::Types::PlayerRef::MergeFrom(from._internal_player());
      break;
    }
    case kCard: {
      _internal_mutable_card()->::Types::CardRef::MergeFrom(from._internal_card());
      break;
    }
    case kTile: {
      _internal_mutable_tile()->::Types::TileRef::MergeFrom(from._internal_tile());
      break;
    }
    case kTerrainValue: {
      _internal_set_terrainvalue(from._internal_terrainvalue());
      break;
    }
    case ENTITY_VAL_NOT_SET: {
      break;
    }
  }
}

void EntityValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Types.EntityValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityValue::CopyFrom(const EntityValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Types.EntityValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityValue::IsInitialized() const {
  return true;
}

void EntityValue::InternalSwap(EntityValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(entity_val_, other->entity_val_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata EntityValue::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Types
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Types::Path_FieldIndecies* Arena::CreateMaybeMessage< ::Types::Path_FieldIndecies >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::Path_FieldIndecies >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::Path* Arena::CreateMaybeMessage< ::Types::Path >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::Path >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::Integer* Arena::CreateMaybeMessage< ::Types::Integer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::Integer >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::Vec2i* Arena::CreateMaybeMessage< ::Types::Vec2i >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::Vec2i >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::PlayerRef* Arena::CreateMaybeMessage< ::Types::PlayerRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::PlayerRef >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::CardRef* Arena::CreateMaybeMessage< ::Types::CardRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::CardRef >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::TileRef* Arena::CreateMaybeMessage< ::Types::TileRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::TileRef >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::IntegerRef* Arena::CreateMaybeMessage< ::Types::IntegerRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::IntegerRef >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::Vec2iRef* Arena::CreateMaybeMessage< ::Types::Vec2iRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::Vec2iRef >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::IntegerValue* Arena::CreateMaybeMessage< ::Types::IntegerValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::IntegerValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::Vec2iValue* Arena::CreateMaybeMessage< ::Types::Vec2iValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::Vec2iValue >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::EntityRef* Arena::CreateMaybeMessage< ::Types::EntityRef >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::EntityRef >(arena);
}
template<> PROTOBUF_NOINLINE ::Types::EntityValue* Arena::CreateMaybeMessage< ::Types::EntityValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Types::EntityValue >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
