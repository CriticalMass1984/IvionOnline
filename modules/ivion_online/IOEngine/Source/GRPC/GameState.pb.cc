// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameState.proto

#include <GRPC/GameState.pb.h>

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssertControlOrHeroic_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssertControllerHasPriority_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssertStackEmptyOrInstant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Boolean_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Boolean_Constant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Boolean_Set_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Card_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CardData_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Color_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Color_Constant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Color_Set_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Damage_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FilterDistance_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GainActions_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GainPower_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_GameState_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetList_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_History_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Integer_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Integer_Constant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Integer_Set_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Boolean_Insert_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Boolean_Remove_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Card_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_CardData_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Color_Insert_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Color_Remove_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Integer_Insert_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Integer_Remove_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Method_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_List_ObjectPath_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Player_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Terrain_Insert_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Terrain_Remove_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Tile_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Vec2i_Insert_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Vec2i_Remove_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<22> scc_info_Method_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Move_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectPath_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectPath_Constant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectPath_Set_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PayCost_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlayGainResources_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Player_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReduceCost_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RefundCost_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SelectExactlyOne_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SelectMultiple_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Terrain_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Terrain_Constant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Terrain_Set_Mutation_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Tile_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Travel_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Vec2i_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Vec2i_Constant_GameState_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_GameState_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Vec2i_Set_Mutation_GameState_2eproto;
namespace IvionOnline {
class HistoryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<History> _instance;
} _History_default_instance_;
class BooleanDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Boolean> _instance;
} _Boolean_default_instance_;
class List_BooleanDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Boolean> _instance;
} _List_Boolean_default_instance_;
class IntegerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Integer> _instance;
} _Integer_default_instance_;
class List_IntegerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Integer> _instance;
} _List_Integer_default_instance_;
class Vec2iDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec2i> _instance;
} _Vec2i_default_instance_;
class List_Vec2iDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Vec2i> _instance;
} _List_Vec2i_default_instance_;
class TerrainDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Terrain> _instance;
} _Terrain_default_instance_;
class List_TerrainDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Terrain> _instance;
} _List_Terrain_default_instance_;
class ColorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Color> _instance;
} _Color_default_instance_;
class List_ColorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Color> _instance;
} _List_Color_default_instance_;
class ObjectPathDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectPath> _instance;
} _ObjectPath_default_instance_;
class List_ObjectPathDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_ObjectPath> _instance;
} _List_ObjectPath_default_instance_;
class PlayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Player> _instance;
} _Player_default_instance_;
class List_PlayerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Player> _instance;
} _List_Player_default_instance_;
class CardDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Card> _instance;
} _Card_default_instance_;
class List_CardDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Card> _instance;
} _List_Card_default_instance_;
class CardDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CardData> _instance;
} _CardData_default_instance_;
class List_CardDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_CardData> _instance;
} _List_CardData_default_instance_;
class TileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Tile> _instance;
} _Tile_default_instance_;
class List_TileDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Tile> _instance;
} _List_Tile_default_instance_;
class GameStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GameState> _instance;
} _GameState_default_instance_;
class List_GameStateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_GameState> _instance;
} _List_GameState_default_instance_;
class Boolean_Set_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Boolean_Set_Mutation> _instance;
} _Boolean_Set_Mutation_default_instance_;
class List_Boolean_Insert_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Boolean_Insert_Mutation> _instance;
} _List_Boolean_Insert_Mutation_default_instance_;
class List_Boolean_Remove_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Boolean_Remove_Mutation> _instance;
} _List_Boolean_Remove_Mutation_default_instance_;
class Integer_Set_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Integer_Set_Mutation> _instance;
} _Integer_Set_Mutation_default_instance_;
class List_Integer_Insert_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Integer_Insert_Mutation> _instance;
} _List_Integer_Insert_Mutation_default_instance_;
class List_Integer_Remove_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Integer_Remove_Mutation> _instance;
} _List_Integer_Remove_Mutation_default_instance_;
class Vec2i_Set_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec2i_Set_Mutation> _instance;
} _Vec2i_Set_Mutation_default_instance_;
class List_Vec2i_Insert_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Vec2i_Insert_Mutation> _instance;
} _List_Vec2i_Insert_Mutation_default_instance_;
class List_Vec2i_Remove_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Vec2i_Remove_Mutation> _instance;
} _List_Vec2i_Remove_Mutation_default_instance_;
class Terrain_Set_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Terrain_Set_Mutation> _instance;
} _Terrain_Set_Mutation_default_instance_;
class List_Terrain_Insert_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Terrain_Insert_Mutation> _instance;
} _List_Terrain_Insert_Mutation_default_instance_;
class List_Terrain_Remove_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Terrain_Remove_Mutation> _instance;
} _List_Terrain_Remove_Mutation_default_instance_;
class Color_Set_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Color_Set_Mutation> _instance;
} _Color_Set_Mutation_default_instance_;
class List_Color_Insert_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Color_Insert_Mutation> _instance;
} _List_Color_Insert_Mutation_default_instance_;
class List_Color_Remove_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Color_Remove_Mutation> _instance;
} _List_Color_Remove_Mutation_default_instance_;
class ObjectPath_Set_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectPath_Set_Mutation> _instance;
} _ObjectPath_Set_Mutation_default_instance_;
class List_ObjectPath_Insert_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_ObjectPath_Insert_Mutation> _instance;
} _List_ObjectPath_Insert_Mutation_default_instance_;
class List_ObjectPath_Remove_MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_ObjectPath_Remove_Mutation> _instance;
} _List_ObjectPath_Remove_Mutation_default_instance_;
class MutationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Mutation> _instance;
} _Mutation_default_instance_;
class GetListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetList> _instance;
} _GetList_default_instance_;
class FilterDistanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FilterDistance> _instance;
} _FilterDistance_default_instance_;
class SelectMultipleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelectMultiple> _instance;
} _SelectMultiple_default_instance_;
class SelectExactlyOneDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SelectExactlyOne> _instance;
} _SelectExactlyOne_default_instance_;
class AssertControlOrHeroicDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssertControlOrHeroic> _instance;
} _AssertControlOrHeroic_default_instance_;
class AssertControllerHasPriorityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssertControllerHasPriority> _instance;
} _AssertControllerHasPriority_default_instance_;
class AssertStackEmptyOrInstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AssertStackEmptyOrInstant> _instance;
} _AssertStackEmptyOrInstant_default_instance_;
class ReduceCostDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReduceCost> _instance;
} _ReduceCost_default_instance_;
class PayCostDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PayCost> _instance;
} _PayCost_default_instance_;
class PlayGainResourcesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PlayGainResources> _instance;
} _PlayGainResources_default_instance_;
class RefundCostDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RefundCost> _instance;
} _RefundCost_default_instance_;
class GainActionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GainActions> _instance;
} _GainActions_default_instance_;
class GainPowerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GainPower> _instance;
} _GainPower_default_instance_;
class MoveDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Move> _instance;
} _Move_default_instance_;
class TravelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Travel> _instance;
} _Travel_default_instance_;
class DamageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Damage> _instance;
} _Damage_default_instance_;
class Boolean_ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Boolean_Constant> _instance;
} _Boolean_Constant_default_instance_;
class Integer_ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Integer_Constant> _instance;
} _Integer_Constant_default_instance_;
class Vec2i_ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vec2i_Constant> _instance;
} _Vec2i_Constant_default_instance_;
class Terrain_ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Terrain_Constant> _instance;
} _Terrain_Constant_default_instance_;
class Color_ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Color_Constant> _instance;
} _Color_Constant_default_instance_;
class ObjectPath_ConstantDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectPath_Constant> _instance;
} _ObjectPath_Constant_default_instance_;
class MethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Method> _instance;
} _Method_default_instance_;
class List_MethodDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<List_Method> _instance;
} _List_Method_default_instance_;
}  // namespace IvionOnline
static void InitDefaultsscc_info_AssertControlOrHeroic_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_AssertControlOrHeroic_default_instance_;
    new (ptr) ::IvionOnline::AssertControlOrHeroic();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssertControlOrHeroic_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssertControlOrHeroic_GameState_2eproto}, {}};

static void InitDefaultsscc_info_AssertControllerHasPriority_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_AssertControllerHasPriority_default_instance_;
    new (ptr) ::IvionOnline::AssertControllerHasPriority();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssertControllerHasPriority_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssertControllerHasPriority_GameState_2eproto}, {}};

static void InitDefaultsscc_info_AssertStackEmptyOrInstant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_AssertStackEmptyOrInstant_default_instance_;
    new (ptr) ::IvionOnline::AssertStackEmptyOrInstant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AssertStackEmptyOrInstant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AssertStackEmptyOrInstant_GameState_2eproto}, {}};

static void InitDefaultsscc_info_Boolean_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Boolean_default_instance_;
    new (ptr) ::IvionOnline::Boolean();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Boolean_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Boolean_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Boolean_Constant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Boolean_Constant_default_instance_;
    new (ptr) ::IvionOnline::Boolean_Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Boolean_Constant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Boolean_Constant_GameState_2eproto}, {
      &scc_info_Boolean_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Boolean_Set_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Boolean_Set_Mutation_default_instance_;
    new (ptr) ::IvionOnline::Boolean_Set_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Boolean_Set_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Boolean_Set_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Boolean_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Card_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Card_default_instance_;
    new (ptr) ::IvionOnline::Card();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Card_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Card_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_CardData_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_CardData_default_instance_;
    new (ptr) ::IvionOnline::CardData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_CardData_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_CardData_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Integer_GameState_2eproto.base,
      &scc_info_Boolean_GameState_2eproto.base,
      &scc_info_List_Method_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Color_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Color_default_instance_;
    new (ptr) ::IvionOnline::Color();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Color_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Color_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Color_Constant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Color_Constant_default_instance_;
    new (ptr) ::IvionOnline::Color_Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Color_Constant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Color_Constant_GameState_2eproto}, {
      &scc_info_Color_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Color_Set_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Color_Set_Mutation_default_instance_;
    new (ptr) ::IvionOnline::Color_Set_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Color_Set_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Color_Set_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Color_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Damage_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Damage_default_instance_;
    new (ptr) ::IvionOnline::Damage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Damage_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Damage_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_FilterDistance_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_FilterDistance_default_instance_;
    new (ptr) ::IvionOnline::FilterDistance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FilterDistance_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FilterDistance_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_GainActions_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_GainActions_default_instance_;
    new (ptr) ::IvionOnline::GainActions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GainActions_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GainActions_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_GainPower_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_GainPower_default_instance_;
    new (ptr) ::IvionOnline::GainPower();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GainPower_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GainPower_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_GameState_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_GameState_default_instance_;
    new (ptr) ::IvionOnline::GameState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_GameState_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, 0, InitDefaultsscc_info_GameState_GameState_2eproto}, {
      &scc_info_List_Player_GameState_2eproto.base,
      &scc_info_List_Card_GameState_2eproto.base,
      &scc_info_List_CardData_GameState_2eproto.base,
      &scc_info_List_Tile_GameState_2eproto.base,
      &scc_info_List_ObjectPath_GameState_2eproto.base,
      &scc_info_Integer_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_GetList_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_GetList_default_instance_;
    new (ptr) ::IvionOnline::GetList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetList_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetList_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_List_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_History_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_History_default_instance_;
    new (ptr) ::IvionOnline::History();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_History_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_History_GameState_2eproto}, {
      &scc_info_Mutation_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Integer_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Integer_default_instance_;
    new (ptr) ::IvionOnline::Integer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Integer_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Integer_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Integer_Constant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Integer_Constant_default_instance_;
    new (ptr) ::IvionOnline::Integer_Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Integer_Constant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Integer_Constant_GameState_2eproto}, {
      &scc_info_Integer_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Integer_Set_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Integer_Set_Mutation_default_instance_;
    new (ptr) ::IvionOnline::Integer_Set_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Integer_Set_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Integer_Set_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Integer_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Boolean_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Boolean_default_instance_;
    new (ptr) ::IvionOnline::List_Boolean();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Boolean_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Boolean_GameState_2eproto}, {
      &scc_info_Boolean_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Boolean_Insert_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Boolean_Insert_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Boolean_Insert_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Boolean_Insert_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Boolean_Insert_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Boolean_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Boolean_Remove_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Boolean_Remove_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Boolean_Remove_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Boolean_Remove_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Boolean_Remove_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Boolean_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Card_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Card_default_instance_;
    new (ptr) ::IvionOnline::List_Card();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Card_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Card_GameState_2eproto}, {
      &scc_info_Card_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_CardData_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_CardData_default_instance_;
    new (ptr) ::IvionOnline::List_CardData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_CardData_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_CardData_GameState_2eproto}, {
      &scc_info_CardData_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Color_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Color_default_instance_;
    new (ptr) ::IvionOnline::List_Color();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Color_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Color_GameState_2eproto}, {
      &scc_info_Color_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Color_Insert_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Color_Insert_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Color_Insert_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Color_Insert_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Color_Insert_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Color_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Color_Remove_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Color_Remove_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Color_Remove_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Color_Remove_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Color_Remove_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Color_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_GameState_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_GameState_default_instance_;
    new (ptr) ::IvionOnline::List_GameState();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_GameState_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_GameState_GameState_2eproto}, {
      &scc_info_GameState_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Integer_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Integer_default_instance_;
    new (ptr) ::IvionOnline::List_Integer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Integer_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Integer_GameState_2eproto}, {
      &scc_info_Integer_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Integer_Insert_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Integer_Insert_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Integer_Insert_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Integer_Insert_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Integer_Insert_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Integer_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Integer_Remove_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Integer_Remove_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Integer_Remove_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Integer_Remove_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Integer_Remove_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Integer_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Method_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Method_default_instance_;
    new (ptr) ::IvionOnline::List_Method();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Method_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Method_GameState_2eproto}, {
      &scc_info_Method_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_ObjectPath_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_ObjectPath_default_instance_;
    new (ptr) ::IvionOnline::List_ObjectPath();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_List_ObjectPath_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_List_ObjectPath_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_ObjectPath_Insert_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_ObjectPath_Insert_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_ObjectPath_Remove_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_ObjectPath_Remove_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Player_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Player_default_instance_;
    new (ptr) ::IvionOnline::List_Player();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Player_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Player_GameState_2eproto}, {
      &scc_info_Player_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Terrain_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Terrain_default_instance_;
    new (ptr) ::IvionOnline::List_Terrain();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Terrain_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Terrain_GameState_2eproto}, {
      &scc_info_Terrain_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Terrain_Insert_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Terrain_Insert_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Terrain_Insert_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Terrain_Insert_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Terrain_Insert_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Terrain_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Terrain_Remove_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Terrain_Remove_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Terrain_Remove_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Terrain_Remove_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Terrain_Remove_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Terrain_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Tile_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Tile_default_instance_;
    new (ptr) ::IvionOnline::List_Tile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Tile_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Tile_GameState_2eproto}, {
      &scc_info_Tile_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Vec2i_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Vec2i_default_instance_;
    new (ptr) ::IvionOnline::List_Vec2i();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Vec2i_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Vec2i_GameState_2eproto}, {
      &scc_info_Vec2i_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Vec2i_Insert_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Vec2i_Insert_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Vec2i_Insert_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Vec2i_Insert_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Vec2i_Insert_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Vec2i_GameState_2eproto.base,}};

static void InitDefaultsscc_info_List_Vec2i_Remove_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_List_Vec2i_Remove_Mutation_default_instance_;
    new (ptr) ::IvionOnline::List_Vec2i_Remove_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_List_Vec2i_Remove_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_List_Vec2i_Remove_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Vec2i_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Method_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Method_default_instance_;
    new (ptr) ::IvionOnline::Method();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<22> scc_info_Method_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 22, 0, InitDefaultsscc_info_Method_GameState_2eproto}, {
      &scc_info_GetList_GameState_2eproto.base,
      &scc_info_FilterDistance_GameState_2eproto.base,
      &scc_info_SelectMultiple_GameState_2eproto.base,
      &scc_info_SelectExactlyOne_GameState_2eproto.base,
      &scc_info_AssertControlOrHeroic_GameState_2eproto.base,
      &scc_info_AssertControllerHasPriority_GameState_2eproto.base,
      &scc_info_AssertStackEmptyOrInstant_GameState_2eproto.base,
      &scc_info_ReduceCost_GameState_2eproto.base,
      &scc_info_PayCost_GameState_2eproto.base,
      &scc_info_PlayGainResources_GameState_2eproto.base,
      &scc_info_RefundCost_GameState_2eproto.base,
      &scc_info_GainActions_GameState_2eproto.base,
      &scc_info_GainPower_GameState_2eproto.base,
      &scc_info_Move_GameState_2eproto.base,
      &scc_info_Travel_GameState_2eproto.base,
      &scc_info_Damage_GameState_2eproto.base,
      &scc_info_Boolean_Constant_GameState_2eproto.base,
      &scc_info_Integer_Constant_GameState_2eproto.base,
      &scc_info_Vec2i_Constant_GameState_2eproto.base,
      &scc_info_Terrain_Constant_GameState_2eproto.base,
      &scc_info_Color_Constant_GameState_2eproto.base,
      &scc_info_ObjectPath_Constant_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Move_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Move_default_instance_;
    new (ptr) ::IvionOnline::Move();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Move_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Move_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Mutation_default_instance_;
    new (ptr) ::IvionOnline::Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<18> scc_info_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 18, 0, InitDefaultsscc_info_Mutation_GameState_2eproto}, {
      &scc_info_Boolean_Set_Mutation_GameState_2eproto.base,
      &scc_info_List_Boolean_Insert_Mutation_GameState_2eproto.base,
      &scc_info_List_Boolean_Remove_Mutation_GameState_2eproto.base,
      &scc_info_Integer_Set_Mutation_GameState_2eproto.base,
      &scc_info_List_Integer_Insert_Mutation_GameState_2eproto.base,
      &scc_info_List_Integer_Remove_Mutation_GameState_2eproto.base,
      &scc_info_Vec2i_Set_Mutation_GameState_2eproto.base,
      &scc_info_List_Vec2i_Insert_Mutation_GameState_2eproto.base,
      &scc_info_List_Vec2i_Remove_Mutation_GameState_2eproto.base,
      &scc_info_Terrain_Set_Mutation_GameState_2eproto.base,
      &scc_info_List_Terrain_Insert_Mutation_GameState_2eproto.base,
      &scc_info_List_Terrain_Remove_Mutation_GameState_2eproto.base,
      &scc_info_Color_Set_Mutation_GameState_2eproto.base,
      &scc_info_List_Color_Insert_Mutation_GameState_2eproto.base,
      &scc_info_List_Color_Remove_Mutation_GameState_2eproto.base,
      &scc_info_ObjectPath_Set_Mutation_GameState_2eproto.base,
      &scc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto.base,
      &scc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto.base,}};

static void InitDefaultsscc_info_ObjectPath_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_ObjectPath_default_instance_;
    new (ptr) ::IvionOnline::ObjectPath();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectPath_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectPath_GameState_2eproto}, {}};

static void InitDefaultsscc_info_ObjectPath_Constant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_ObjectPath_Constant_default_instance_;
    new (ptr) ::IvionOnline::ObjectPath_Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectPath_Constant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectPath_Constant_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_ObjectPath_Set_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_ObjectPath_Set_Mutation_default_instance_;
    new (ptr) ::IvionOnline::ObjectPath_Set_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ObjectPath_Set_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ObjectPath_Set_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_PayCost_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_PayCost_default_instance_;
    new (ptr) ::IvionOnline::PayCost();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PayCost_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PayCost_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_PlayGainResources_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_PlayGainResources_default_instance_;
    new (ptr) ::IvionOnline::PlayGainResources();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PlayGainResources_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PlayGainResources_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Player_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Player_default_instance_;
    new (ptr) ::IvionOnline::Player();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_Player_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_Player_GameState_2eproto}, {
      &scc_info_Integer_GameState_2eproto.base,
      &scc_info_Vec2i_GameState_2eproto.base,
      &scc_info_List_ObjectPath_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_ReduceCost_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_ReduceCost_default_instance_;
    new (ptr) ::IvionOnline::ReduceCost();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReduceCost_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ReduceCost_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_RefundCost_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_RefundCost_default_instance_;
    new (ptr) ::IvionOnline::RefundCost();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RefundCost_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RefundCost_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_SelectExactlyOne_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_SelectExactlyOne_default_instance_;
    new (ptr) ::IvionOnline::SelectExactlyOne();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SelectExactlyOne_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SelectExactlyOne_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_SelectMultiple_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_SelectMultiple_default_instance_;
    new (ptr) ::IvionOnline::SelectMultiple();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SelectMultiple_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SelectMultiple_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_List_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Terrain_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Terrain_default_instance_;
    new (ptr) ::IvionOnline::Terrain();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Terrain_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Terrain_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Terrain_Constant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Terrain_Constant_default_instance_;
    new (ptr) ::IvionOnline::Terrain_Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Terrain_Constant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Terrain_Constant_GameState_2eproto}, {
      &scc_info_Terrain_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Terrain_Set_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Terrain_Set_Mutation_default_instance_;
    new (ptr) ::IvionOnline::Terrain_Set_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Terrain_Set_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Terrain_Set_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Terrain_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Tile_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Tile_default_instance_;
    new (ptr) ::IvionOnline::Tile();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_Tile_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_Tile_GameState_2eproto}, {
      &scc_info_Vec2i_GameState_2eproto.base,
      &scc_info_Terrain_GameState_2eproto.base,
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Travel_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Travel_default_instance_;
    new (ptr) ::IvionOnline::Travel();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Travel_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Travel_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Vec2i_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Vec2i_default_instance_;
    new (ptr) ::IvionOnline::Vec2i();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Vec2i_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Vec2i_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Vec2i_Constant_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Vec2i_Constant_default_instance_;
    new (ptr) ::IvionOnline::Vec2i_Constant();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Vec2i_Constant_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Vec2i_Constant_GameState_2eproto}, {
      &scc_info_Vec2i_GameState_2eproto.base,}};

static void InitDefaultsscc_info_Vec2i_Set_Mutation_GameState_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::IvionOnline::_Vec2i_Set_Mutation_default_instance_;
    new (ptr) ::IvionOnline::Vec2i_Set_Mutation();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Vec2i_Set_Mutation_GameState_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Vec2i_Set_Mutation_GameState_2eproto}, {
      &scc_info_ObjectPath_GameState_2eproto.base,
      &scc_info_Vec2i_GameState_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_GameState_2eproto[66];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_GameState_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_GameState_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_GameState_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::History, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::History, mutations_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::History, branches_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::History, is_good_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean, value_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer, value_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i, x_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i, y_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain, value_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color, value_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath, object_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, uid_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, index_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, indexstr_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, displayname_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, health_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, actions_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, power_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, initiative_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, mitigate_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, slow_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, silence_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, disarm_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, position_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, hand_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, deck_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, discard_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, feats_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxhealth_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxactions_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxpower_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxslow_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxsilence_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxdisarm_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, maxmitigate_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Player, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Player, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Player, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Player, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Card, cardstats_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Card, index_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Card, indexstr_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Card, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Card, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Card, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Card, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Card, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, owner_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, controller_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, actioncost_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, powercost_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, range_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, affectedbyslow_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, affectedbysilence_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, affectedbydisarm_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, attached_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, omnipresenteffect_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, passiveeffect_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, feateffect_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, playeffect_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, resolveeffect_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::CardData, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_CardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_CardData, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_CardData, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_CardData, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, position_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, index_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, indexstr_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, terrain_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Tile, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Tile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Tile, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Tile, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Tile, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, players_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, cards_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, carddata_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, tiles_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, field_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, turnnumber_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GameState, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_GameState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_GameState, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_GameState, abspath_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_GameState, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean_Set_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean_Set_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean_Set_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean_Set_Mutation, oldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Insert_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Insert_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Insert_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Insert_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Remove_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Remove_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Remove_Mutation, oldvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Boolean_Remove_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer_Set_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer_Set_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer_Set_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer_Set_Mutation, oldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Insert_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Insert_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Insert_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Insert_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Remove_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Remove_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Remove_Mutation, oldvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Integer_Remove_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i_Set_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i_Set_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i_Set_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i_Set_Mutation, oldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Insert_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Insert_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Insert_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Insert_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Remove_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Remove_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Remove_Mutation, oldvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Vec2i_Remove_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain_Set_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain_Set_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain_Set_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain_Set_Mutation, oldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Insert_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Insert_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Insert_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Insert_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Remove_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Remove_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Remove_Mutation, oldvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Terrain_Remove_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color_Set_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color_Set_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color_Set_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color_Set_Mutation, oldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Insert_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Insert_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Insert_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Insert_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Remove_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Remove_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Remove_Mutation, oldvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Color_Remove_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath_Set_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath_Set_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath_Set_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath_Set_Mutation, oldvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Insert_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Insert_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Insert_Mutation, newvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Insert_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Remove_Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Remove_Mutation, path_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Remove_Mutation, oldvalue_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_ObjectPath_Remove_Mutation, index_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Mutation, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Mutation, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Mutation, mut_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GetList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GetList, source_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GetList, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::FilterDistance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::FilterDistance, targets_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::FilterDistance, rangesources_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::FilterDistance, maxdistance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectMultiple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectMultiple, source_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectMultiple, number_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectMultiple, upto_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectMultiple, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectExactlyOne, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectExactlyOne, source_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::SelectExactlyOne, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::AssertControlOrHeroic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::AssertControllerHasPriority, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::AssertStackEmptyOrInstant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ReduceCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ReduceCost, card_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ReduceCost, actioncostreduction_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ReduceCost, powercostreduction_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ReduceCost, costreduction_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ReduceCost, free_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::PayCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::PayCost, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::PayCost, card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::PlayGainResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::PlayGainResources, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::PlayGainResources, card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::RefundCost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::RefundCost, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::RefundCost, card_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GainActions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GainActions, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GainActions, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GainPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GainPower, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::GainPower, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Move, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Move, destination_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Travel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Travel, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Travel, destination_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Damage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Damage, player_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Damage, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean_Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Boolean_Constant, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer_Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Integer_Constant, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i_Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Vec2i_Constant, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain_Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Terrain_Constant, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color_Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Color_Constant, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath_Constant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::ObjectPath_Constant, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Method, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Method, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::IvionOnline::Method, methods_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Method, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Method, element_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Method, name_),
  PROTOBUF_FIELD_OFFSET(::IvionOnline::List_Method, abspath_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::IvionOnline::History)},
  { 8, -1, sizeof(::IvionOnline::Boolean)},
  { 16, -1, sizeof(::IvionOnline::List_Boolean)},
  { 24, -1, sizeof(::IvionOnline::Integer)},
  { 32, -1, sizeof(::IvionOnline::List_Integer)},
  { 40, -1, sizeof(::IvionOnline::Vec2i)},
  { 49, -1, sizeof(::IvionOnline::List_Vec2i)},
  { 57, -1, sizeof(::IvionOnline::Terrain)},
  { 65, -1, sizeof(::IvionOnline::List_Terrain)},
  { 73, -1, sizeof(::IvionOnline::Color)},
  { 81, -1, sizeof(::IvionOnline::List_Color)},
  { 89, -1, sizeof(::IvionOnline::ObjectPath)},
  { 96, -1, sizeof(::IvionOnline::List_ObjectPath)},
  { 104, -1, sizeof(::IvionOnline::Player)},
  { 135, -1, sizeof(::IvionOnline::List_Player)},
  { 143, -1, sizeof(::IvionOnline::Card)},
  { 153, -1, sizeof(::IvionOnline::List_Card)},
  { 161, -1, sizeof(::IvionOnline::CardData)},
  { 182, -1, sizeof(::IvionOnline::List_CardData)},
  { 190, -1, sizeof(::IvionOnline::Tile)},
  { 201, -1, sizeof(::IvionOnline::List_Tile)},
  { 209, -1, sizeof(::IvionOnline::GameState)},
  { 222, -1, sizeof(::IvionOnline::List_GameState)},
  { 230, -1, sizeof(::IvionOnline::Boolean_Set_Mutation)},
  { 238, -1, sizeof(::IvionOnline::List_Boolean_Insert_Mutation)},
  { 246, -1, sizeof(::IvionOnline::List_Boolean_Remove_Mutation)},
  { 254, -1, sizeof(::IvionOnline::Integer_Set_Mutation)},
  { 262, -1, sizeof(::IvionOnline::List_Integer_Insert_Mutation)},
  { 270, -1, sizeof(::IvionOnline::List_Integer_Remove_Mutation)},
  { 278, -1, sizeof(::IvionOnline::Vec2i_Set_Mutation)},
  { 286, -1, sizeof(::IvionOnline::List_Vec2i_Insert_Mutation)},
  { 294, -1, sizeof(::IvionOnline::List_Vec2i_Remove_Mutation)},
  { 302, -1, sizeof(::IvionOnline::Terrain_Set_Mutation)},
  { 310, -1, sizeof(::IvionOnline::List_Terrain_Insert_Mutation)},
  { 318, -1, sizeof(::IvionOnline::List_Terrain_Remove_Mutation)},
  { 326, -1, sizeof(::IvionOnline::Color_Set_Mutation)},
  { 334, -1, sizeof(::IvionOnline::List_Color_Insert_Mutation)},
  { 342, -1, sizeof(::IvionOnline::List_Color_Remove_Mutation)},
  { 350, -1, sizeof(::IvionOnline::ObjectPath_Set_Mutation)},
  { 358, -1, sizeof(::IvionOnline::List_ObjectPath_Insert_Mutation)},
  { 366, -1, sizeof(::IvionOnline::List_ObjectPath_Remove_Mutation)},
  { 374, -1, sizeof(::IvionOnline::Mutation)},
  { 398, -1, sizeof(::IvionOnline::GetList)},
  { 405, -1, sizeof(::IvionOnline::FilterDistance)},
  { 413, -1, sizeof(::IvionOnline::SelectMultiple)},
  { 422, -1, sizeof(::IvionOnline::SelectExactlyOne)},
  { 429, -1, sizeof(::IvionOnline::AssertControlOrHeroic)},
  { 434, -1, sizeof(::IvionOnline::AssertControllerHasPriority)},
  { 439, -1, sizeof(::IvionOnline::AssertStackEmptyOrInstant)},
  { 444, -1, sizeof(::IvionOnline::ReduceCost)},
  { 454, -1, sizeof(::IvionOnline::PayCost)},
  { 461, -1, sizeof(::IvionOnline::PlayGainResources)},
  { 468, -1, sizeof(::IvionOnline::RefundCost)},
  { 475, -1, sizeof(::IvionOnline::GainActions)},
  { 482, -1, sizeof(::IvionOnline::GainPower)},
  { 489, -1, sizeof(::IvionOnline::Move)},
  { 496, -1, sizeof(::IvionOnline::Travel)},
  { 503, -1, sizeof(::IvionOnline::Damage)},
  { 510, -1, sizeof(::IvionOnline::Boolean_Constant)},
  { 516, -1, sizeof(::IvionOnline::Integer_Constant)},
  { 522, -1, sizeof(::IvionOnline::Vec2i_Constant)},
  { 528, -1, sizeof(::IvionOnline::Terrain_Constant)},
  { 534, -1, sizeof(::IvionOnline::Color_Constant)},
  { 540, -1, sizeof(::IvionOnline::ObjectPath_Constant)},
  { 546, -1, sizeof(::IvionOnline::Method)},
  { 574, -1, sizeof(::IvionOnline::List_Method)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_History_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Boolean_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Boolean_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Integer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Integer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Vec2i_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Vec2i_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Terrain_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Terrain_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Color_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Color_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_ObjectPath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_ObjectPath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Player_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Player_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Card_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Card_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_CardData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_CardData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Tile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Tile_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_GameState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_GameState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Boolean_Set_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Boolean_Insert_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Boolean_Remove_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Integer_Set_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Integer_Insert_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Integer_Remove_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Vec2i_Set_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Vec2i_Insert_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Vec2i_Remove_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Terrain_Set_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Terrain_Insert_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Terrain_Remove_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Color_Set_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Color_Insert_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Color_Remove_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_ObjectPath_Set_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_ObjectPath_Insert_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_ObjectPath_Remove_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Mutation_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_GetList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_FilterDistance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_SelectMultiple_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_SelectExactlyOne_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_AssertControlOrHeroic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_AssertControllerHasPriority_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_AssertStackEmptyOrInstant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_ReduceCost_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_PayCost_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_PlayGainResources_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_RefundCost_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_GainActions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_GainPower_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Move_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Travel_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Damage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Boolean_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Integer_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Vec2i_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Terrain_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Color_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_ObjectPath_Constant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_Method_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::IvionOnline::_List_Method_default_instance_),
};

const char descriptor_table_protodef_GameState_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017GameState.proto\022\013IvionOnline\"l\n\007Histor"
  "y\022(\n\tMutations\030\001 \003(\0132\025.IvionOnline.Mutat"
  "ion\022&\n\010Branches\030\002 \003(\0132\024.IvionOnline.Hist"
  "ory\022\017\n\007Is_Good\030\003 \001(\010\"P\n\007Boolean\022\r\n\005Value"
  "\030\001 \001(\010\022(\n\007AbsPath\030\002 \001(\0132\027.IvionOnline.Ob"
  "jectPath\022\014\n\004Name\030\003 \001(\t\"m\n\014List_Boolean\022%"
  "\n\007element\030\001 \003(\0132\024.IvionOnline.Boolean\022(\n"
  "\007AbsPath\030\002 \001(\0132\027.IvionOnline.ObjectPath\022"
  "\014\n\004Name\030\003 \001(\t\"P\n\007Integer\022\r\n\005Value\030\001 \001(\005\022"
  "(\n\007AbsPath\030\002 \001(\0132\027.IvionOnline.ObjectPat"
  "h\022\014\n\004Name\030\003 \001(\t\"m\n\014List_Integer\022%\n\007eleme"
  "nt\030\001 \003(\0132\024.IvionOnline.Integer\022(\n\007AbsPat"
  "h\030\002 \001(\0132\027.IvionOnline.ObjectPath\022\014\n\004Name"
  "\030\003 \001(\t\"U\n\005Vec2i\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022(\n"
  "\007AbsPath\030\003 \001(\0132\027.IvionOnline.ObjectPath\022"
  "\014\n\004Name\030\004 \001(\t\"i\n\nList_Vec2i\022#\n\007element\030\001"
  " \003(\0132\022.IvionOnline.Vec2i\022(\n\007AbsPath\030\002 \001("
  "\0132\027.IvionOnline.ObjectPath\022\014\n\004Name\030\003 \001(\t"
  "\"\322\001\n\007Terrain\0220\n\005Value\030\001 \001(\0162!.IvionOnlin"
  "e.Terrain.Terrain_Type\022(\n\007AbsPath\030\003 \001(\0132"
  "\027.IvionOnline.ObjectPath\022\014\n\004Name\030\004 \001(\t\"]"
  "\n\014Terrain_Type\022\025\n\021TERRAIN_TYPE_NONE\020\000\022\032\n"
  "\026TERRAIN_TYPE_DIFFICULT\020\001\022\032\n\026TERRAIN_TYP"
  "E_ENCHANTED\020\002\"m\n\014List_Terrain\022%\n\007element"
  "\030\001 \003(\0132\024.IvionOnline.Terrain\022(\n\007AbsPath\030"
  "\002 \001(\0132\027.IvionOnline.ObjectPath\022\014\n\004Name\030\003"
  " \001(\t\"\355\001\n\005Color\022,\n\005Value\030\001 \001(\0162\035.IvionOnl"
  "ine.Color.Color_Type\022(\n\007AbsPath\030\003 \001(\0132\027."
  "IvionOnline.ObjectPath\022\014\n\004Name\030\004 \001(\t\"~\n\n"
  "Color_Type\022\016\n\nCOLOR_NONE\020\000\022\016\n\nCOLOR_GRAY"
  "\020\001\022\017\n\013COLOR_BLACK\020\002\022\r\n\tCOLOR_RED\020\003\022\017\n\013CO"
  "LOR_GREEN\020\004\022\016\n\nCOLOR_BLUE\020\005\022\017\n\013COLOR_WHI"
  "TE\020\006\"i\n\nList_Color\022#\n\007element\030\001 \003(\0132\022.Iv"
  "ionOnline.Color\022(\n\007AbsPath\030\002 \001(\0132\027.Ivion"
  "Online.ObjectPath\022\014\n\004Name\030\003 \001(\t\"H\n\nObjec"
  "tPath\022\014\n\004Path\030\001 \003(\t\022,\n\013Object_Type\030\002 \001(\016"
  "2\027.IvionOnline.ObjectType\"s\n\017List_Object"
  "Path\022(\n\007element\030\001 \003(\0132\027.IvionOnline.Obje"
  "ctPath\022(\n\007AbsPath\030\002 \001(\0132\027.IvionOnline.Ob"
  "jectPath\022\014\n\004Name\030\003 \001(\t\"\262\007\n\006Player\022\013\n\003UID"
  "\030\001 \001(\t\022\r\n\005Index\030\002 \001(\005\022\020\n\010IndexStr\030\003 \001(\t\022"
  "\023\n\013DisplayName\030\004 \001(\t\022$\n\006Health\030\005 \001(\0132\024.I"
  "vionOnline.Integer\022%\n\007Actions\030\006 \001(\0132\024.Iv"
  "ionOnline.Integer\022#\n\005Power\030\007 \001(\0132\024.Ivion"
  "Online.Integer\022(\n\nInitiative\030\010 \001(\0132\024.Ivi"
  "onOnline.Integer\022&\n\010Mitigate\030\t \001(\0132\024.Ivi"
  "onOnline.Integer\022\"\n\004Slow\030\n \001(\0132\024.IvionOn"
  "line.Integer\022%\n\007Silence\030\013 \001(\0132\024.IvionOnl"
  "ine.Integer\022$\n\006Disarm\030\014 \001(\0132\024.IvionOnlin"
  "e.Integer\022$\n\010Position\030\r \001(\0132\022.IvionOnlin"
  "e.Vec2i\022*\n\004Hand\030\016 \001(\0132\034.IvionOnline.List"
  "_ObjectPath\022*\n\004Deck\030\017 \001(\0132\034.IvionOnline."
  "List_ObjectPath\022-\n\007Discard\030\020 \001(\0132\034.Ivion"
  "Online.List_ObjectPath\022+\n\005Feats\030\021 \001(\0132\034."
  "IvionOnline.List_ObjectPath\022\'\n\tMaxHealth"
  "\030\022 \001(\0132\024.IvionOnline.Integer\022(\n\nMaxActio"
  "ns\030\023 \001(\0132\024.IvionOnline.Integer\022&\n\010MaxPow"
  "er\030\024 \001(\0132\024.IvionOnline.Integer\022%\n\007MaxSlo"
  "w\030\025 \001(\0132\024.IvionOnline.Integer\022(\n\nMaxSile"
  "nce\030\026 \001(\0132\024.IvionOnline.Integer\022\'\n\tMaxDi"
  "sarm\030\027 \001(\0132\024.IvionOnline.Integer\022)\n\013MaxM"
  "itigate\030\030 \001(\0132\024.IvionOnline.Integer\022(\n\007A"
  "bsPath\030\031 \001(\0132\027.IvionOnline.ObjectPath\022\014\n"
  "\004Name\030\032 \001(\t\"k\n\013List_Player\022$\n\007element\030\001 "
  "\003(\0132\023.IvionOnline.Player\022(\n\007AbsPath\030\002 \001("
  "\0132\027.IvionOnline.ObjectPath\022\014\n\004Name\030\003 \001(\t"
  "\"\213\001\n\004Card\022*\n\tCardStats\030\001 \001(\0132\027.IvionOnli"
  "ne.ObjectPath\022\r\n\005Index\030\002 \001(\005\022\020\n\010IndexStr"
  "\030\003 \001(\t\022(\n\007AbsPath\030\004 \001(\0132\027.IvionOnline.Ob"
  "jectPath\022\014\n\004Name\030\005 \001(\t\"g\n\tList_Card\022\"\n\007e"
  "lement\030\001 \003(\0132\021.IvionOnline.Card\022(\n\007AbsPa"
  "th\030\002 \001(\0132\027.IvionOnline.ObjectPath\022\014\n\004Nam"
  "e\030\003 \001(\t\"\274\005\n\010CardData\022&\n\005Owner\030\001 \001(\0132\027.Iv"
  "ionOnline.ObjectPath\022+\n\nController\030\002 \001(\013"
  "2\027.IvionOnline.ObjectPath\022(\n\nActionCost\030"
  "\003 \001(\0132\024.IvionOnline.Integer\022\'\n\tPowerCost"
  "\030\004 \001(\0132\024.IvionOnline.Integer\022#\n\005Range\030\005 "
  "\001(\0132\024.IvionOnline.Integer\022,\n\016AffectedByS"
  "low\030\006 \001(\0132\024.IvionOnline.Boolean\022/\n\021Affec"
  "tedBySilence\030\007 \001(\0132\024.IvionOnline.Boolean"
  "\022.\n\020AffectedByDisarm\030\010 \001(\0132\024.IvionOnline"
  ".Boolean\022)\n\010Attached\030\t \001(\0132\027.IvionOnline"
  ".ObjectPath\0223\n\021OmniPresentEffect\030\n \001(\0132\030"
  ".IvionOnline.List_Method\022/\n\rPassiveEffec"
  "t\030\013 \001(\0132\030.IvionOnline.List_Method\022,\n\nFea"
  "tEffect\030\014 \001(\0132\030.IvionOnline.List_Method\022"
  ",\n\nPlayEffect\030\r \001(\0132\030.IvionOnline.List_M"
  "ethod\022/\n\rResolveEffect\030\016 \001(\0132\030.IvionOnli"
  "ne.List_Method\022(\n\007AbsPath\030\017 \001(\0132\027.IvionO"
  "nline.ObjectPath\022\014\n\004Name\030\020 \001(\t\"o\n\rList_C"
  "ardData\022&\n\007element\030\001 \003(\0132\025.IvionOnline.C"
  "ardData\022(\n\007AbsPath\030\002 \001(\0132\027.IvionOnline.O"
  "bjectPath\022\014\n\004Name\030\003 \001(\t\"\254\001\n\004Tile\022$\n\010Posi"
  "tion\030\001 \001(\0132\022.IvionOnline.Vec2i\022\r\n\005Index\030"
  "\002 \001(\005\022\020\n\010IndexStr\030\003 \001(\t\022%\n\007Terrain\030\004 \001(\013"
  "2\024.IvionOnline.Terrain\022(\n\007AbsPath\030\005 \001(\0132"
  "\027.IvionOnline.ObjectPath\022\014\n\004Name\030\006 \001(\t\"g"
  "\n\tList_Tile\022\"\n\007element\030\001 \003(\0132\021.IvionOnli"
  "ne.Tile\022(\n\007AbsPath\030\002 \001(\0132\027.IvionOnline.O"
  "bjectPath\022\014\n\004Name\030\003 \001(\t\"\301\002\n\tGameState\022)\n"
  "\007Players\030\001 \001(\0132\030.IvionOnline.List_Player"
  "\022%\n\005Cards\030\002 \001(\0132\026.IvionOnline.List_Card\022"
  ",\n\010CardData\030\003 \001(\0132\032.IvionOnline.List_Car"
  "dData\022%\n\005Tiles\030\004 \001(\0132\026.IvionOnline.List_"
  "Tile\022+\n\005Field\030\005 \001(\0132\034.IvionOnline.List_O"
  "bjectPath\022(\n\nTurnNumber\030\006 \001(\0132\024.IvionOnl"
  "ine.Integer\022(\n\007AbsPath\030\007 \001(\0132\027.IvionOnli"
  "ne.ObjectPath\022\014\n\004Name\030\010 \001(\t\"q\n\016List_Game"
  "State\022\'\n\007element\030\001 \003(\0132\026.IvionOnline.Gam"
  "eState\022(\n\007AbsPath\030\002 \001(\0132\027.IvionOnline.Ob"
  "jectPath\022\014\n\004Name\030\003 \001(\t\"\215\001\n\024Boolean_Set_M"
  "utation\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.Obje"
  "ctPath\022&\n\010NewValue\030\002 \001(\0132\024.IvionOnline.B"
  "oolean\022&\n\010OldValue\030\003 \001(\0132\024.IvionOnline.B"
  "oolean\"|\n\034List_Boolean_Insert_Mutation\022%"
  "\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPath\022&\n"
  "\010NewValue\030\002 \001(\0132\024.IvionOnline.Boolean\022\r\n"
  "\005Index\030\003 \001(\005\"|\n\034List_Boolean_Remove_Muta"
  "tion\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectP"
  "ath\022&\n\010OldValue\030\002 \001(\0132\024.IvionOnline.Bool"
  "ean\022\r\n\005Index\030\003 \001(\005\"\215\001\n\024Integer_Set_Mutat"
  "ion\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPa"
  "th\022&\n\010NewValue\030\002 \001(\0132\024.IvionOnline.Integ"
  "er\022&\n\010OldValue\030\003 \001(\0132\024.IvionOnline.Integ"
  "er\"|\n\034List_Integer_Insert_Mutation\022%\n\004Pa"
  "th\030\001 \001(\0132\027.IvionOnline.ObjectPath\022&\n\010New"
  "Value\030\002 \001(\0132\024.IvionOnline.Integer\022\r\n\005Ind"
  "ex\030\003 \001(\005\"|\n\034List_Integer_Remove_Mutation"
  "\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPath\022"
  "&\n\010OldValue\030\002 \001(\0132\024.IvionOnline.Integer\022"
  "\r\n\005Index\030\003 \001(\005\"\207\001\n\022Vec2i_Set_Mutation\022%\n"
  "\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPath\022$\n\010"
  "NewValue\030\002 \001(\0132\022.IvionOnline.Vec2i\022$\n\010Ol"
  "dValue\030\003 \001(\0132\022.IvionOnline.Vec2i\"x\n\032List"
  "_Vec2i_Insert_Mutation\022%\n\004Path\030\001 \001(\0132\027.I"
  "vionOnline.ObjectPath\022$\n\010NewValue\030\002 \001(\0132"
  "\022.IvionOnline.Vec2i\022\r\n\005Index\030\003 \001(\005\"x\n\032Li"
  "st_Vec2i_Remove_Mutation\022%\n\004Path\030\001 \001(\0132\027"
  ".IvionOnline.ObjectPath\022$\n\010OldValue\030\002 \001("
  "\0132\022.IvionOnline.Vec2i\022\r\n\005Index\030\003 \001(\005\"\215\001\n"
  "\024Terrain_Set_Mutation\022%\n\004Path\030\001 \001(\0132\027.Iv"
  "ionOnline.ObjectPath\022&\n\010NewValue\030\002 \001(\0132\024"
  ".IvionOnline.Terrain\022&\n\010OldValue\030\003 \001(\0132\024"
  ".IvionOnline.Terrain\"|\n\034List_Terrain_Ins"
  "ert_Mutation\022%\n\004Path\030\001 \001(\0132\027.IvionOnline"
  ".ObjectPath\022&\n\010NewValue\030\002 \001(\0132\024.IvionOnl"
  "ine.Terrain\022\r\n\005Index\030\003 \001(\005\"|\n\034List_Terra"
  "in_Remove_Mutation\022%\n\004Path\030\001 \001(\0132\027.Ivion"
  "Online.ObjectPath\022&\n\010OldValue\030\002 \001(\0132\024.Iv"
  "ionOnline.Terrain\022\r\n\005Index\030\003 \001(\005\"\207\001\n\022Col"
  "or_Set_Mutation\022%\n\004Path\030\001 \001(\0132\027.IvionOnl"
  "ine.ObjectPath\022$\n\010NewValue\030\002 \001(\0132\022.Ivion"
  "Online.Color\022$\n\010OldValue\030\003 \001(\0132\022.IvionOn"
  "line.Color\"x\n\032List_Color_Insert_Mutation"
  "\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPath\022"
  "$\n\010NewValue\030\002 \001(\0132\022.IvionOnline.Color\022\r\n"
  "\005Index\030\003 \001(\005\"x\n\032List_Color_Remove_Mutati"
  "on\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPat"
  "h\022$\n\010OldValue\030\002 \001(\0132\022.IvionOnline.Color\022"
  "\r\n\005Index\030\003 \001(\005\"\226\001\n\027ObjectPath_Set_Mutati"
  "on\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPat"
  "h\022)\n\010NewValue\030\002 \001(\0132\027.IvionOnline.Object"
  "Path\022)\n\010OldValue\030\003 \001(\0132\027.IvionOnline.Obj"
  "ectPath\"\202\001\n\037List_ObjectPath_Insert_Mutat"
  "ion\022%\n\004Path\030\001 \001(\0132\027.IvionOnline.ObjectPa"
  "th\022)\n\010NewValue\030\002 \001(\0132\027.IvionOnline.Objec"
  "tPath\022\r\n\005Index\030\003 \001(\005\"\202\001\n\037List_ObjectPath"
  "_Remove_Mutation\022%\n\004Path\030\001 \001(\0132\027.IvionOn"
  "line.ObjectPath\022)\n\010OldValue\030\002 \001(\0132\027.Ivio"
  "nOnline.ObjectPath\022\r\n\005Index\030\003 \001(\005\"\201\013\n\010Mu"
  "tation\022A\n\024Boolean_Set_Mutation\030\001 \001(\0132!.I"
  "vionOnline.Boolean_Set_MutationH\000\022Q\n\034Lis"
  "t_Boolean_Insert_Mutation\030\002 \001(\0132).IvionO"
  "nline.List_Boolean_Insert_MutationH\000\022Q\n\034"
  "List_Boolean_Remove_Mutation\030\003 \001(\0132).Ivi"
  "onOnline.List_Boolean_Remove_MutationH\000\022"
  "A\n\024Integer_Set_Mutation\030\004 \001(\0132!.IvionOnl"
  "ine.Integer_Set_MutationH\000\022Q\n\034List_Integ"
  "er_Insert_Mutation\030\005 \001(\0132).IvionOnline.L"
  "ist_Integer_Insert_MutationH\000\022Q\n\034List_In"
  "teger_Remove_Mutation\030\006 \001(\0132).IvionOnlin"
  "e.List_Integer_Remove_MutationH\000\022=\n\022Vec2"
  "i_Set_Mutation\030\007 \001(\0132\037.IvionOnline.Vec2i"
  "_Set_MutationH\000\022M\n\032List_Vec2i_Insert_Mut"
  "ation\030\010 \001(\0132\'.IvionOnline.List_Vec2i_Ins"
  "ert_MutationH\000\022M\n\032List_Vec2i_Remove_Muta"
  "tion\030\t \001(\0132\'.IvionOnline.List_Vec2i_Remo"
  "ve_MutationH\000\022A\n\024Terrain_Set_Mutation\030\n "
  "\001(\0132!.IvionOnline.Terrain_Set_MutationH\000"
  "\022Q\n\034List_Terrain_Insert_Mutation\030\013 \001(\0132)"
  ".IvionOnline.List_Terrain_Insert_Mutatio"
  "nH\000\022Q\n\034List_Terrain_Remove_Mutation\030\014 \001("
  "\0132).IvionOnline.List_Terrain_Remove_Muta"
  "tionH\000\022=\n\022Color_Set_Mutation\030\r \001(\0132\037.Ivi"
  "onOnline.Color_Set_MutationH\000\022M\n\032List_Co"
  "lor_Insert_Mutation\030\016 \001(\0132\'.IvionOnline."
  "List_Color_Insert_MutationH\000\022M\n\032List_Col"
  "or_Remove_Mutation\030\017 \001(\0132\'.IvionOnline.L"
  "ist_Color_Remove_MutationH\000\022G\n\027ObjectPat"
  "h_Set_Mutation\030\020 \001(\0132$.IvionOnline.Objec"
  "tPath_Set_MutationH\000\022W\n\037List_ObjectPath_"
  "Insert_Mutation\030\021 \001(\0132,.IvionOnline.List"
  "_ObjectPath_Insert_MutationH\000\022W\n\037List_Ob"
  "jectPath_Remove_Mutation\030\022 \001(\0132,.IvionOn"
  "line.List_ObjectPath_Remove_MutationH\000B\005"
  "\n\003mut\"`\n\007GetList\022\'\n\006Source\030\001 \001(\0132\027.Ivion"
  "Online.ObjectPath\022,\n\006Result\030\002 \001(\0132\034.Ivio"
  "nOnline.List_ObjectPath\"\227\001\n\016FilterDistan"
  "ce\022(\n\007Targets\030\001 \001(\0132\027.IvionOnline.Object"
  "Path\022-\n\014RangeSources\030\002 \001(\0132\027.IvionOnline"
  ".ObjectPath\022,\n\013MaxDistance\030\003 \001(\0132\027.Ivion"
  "Online.ObjectPath\"\267\001\n\016SelectMultiple\022\'\n\006"
  "Source\030\001 \001(\0132\027.IvionOnline.ObjectPath\022\'\n"
  "\006Number\030\002 \001(\0132\027.IvionOnline.ObjectPath\022%"
  "\n\004UpTo\030\003 \001(\0132\027.IvionOnline.ObjectPath\022,\n"
  "\006Result\030\004 \001(\0132\034.IvionOnline.List_ObjectP"
  "ath\"d\n\020SelectExactlyOne\022\'\n\006Source\030\001 \001(\0132"
  "\027.IvionOnline.ObjectPath\022\'\n\006Result\030\002 \001(\013"
  "2\027.IvionOnline.ObjectPath\"\027\n\025AssertContr"
  "olOrHeroic\"\035\n\033AssertControllerHasPriorit"
  "y\"\033\n\031AssertStackEmptyOrInstant\"\365\001\n\nReduc"
  "eCost\022%\n\004Card\030\001 \001(\0132\027.IvionOnline.Object"
  "Path\0224\n\023ActionCostReduction\030\002 \001(\0132\027.Ivio"
  "nOnline.ObjectPath\0223\n\022PowerCostReduction"
  "\030\003 \001(\0132\027.IvionOnline.ObjectPath\022.\n\rCostR"
  "eduction\030\004 \001(\0132\027.IvionOnline.ObjectPath\022"
  "%\n\004Free\030\005 \001(\0132\027.IvionOnline.ObjectPath\"Y"
  "\n\007PayCost\022\'\n\006Player\030\001 \001(\0132\027.IvionOnline."
  "ObjectPath\022%\n\004Card\030\002 \001(\0132\027.IvionOnline.O"
  "bjectPath\"c\n\021PlayGainResources\022\'\n\006Player"
  "\030\001 \001(\0132\027.IvionOnline.ObjectPath\022%\n\004Card\030"
  "\002 \001(\0132\027.IvionOnline.ObjectPath\"\\\n\nRefund"
  "Cost\022\'\n\006Player\030\001 \001(\0132\027.IvionOnline.Objec"
  "tPath\022%\n\004Card\030\002 \001(\0132\027.IvionOnline.Object"
  "Path\"^\n\013GainActions\022\'\n\006Player\030\001 \001(\0132\027.Iv"
  "ionOnline.ObjectPath\022&\n\005Value\030\002 \001(\0132\027.Iv"
  "ionOnline.ObjectPath\"\\\n\tGainPower\022\'\n\006Pla"
  "yer\030\001 \001(\0132\027.IvionOnline.ObjectPath\022&\n\005Va"
  "lue\030\002 \001(\0132\027.IvionOnline.ObjectPath\"]\n\004Mo"
  "ve\022\'\n\006Player\030\001 \001(\0132\027.IvionOnline.ObjectP"
  "ath\022,\n\013Destination\030\002 \001(\0132\027.IvionOnline.O"
  "bjectPath\"_\n\006Travel\022\'\n\006Player\030\001 \001(\0132\027.Iv"
  "ionOnline.ObjectPath\022,\n\013Destination\030\002 \001("
  "\0132\027.IvionOnline.ObjectPath\"Z\n\006Damage\022\'\n\006"
  "Player\030\001 \001(\0132\027.IvionOnline.ObjectPath\022\'\n"
  "\006Amount\030\002 \001(\0132\027.IvionOnline.ObjectPath\"8"
  "\n\020Boolean_Constant\022$\n\006Result\030\001 \001(\0132\024.Ivi"
  "onOnline.Boolean\"8\n\020Integer_Constant\022$\n\006"
  "Result\030\001 \001(\0132\024.IvionOnline.Integer\"4\n\016Ve"
  "c2i_Constant\022\"\n\006Result\030\001 \001(\0132\022.IvionOnli"
  "ne.Vec2i\"8\n\020Terrain_Constant\022$\n\006Result\030\001"
  " \001(\0132\024.IvionOnline.Terrain\"4\n\016Color_Cons"
  "tant\022\"\n\006Result\030\001 \001(\0132\022.IvionOnline.Color"
  "\">\n\023ObjectPath_Constant\022\'\n\006Result\030\001 \001(\0132"
  "\027.IvionOnline.ObjectPath\"\273\t\n\006Method\022\'\n\007G"
  "etList\030\001 \001(\0132\024.IvionOnline.GetListH\000\0225\n\016"
  "FilterDistance\030\002 \001(\0132\033.IvionOnline.Filte"
  "rDistanceH\000\0225\n\016SelectMultiple\030\003 \001(\0132\033.Iv"
  "ionOnline.SelectMultipleH\000\0229\n\020SelectExac"
  "tlyOne\030\004 \001(\0132\035.IvionOnline.SelectExactly"
  "OneH\000\022C\n\025AssertControlOrHeroic\030\005 \001(\0132\".I"
  "vionOnline.AssertControlOrHeroicH\000\022O\n\033As"
  "sertControllerHasPriority\030\006 \001(\0132(.IvionO"
  "nline.AssertControllerHasPriorityH\000\022K\n\031A"
  "ssertStackEmptyOrInstant\030\007 \001(\0132&.IvionOn"
  "line.AssertStackEmptyOrInstantH\000\022-\n\nRedu"
  "ceCost\030\010 \001(\0132\027.IvionOnline.ReduceCostH\000\022"
  "\'\n\007PayCost\030\t \001(\0132\024.IvionOnline.PayCostH\000"
  "\022;\n\021PlayGainResources\030\n \001(\0132\036.IvionOnlin"
  "e.PlayGainResourcesH\000\022-\n\nRefundCost\030\013 \001("
  "\0132\027.IvionOnline.RefundCostH\000\022/\n\013GainActi"
  "ons\030\014 \001(\0132\030.IvionOnline.GainActionsH\000\022+\n"
  "\tGainPower\030\r \001(\0132\026.IvionOnline.GainPower"
  "H\000\022!\n\004Move\030\016 \001(\0132\021.IvionOnline.MoveH\000\022%\n"
  "\006Travel\030\017 \001(\0132\023.IvionOnline.TravelH\000\022%\n\006"
  "Damage\030\020 \001(\0132\023.IvionOnline.DamageH\000\0229\n\020B"
  "oolean_Constant\030\021 \001(\0132\035.IvionOnline.Bool"
  "ean_ConstantH\000\0229\n\020Integer_Constant\030\022 \001(\013"
  "2\035.IvionOnline.Integer_ConstantH\000\0225\n\016Vec"
  "2i_Constant\030\023 \001(\0132\033.IvionOnline.Vec2i_Co"
  "nstantH\000\0229\n\020Terrain_Constant\030\024 \001(\0132\035.Ivi"
  "onOnline.Terrain_ConstantH\000\0225\n\016Color_Con"
  "stant\030\025 \001(\0132\033.IvionOnline.Color_Constant"
  "H\000\022\?\n\023ObjectPath_Constant\030\026 \001(\0132 .IvionO"
  "nline.ObjectPath_ConstantH\000B\t\n\007methods\"k"
  "\n\013List_Method\022$\n\007element\030\001 \003(\0132\023.IvionOn"
  "line.Method\022\014\n\004Name\030\002 \001(\t\022(\n\007AbsPath\030\003 \001"
  "(\0132\027.IvionOnline.ObjectPath*\351\005\n\nObjectTy"
  "pe\022\020\n\014TYPE_BOOLEAN\020\000\022\025\n\021TYPE_LIST_BOOLEA"
  "N\020\001\022\031\n\025TYPE_LIST_REF_BOOLEAN\020\002\022\020\n\014TYPE_I"
  "NTEGER\020\003\022\025\n\021TYPE_LIST_INTEGER\020\004\022\031\n\025TYPE_"
  "LIST_REF_INTEGER\020\005\022\016\n\nTYPE_VEC2I\020\006\022\023\n\017TY"
  "PE_LIST_VEC2I\020\007\022\027\n\023TYPE_LIST_REF_VEC2I\020\010"
  "\022\020\n\014TYPE_TERRAIN\020\t\022\025\n\021TYPE_LIST_TERRAIN\020"
  "\n\022\031\n\025TYPE_LIST_REF_TERRAIN\020\013\022\016\n\nTYPE_COL"
  "OR\020\014\022\023\n\017TYPE_LIST_COLOR\020\r\022\027\n\023TYPE_LIST_R"
  "EF_COLOR\020\016\022\023\n\017TYPE_OBJECTPATH\020\017\022\030\n\024TYPE_"
  "LIST_OBJECTPATH\020\020\022\034\n\030TYPE_LIST_REF_OBJEC"
  "TPATH\020\021\022\017\n\013TYPE_PLAYER\020\022\022\024\n\020TYPE_LIST_PL"
  "AYER\020\023\022\030\n\024TYPE_LIST_REF_PLAYER\020\024\022\r\n\tTYPE"
  "_CARD\020\025\022\022\n\016TYPE_LIST_CARD\020\026\022\026\n\022TYPE_LIST"
  "_REF_CARD\020\027\022\021\n\rTYPE_CARDDATA\020\030\022\026\n\022TYPE_L"
  "IST_CARDDATA\020\031\022\032\n\026TYPE_LIST_REF_CARDDATA"
  "\020\032\022\r\n\tTYPE_TILE\020\033\022\022\n\016TYPE_LIST_TILE\020\034\022\026\n"
  "\022TYPE_LIST_REF_TILE\020\035\022\022\n\016TYPE_GAMESTATE\020"
  "\036\022\027\n\023TYPE_LIST_GAMESTATE\020\037\022\033\n\027TYPE_LIST_"
  "REF_GAMESTATE\020 b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_GameState_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_GameState_2eproto_sccs[66] = {
  &scc_info_AssertControlOrHeroic_GameState_2eproto.base,
  &scc_info_AssertControllerHasPriority_GameState_2eproto.base,
  &scc_info_AssertStackEmptyOrInstant_GameState_2eproto.base,
  &scc_info_Boolean_GameState_2eproto.base,
  &scc_info_Boolean_Constant_GameState_2eproto.base,
  &scc_info_Boolean_Set_Mutation_GameState_2eproto.base,
  &scc_info_Card_GameState_2eproto.base,
  &scc_info_CardData_GameState_2eproto.base,
  &scc_info_Color_GameState_2eproto.base,
  &scc_info_Color_Constant_GameState_2eproto.base,
  &scc_info_Color_Set_Mutation_GameState_2eproto.base,
  &scc_info_Damage_GameState_2eproto.base,
  &scc_info_FilterDistance_GameState_2eproto.base,
  &scc_info_GainActions_GameState_2eproto.base,
  &scc_info_GainPower_GameState_2eproto.base,
  &scc_info_GameState_GameState_2eproto.base,
  &scc_info_GetList_GameState_2eproto.base,
  &scc_info_History_GameState_2eproto.base,
  &scc_info_Integer_GameState_2eproto.base,
  &scc_info_Integer_Constant_GameState_2eproto.base,
  &scc_info_Integer_Set_Mutation_GameState_2eproto.base,
  &scc_info_List_Boolean_GameState_2eproto.base,
  &scc_info_List_Boolean_Insert_Mutation_GameState_2eproto.base,
  &scc_info_List_Boolean_Remove_Mutation_GameState_2eproto.base,
  &scc_info_List_Card_GameState_2eproto.base,
  &scc_info_List_CardData_GameState_2eproto.base,
  &scc_info_List_Color_GameState_2eproto.base,
  &scc_info_List_Color_Insert_Mutation_GameState_2eproto.base,
  &scc_info_List_Color_Remove_Mutation_GameState_2eproto.base,
  &scc_info_List_GameState_GameState_2eproto.base,
  &scc_info_List_Integer_GameState_2eproto.base,
  &scc_info_List_Integer_Insert_Mutation_GameState_2eproto.base,
  &scc_info_List_Integer_Remove_Mutation_GameState_2eproto.base,
  &scc_info_List_Method_GameState_2eproto.base,
  &scc_info_List_ObjectPath_GameState_2eproto.base,
  &scc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto.base,
  &scc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto.base,
  &scc_info_List_Player_GameState_2eproto.base,
  &scc_info_List_Terrain_GameState_2eproto.base,
  &scc_info_List_Terrain_Insert_Mutation_GameState_2eproto.base,
  &scc_info_List_Terrain_Remove_Mutation_GameState_2eproto.base,
  &scc_info_List_Tile_GameState_2eproto.base,
  &scc_info_List_Vec2i_GameState_2eproto.base,
  &scc_info_List_Vec2i_Insert_Mutation_GameState_2eproto.base,
  &scc_info_List_Vec2i_Remove_Mutation_GameState_2eproto.base,
  &scc_info_Method_GameState_2eproto.base,
  &scc_info_Move_GameState_2eproto.base,
  &scc_info_Mutation_GameState_2eproto.base,
  &scc_info_ObjectPath_GameState_2eproto.base,
  &scc_info_ObjectPath_Constant_GameState_2eproto.base,
  &scc_info_ObjectPath_Set_Mutation_GameState_2eproto.base,
  &scc_info_PayCost_GameState_2eproto.base,
  &scc_info_PlayGainResources_GameState_2eproto.base,
  &scc_info_Player_GameState_2eproto.base,
  &scc_info_ReduceCost_GameState_2eproto.base,
  &scc_info_RefundCost_GameState_2eproto.base,
  &scc_info_SelectExactlyOne_GameState_2eproto.base,
  &scc_info_SelectMultiple_GameState_2eproto.base,
  &scc_info_Terrain_GameState_2eproto.base,
  &scc_info_Terrain_Constant_GameState_2eproto.base,
  &scc_info_Terrain_Set_Mutation_GameState_2eproto.base,
  &scc_info_Tile_GameState_2eproto.base,
  &scc_info_Travel_GameState_2eproto.base,
  &scc_info_Vec2i_GameState_2eproto.base,
  &scc_info_Vec2i_Constant_GameState_2eproto.base,
  &scc_info_Vec2i_Set_Mutation_GameState_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_GameState_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GameState_2eproto = {
  false, false, descriptor_table_protodef_GameState_2eproto, "GameState.proto", 12263,
  &descriptor_table_GameState_2eproto_once, descriptor_table_GameState_2eproto_sccs, descriptor_table_GameState_2eproto_deps, 66, 0,
  schemas, file_default_instances, TableStruct_GameState_2eproto::offsets,
  file_level_metadata_GameState_2eproto, 66, file_level_enum_descriptors_GameState_2eproto, file_level_service_descriptors_GameState_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_GameState_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_GameState_2eproto)), true);
namespace IvionOnline {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Terrain_Terrain_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_GameState_2eproto);
  return file_level_enum_descriptors_GameState_2eproto[0];
}
bool Terrain_Terrain_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Terrain_Terrain_Type Terrain::TERRAIN_TYPE_NONE;
constexpr Terrain_Terrain_Type Terrain::TERRAIN_TYPE_DIFFICULT;
constexpr Terrain_Terrain_Type Terrain::TERRAIN_TYPE_ENCHANTED;
constexpr Terrain_Terrain_Type Terrain::Terrain_Type_MIN;
constexpr Terrain_Terrain_Type Terrain::Terrain_Type_MAX;
constexpr int Terrain::Terrain_Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Color_Color_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_GameState_2eproto);
  return file_level_enum_descriptors_GameState_2eproto[1];
}
bool Color_Color_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Color_Color_Type Color::COLOR_NONE;
constexpr Color_Color_Type Color::COLOR_GRAY;
constexpr Color_Color_Type Color::COLOR_BLACK;
constexpr Color_Color_Type Color::COLOR_RED;
constexpr Color_Color_Type Color::COLOR_GREEN;
constexpr Color_Color_Type Color::COLOR_BLUE;
constexpr Color_Color_Type Color::COLOR_WHITE;
constexpr Color_Color_Type Color::Color_Type_MIN;
constexpr Color_Color_Type Color::Color_Type_MAX;
constexpr int Color::Color_Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_GameState_2eproto);
  return file_level_enum_descriptors_GameState_2eproto[2];
}
bool ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class History::_Internal {
 public:
};

History::History(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  mutations_(arena),
  branches_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.History)
}
History::History(const History& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      mutations_(from.mutations_),
      branches_(from.branches_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  is_good_ = from.is_good_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.History)
}

void History::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_History_GameState_2eproto.base);
  is_good_ = false;
}

History::~History() {
  // @@protoc_insertion_point(destructor:IvionOnline.History)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void History::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void History::ArenaDtor(void* object) {
  History* _this = reinterpret_cast< History* >(object);
  (void)_this;
}
void History::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void History::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const History& History::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_History_GameState_2eproto.base);
  return *internal_default_instance();
}


void History::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.History)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mutations_.Clear();
  branches_.Clear();
  is_good_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* History::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Mutation Mutations = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mutations(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .IvionOnline.History Branches = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_branches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // bool Is_Good = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          is_good_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* History::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.History)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Mutation Mutations = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mutations_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_mutations(i), target, stream);
  }

  // repeated .IvionOnline.History Branches = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_branches_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_branches(i), target, stream);
  }

  // bool Is_Good = 3;
  if (this->is_good() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_is_good(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.History)
  return target;
}

size_t History::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.History)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Mutation Mutations = 1;
  total_size += 1UL * this->_internal_mutations_size();
  for (const auto& msg : this->mutations_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .IvionOnline.History Branches = 2;
  total_size += 1UL * this->_internal_branches_size();
  for (const auto& msg : this->branches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bool Is_Good = 3;
  if (this->is_good() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void History::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.History)
  GOOGLE_DCHECK_NE(&from, this);
  const History* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<History>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.History)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.History)
    MergeFrom(*source);
  }
}

void History::MergeFrom(const History& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.History)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mutations_.MergeFrom(from.mutations_);
  branches_.MergeFrom(from.branches_);
  if (from.is_good() != 0) {
    _internal_set_is_good(from._internal_is_good());
  }
}

void History::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void History::CopyFrom(const History& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool History::IsInitialized() const {
  return true;
}

void History::InternalSwap(History* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mutations_.InternalSwap(&other->mutations_);
  branches_.InternalSwap(&other->branches_);
  swap(is_good_, other->is_good_);
}

::PROTOBUF_NAMESPACE_ID::Metadata History::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Boolean::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const Boolean* msg);
};

const ::IvionOnline::ObjectPath&
Boolean::_Internal::abspath(const Boolean* msg) {
  return *msg->abspath_;
}
Boolean::Boolean(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Boolean)
}
Boolean::Boolean(const Boolean& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Boolean)
}

void Boolean::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Boolean_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&abspath_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&abspath_)) + sizeof(value_));
}

Boolean::~Boolean() {
  // @@protoc_insertion_point(destructor:IvionOnline.Boolean)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Boolean::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void Boolean::ArenaDtor(void* object) {
  Boolean* _this = reinterpret_cast< Boolean* >(object);
  (void)_this;
}
void Boolean::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Boolean::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Boolean& Boolean::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Boolean_GameState_2eproto.base);
  return *internal_default_instance();
}


void Boolean::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Boolean)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  value_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Boolean::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Boolean.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Boolean::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Boolean)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_value(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Boolean.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Boolean)
  return target;
}

size_t Boolean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Boolean)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // bool Value = 1;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Boolean::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  const Boolean* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Boolean>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Boolean)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Boolean)
    MergeFrom(*source);
  }
}

void Boolean::MergeFrom(const Boolean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Boolean::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Boolean::CopyFrom(const Boolean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Boolean::IsInitialized() const {
  return true;
}

void Boolean::InternalSwap(Boolean* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Boolean, value_)
      + sizeof(Boolean::value_)
      - PROTOBUF_FIELD_OFFSET(Boolean, abspath_)>(
          reinterpret_cast<char*>(&abspath_),
          reinterpret_cast<char*>(&other->abspath_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Boolean::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Boolean::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Boolean* msg);
};

const ::IvionOnline::ObjectPath&
List_Boolean::_Internal::abspath(const List_Boolean* msg) {
  return *msg->abspath_;
}
List_Boolean::List_Boolean(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Boolean)
}
List_Boolean::List_Boolean(const List_Boolean& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Boolean)
}

void List_Boolean::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Boolean_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Boolean::~List_Boolean() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Boolean)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Boolean::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Boolean::ArenaDtor(void* object) {
  List_Boolean* _this = reinterpret_cast< List_Boolean* >(object);
  (void)_this;
}
void List_Boolean::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Boolean::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Boolean& List_Boolean::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Boolean_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Boolean::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Boolean)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Boolean::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Boolean element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Boolean.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Boolean::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Boolean)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Boolean element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Boolean.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Boolean)
  return target;
}

size_t List_Boolean::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Boolean)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Boolean element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Boolean::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Boolean* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Boolean>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Boolean)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Boolean)
    MergeFrom(*source);
  }
}

void List_Boolean::MergeFrom(const List_Boolean& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Boolean)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Boolean::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Boolean::CopyFrom(const List_Boolean& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Boolean)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Boolean::IsInitialized() const {
  return true;
}

void List_Boolean::InternalSwap(List_Boolean* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Boolean::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Integer::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const Integer* msg);
};

const ::IvionOnline::ObjectPath&
Integer::_Internal::abspath(const Integer* msg) {
  return *msg->abspath_;
}
Integer::Integer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Integer)
}
Integer::Integer(const Integer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Integer)
}

void Integer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Integer_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&abspath_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&abspath_)) + sizeof(value_));
}

Integer::~Integer() {
  // @@protoc_insertion_point(destructor:IvionOnline.Integer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Integer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void Integer::ArenaDtor(void* object) {
  Integer* _this = reinterpret_cast< Integer* >(object);
  (void)_this;
}
void Integer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Integer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Integer& Integer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Integer_GameState_2eproto.base);
  return *internal_default_instance();
}


void Integer::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Integer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Integer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Integer.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Integer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Integer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_value(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Integer.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Integer)
  return target;
}

size_t Integer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Integer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // int32 Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Integer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  const Integer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Integer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Integer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Integer)
    MergeFrom(*source);
  }
}

void Integer::MergeFrom(const Integer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Integer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Integer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Integer::CopyFrom(const Integer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Integer::IsInitialized() const {
  return true;
}

void Integer::InternalSwap(Integer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Integer, value_)
      + sizeof(Integer::value_)
      - PROTOBUF_FIELD_OFFSET(Integer, abspath_)>(
          reinterpret_cast<char*>(&abspath_),
          reinterpret_cast<char*>(&other->abspath_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Integer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Integer::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Integer* msg);
};

const ::IvionOnline::ObjectPath&
List_Integer::_Internal::abspath(const List_Integer* msg) {
  return *msg->abspath_;
}
List_Integer::List_Integer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Integer)
}
List_Integer::List_Integer(const List_Integer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Integer)
}

void List_Integer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Integer_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Integer::~List_Integer() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Integer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Integer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Integer::ArenaDtor(void* object) {
  List_Integer* _this = reinterpret_cast< List_Integer* >(object);
  (void)_this;
}
void List_Integer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Integer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Integer& List_Integer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Integer_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Integer::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Integer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Integer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Integer element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Integer.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Integer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Integer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Integer element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Integer.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Integer)
  return target;
}

size_t List_Integer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Integer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Integer element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Integer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Integer)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Integer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Integer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Integer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Integer)
    MergeFrom(*source);
  }
}

void List_Integer::MergeFrom(const List_Integer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Integer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Integer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Integer::CopyFrom(const List_Integer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Integer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Integer::IsInitialized() const {
  return true;
}

void List_Integer::InternalSwap(List_Integer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Integer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vec2i::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const Vec2i* msg);
};

const ::IvionOnline::ObjectPath&
Vec2i::_Internal::abspath(const Vec2i* msg) {
  return *msg->abspath_;
}
Vec2i::Vec2i(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Vec2i)
}
Vec2i::Vec2i(const Vec2i& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Vec2i)
}

void Vec2i::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Vec2i_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&abspath_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&abspath_)) + sizeof(y_));
}

Vec2i::~Vec2i() {
  // @@protoc_insertion_point(destructor:IvionOnline.Vec2i)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec2i::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void Vec2i::ArenaDtor(void* object) {
  Vec2i* _this = reinterpret_cast< Vec2i* >(object);
  (void)_this;
}
void Vec2i::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec2i::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec2i& Vec2i::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec2i_GameState_2eproto.base);
  return *internal_default_instance();
}


void Vec2i::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Vec2i)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec2i::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Vec2i.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec2i::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Vec2i)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::abspath(this), target, stream);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Vec2i.Name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Vec2i)
  return target;
}

size_t Vec2i::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Vec2i)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_y());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec2i::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Vec2i)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec2i* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec2i>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Vec2i)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Vec2i)
    MergeFrom(*source);
  }
}

void Vec2i::MergeFrom(const Vec2i& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Vec2i)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
}

void Vec2i::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Vec2i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2i::CopyFrom(const Vec2i& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Vec2i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2i::IsInitialized() const {
  return true;
}

void Vec2i::InternalSwap(Vec2i* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec2i, y_)
      + sizeof(Vec2i::y_)
      - PROTOBUF_FIELD_OFFSET(Vec2i, abspath_)>(
          reinterpret_cast<char*>(&abspath_),
          reinterpret_cast<char*>(&other->abspath_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec2i::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Vec2i::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Vec2i* msg);
};

const ::IvionOnline::ObjectPath&
List_Vec2i::_Internal::abspath(const List_Vec2i* msg) {
  return *msg->abspath_;
}
List_Vec2i::List_Vec2i(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Vec2i)
}
List_Vec2i::List_Vec2i(const List_Vec2i& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Vec2i)
}

void List_Vec2i::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Vec2i_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Vec2i::~List_Vec2i() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Vec2i)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Vec2i::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Vec2i::ArenaDtor(void* object) {
  List_Vec2i* _this = reinterpret_cast< List_Vec2i* >(object);
  (void)_this;
}
void List_Vec2i::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Vec2i::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Vec2i& List_Vec2i::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Vec2i_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Vec2i::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Vec2i)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Vec2i::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Vec2i element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Vec2i.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Vec2i::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Vec2i)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Vec2i element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Vec2i.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Vec2i)
  return target;
}

size_t List_Vec2i::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Vec2i)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Vec2i element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Vec2i::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Vec2i)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Vec2i* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Vec2i>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Vec2i)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Vec2i)
    MergeFrom(*source);
  }
}

void List_Vec2i::MergeFrom(const List_Vec2i& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Vec2i)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Vec2i::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Vec2i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Vec2i::CopyFrom(const List_Vec2i& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Vec2i)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Vec2i::IsInitialized() const {
  return true;
}

void List_Vec2i::InternalSwap(List_Vec2i* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Vec2i::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Terrain::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const Terrain* msg);
};

const ::IvionOnline::ObjectPath&
Terrain::_Internal::abspath(const Terrain* msg) {
  return *msg->abspath_;
}
Terrain::Terrain(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Terrain)
}
Terrain::Terrain(const Terrain& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Terrain)
}

void Terrain::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Terrain_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&abspath_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&abspath_)) + sizeof(value_));
}

Terrain::~Terrain() {
  // @@protoc_insertion_point(destructor:IvionOnline.Terrain)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Terrain::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void Terrain::ArenaDtor(void* object) {
  Terrain* _this = reinterpret_cast< Terrain* >(object);
  (void)_this;
}
void Terrain::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Terrain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Terrain& Terrain::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Terrain_GameState_2eproto.base);
  return *internal_default_instance();
}


void Terrain::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Terrain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Terrain::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Terrain.Terrain_Type Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_value(static_cast<::IvionOnline::Terrain_Terrain_Type>(val));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Terrain.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Terrain::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Terrain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Terrain.Terrain_Type Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_value(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::abspath(this), target, stream);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Terrain.Name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Terrain)
  return target;
}

size_t Terrain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Terrain)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // .IvionOnline.Terrain.Terrain_Type Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Terrain::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Terrain)
  GOOGLE_DCHECK_NE(&from, this);
  const Terrain* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Terrain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Terrain)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Terrain)
    MergeFrom(*source);
  }
}

void Terrain::MergeFrom(const Terrain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Terrain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Terrain::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terrain::CopyFrom(const Terrain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terrain::IsInitialized() const {
  return true;
}

void Terrain::InternalSwap(Terrain* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Terrain, value_)
      + sizeof(Terrain::value_)
      - PROTOBUF_FIELD_OFFSET(Terrain, abspath_)>(
          reinterpret_cast<char*>(&abspath_),
          reinterpret_cast<char*>(&other->abspath_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Terrain::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Terrain::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Terrain* msg);
};

const ::IvionOnline::ObjectPath&
List_Terrain::_Internal::abspath(const List_Terrain* msg) {
  return *msg->abspath_;
}
List_Terrain::List_Terrain(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Terrain)
}
List_Terrain::List_Terrain(const List_Terrain& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Terrain)
}

void List_Terrain::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Terrain_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Terrain::~List_Terrain() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Terrain)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Terrain::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Terrain::ArenaDtor(void* object) {
  List_Terrain* _this = reinterpret_cast< List_Terrain* >(object);
  (void)_this;
}
void List_Terrain::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Terrain::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Terrain& List_Terrain::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Terrain_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Terrain::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Terrain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Terrain::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Terrain element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Terrain.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Terrain::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Terrain)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Terrain element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Terrain.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Terrain)
  return target;
}

size_t List_Terrain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Terrain)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Terrain element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Terrain::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Terrain)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Terrain* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Terrain>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Terrain)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Terrain)
    MergeFrom(*source);
  }
}

void List_Terrain::MergeFrom(const List_Terrain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Terrain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Terrain::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Terrain::CopyFrom(const List_Terrain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Terrain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Terrain::IsInitialized() const {
  return true;
}

void List_Terrain::InternalSwap(List_Terrain* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Terrain::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Color::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const Color* msg);
};

const ::IvionOnline::ObjectPath&
Color::_Internal::abspath(const Color* msg) {
  return *msg->abspath_;
}
Color::Color(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Color)
}
Color::Color(const Color& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Color)
}

void Color::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Color_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&abspath_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&abspath_)) + sizeof(value_));
}

Color::~Color() {
  // @@protoc_insertion_point(destructor:IvionOnline.Color)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Color::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void Color::ArenaDtor(void* object) {
  Color* _this = reinterpret_cast< Color* >(object);
  (void)_this;
}
void Color::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Color::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Color& Color::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Color_GameState_2eproto.base);
  return *internal_default_instance();
}


void Color::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Color)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  value_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Color::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Color.Color_Type Value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_value(static_cast<::IvionOnline::Color_Color_Type>(val));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Color.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Color::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Color)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Color.Color_Type Value = 1;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_value(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::abspath(this), target, stream);
  }

  // string Name = 4;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Color.Name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Color)
  return target;
}

size_t Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Color)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // .IvionOnline.Color.Color_Type Value = 1;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Color::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Color)
  GOOGLE_DCHECK_NE(&from, this);
  const Color* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Color>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Color)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Color)
    MergeFrom(*source);
  }
}

void Color::MergeFrom(const Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void Color::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Color::CopyFrom(const Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Color::IsInitialized() const {
  return true;
}

void Color::InternalSwap(Color* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Color, value_)
      + sizeof(Color::value_)
      - PROTOBUF_FIELD_OFFSET(Color, abspath_)>(
          reinterpret_cast<char*>(&abspath_),
          reinterpret_cast<char*>(&other->abspath_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Color::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Color::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Color* msg);
};

const ::IvionOnline::ObjectPath&
List_Color::_Internal::abspath(const List_Color* msg) {
  return *msg->abspath_;
}
List_Color::List_Color(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Color)
}
List_Color::List_Color(const List_Color& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Color)
}

void List_Color::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Color_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Color::~List_Color() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Color)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Color::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Color::ArenaDtor(void* object) {
  List_Color* _this = reinterpret_cast< List_Color* >(object);
  (void)_this;
}
void List_Color::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Color::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Color& List_Color::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Color_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Color::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Color)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Color::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Color element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Color.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Color::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Color)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Color element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Color.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Color)
  return target;
}

size_t List_Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Color)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Color element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Color::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Color)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Color* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Color>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Color)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Color)
    MergeFrom(*source);
  }
}

void List_Color::MergeFrom(const List_Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Color::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Color::CopyFrom(const List_Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Color::IsInitialized() const {
  return true;
}

void List_Color::InternalSwap(List_Color* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Color::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjectPath::_Internal {
 public:
};

ObjectPath::ObjectPath(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  path_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.ObjectPath)
}
ObjectPath::ObjectPath(const ObjectPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      path_(from.path_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  object_type_ = from.object_type_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.ObjectPath)
}

void ObjectPath::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectPath_GameState_2eproto.base);
  object_type_ = 0;
}

ObjectPath::~ObjectPath() {
  // @@protoc_insertion_point(destructor:IvionOnline.ObjectPath)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectPath::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ObjectPath::ArenaDtor(void* object) {
  ObjectPath* _this = reinterpret_cast< ObjectPath* >(object);
  (void)_this;
}
void ObjectPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectPath& ObjectPath::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectPath_GameState_2eproto.base);
  return *internal_default_instance();
}


void ObjectPath::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.ObjectPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.Clear();
  object_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_path();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.ObjectPath.Path"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectType Object_Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_object_type(static_cast<::IvionOnline::ObjectType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectPath::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.ObjectPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string Path = 1;
  for (int i = 0, n = this->_internal_path_size(); i < n; i++) {
    const auto& s = this->_internal_path(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.ObjectPath.Path");
    target = stream->WriteString(1, s, target);
  }

  // .IvionOnline.ObjectType Object_Type = 2;
  if (this->object_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_object_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.ObjectPath)
  return target;
}

size_t ObjectPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.ObjectPath)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Path = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(path_.size());
  for (int i = 0, n = path_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      path_.Get(i));
  }

  // .IvionOnline.ObjectType Object_Type = 2;
  if (this->object_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_object_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectPath::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.ObjectPath)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPath* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectPath>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.ObjectPath)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.ObjectPath)
    MergeFrom(*source);
  }
}

void ObjectPath::MergeFrom(const ObjectPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.ObjectPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  if (from.object_type() != 0) {
    _internal_set_object_type(from._internal_object_type());
  }
}

void ObjectPath::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.ObjectPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPath::CopyFrom(const ObjectPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.ObjectPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPath::IsInitialized() const {
  return true;
}

void ObjectPath::InternalSwap(ObjectPath* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.InternalSwap(&other->path_);
  swap(object_type_, other->object_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectPath::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_ObjectPath::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_ObjectPath* msg);
};

const ::IvionOnline::ObjectPath&
List_ObjectPath::_Internal::abspath(const List_ObjectPath* msg) {
  return *msg->abspath_;
}
List_ObjectPath::List_ObjectPath(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_ObjectPath)
}
List_ObjectPath::List_ObjectPath(const List_ObjectPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_ObjectPath)
}

void List_ObjectPath::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_ObjectPath_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_ObjectPath::~List_ObjectPath() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_ObjectPath)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_ObjectPath::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_ObjectPath::ArenaDtor(void* object) {
  List_ObjectPath* _this = reinterpret_cast< List_ObjectPath* >(object);
  (void)_this;
}
void List_ObjectPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_ObjectPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_ObjectPath& List_ObjectPath::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_ObjectPath_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_ObjectPath::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_ObjectPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_ObjectPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.ObjectPath element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_ObjectPath.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_ObjectPath::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_ObjectPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.ObjectPath element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_ObjectPath.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_ObjectPath)
  return target;
}

size_t List_ObjectPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_ObjectPath)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.ObjectPath element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_ObjectPath::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_ObjectPath)
  GOOGLE_DCHECK_NE(&from, this);
  const List_ObjectPath* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_ObjectPath>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_ObjectPath)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_ObjectPath)
    MergeFrom(*source);
  }
}

void List_ObjectPath::MergeFrom(const List_ObjectPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_ObjectPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_ObjectPath::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_ObjectPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_ObjectPath::CopyFrom(const List_ObjectPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_ObjectPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_ObjectPath::IsInitialized() const {
  return true;
}

void List_ObjectPath::InternalSwap(List_ObjectPath* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_ObjectPath::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Player::_Internal {
 public:
  static const ::IvionOnline::Integer& health(const Player* msg);
  static const ::IvionOnline::Integer& actions(const Player* msg);
  static const ::IvionOnline::Integer& power(const Player* msg);
  static const ::IvionOnline::Integer& initiative(const Player* msg);
  static const ::IvionOnline::Integer& mitigate(const Player* msg);
  static const ::IvionOnline::Integer& slow(const Player* msg);
  static const ::IvionOnline::Integer& silence(const Player* msg);
  static const ::IvionOnline::Integer& disarm(const Player* msg);
  static const ::IvionOnline::Vec2i& position(const Player* msg);
  static const ::IvionOnline::List_ObjectPath& hand(const Player* msg);
  static const ::IvionOnline::List_ObjectPath& deck(const Player* msg);
  static const ::IvionOnline::List_ObjectPath& discard(const Player* msg);
  static const ::IvionOnline::List_ObjectPath& feats(const Player* msg);
  static const ::IvionOnline::Integer& maxhealth(const Player* msg);
  static const ::IvionOnline::Integer& maxactions(const Player* msg);
  static const ::IvionOnline::Integer& maxpower(const Player* msg);
  static const ::IvionOnline::Integer& maxslow(const Player* msg);
  static const ::IvionOnline::Integer& maxsilence(const Player* msg);
  static const ::IvionOnline::Integer& maxdisarm(const Player* msg);
  static const ::IvionOnline::Integer& maxmitigate(const Player* msg);
  static const ::IvionOnline::ObjectPath& abspath(const Player* msg);
};

const ::IvionOnline::Integer&
Player::_Internal::health(const Player* msg) {
  return *msg->health_;
}
const ::IvionOnline::Integer&
Player::_Internal::actions(const Player* msg) {
  return *msg->actions_;
}
const ::IvionOnline::Integer&
Player::_Internal::power(const Player* msg) {
  return *msg->power_;
}
const ::IvionOnline::Integer&
Player::_Internal::initiative(const Player* msg) {
  return *msg->initiative_;
}
const ::IvionOnline::Integer&
Player::_Internal::mitigate(const Player* msg) {
  return *msg->mitigate_;
}
const ::IvionOnline::Integer&
Player::_Internal::slow(const Player* msg) {
  return *msg->slow_;
}
const ::IvionOnline::Integer&
Player::_Internal::silence(const Player* msg) {
  return *msg->silence_;
}
const ::IvionOnline::Integer&
Player::_Internal::disarm(const Player* msg) {
  return *msg->disarm_;
}
const ::IvionOnline::Vec2i&
Player::_Internal::position(const Player* msg) {
  return *msg->position_;
}
const ::IvionOnline::List_ObjectPath&
Player::_Internal::hand(const Player* msg) {
  return *msg->hand_;
}
const ::IvionOnline::List_ObjectPath&
Player::_Internal::deck(const Player* msg) {
  return *msg->deck_;
}
const ::IvionOnline::List_ObjectPath&
Player::_Internal::discard(const Player* msg) {
  return *msg->discard_;
}
const ::IvionOnline::List_ObjectPath&
Player::_Internal::feats(const Player* msg) {
  return *msg->feats_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxhealth(const Player* msg) {
  return *msg->maxhealth_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxactions(const Player* msg) {
  return *msg->maxactions_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxpower(const Player* msg) {
  return *msg->maxpower_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxslow(const Player* msg) {
  return *msg->maxslow_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxsilence(const Player* msg) {
  return *msg->maxsilence_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxdisarm(const Player* msg) {
  return *msg->maxdisarm_;
}
const ::IvionOnline::Integer&
Player::_Internal::maxmitigate(const Player* msg) {
  return *msg->maxmitigate_;
}
const ::IvionOnline::ObjectPath&
Player::_Internal::abspath(const Player* msg) {
  return *msg->abspath_;
}
Player::Player(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Player)
}
Player::Player(const Player& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uid().empty()) {
    uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid(), 
      GetArena());
  }
  indexstr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_indexstr().empty()) {
    indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_indexstr(), 
      GetArena());
  }
  displayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_displayname().empty()) {
    displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_displayname(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_health()) {
    health_ = new ::IvionOnline::Integer(*from.health_);
  } else {
    health_ = nullptr;
  }
  if (from._internal_has_actions()) {
    actions_ = new ::IvionOnline::Integer(*from.actions_);
  } else {
    actions_ = nullptr;
  }
  if (from._internal_has_power()) {
    power_ = new ::IvionOnline::Integer(*from.power_);
  } else {
    power_ = nullptr;
  }
  if (from._internal_has_initiative()) {
    initiative_ = new ::IvionOnline::Integer(*from.initiative_);
  } else {
    initiative_ = nullptr;
  }
  if (from._internal_has_mitigate()) {
    mitigate_ = new ::IvionOnline::Integer(*from.mitigate_);
  } else {
    mitigate_ = nullptr;
  }
  if (from._internal_has_slow()) {
    slow_ = new ::IvionOnline::Integer(*from.slow_);
  } else {
    slow_ = nullptr;
  }
  if (from._internal_has_silence()) {
    silence_ = new ::IvionOnline::Integer(*from.silence_);
  } else {
    silence_ = nullptr;
  }
  if (from._internal_has_disarm()) {
    disarm_ = new ::IvionOnline::Integer(*from.disarm_);
  } else {
    disarm_ = nullptr;
  }
  if (from._internal_has_position()) {
    position_ = new ::IvionOnline::Vec2i(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_hand()) {
    hand_ = new ::IvionOnline::List_ObjectPath(*from.hand_);
  } else {
    hand_ = nullptr;
  }
  if (from._internal_has_deck()) {
    deck_ = new ::IvionOnline::List_ObjectPath(*from.deck_);
  } else {
    deck_ = nullptr;
  }
  if (from._internal_has_discard()) {
    discard_ = new ::IvionOnline::List_ObjectPath(*from.discard_);
  } else {
    discard_ = nullptr;
  }
  if (from._internal_has_feats()) {
    feats_ = new ::IvionOnline::List_ObjectPath(*from.feats_);
  } else {
    feats_ = nullptr;
  }
  if (from._internal_has_maxhealth()) {
    maxhealth_ = new ::IvionOnline::Integer(*from.maxhealth_);
  } else {
    maxhealth_ = nullptr;
  }
  if (from._internal_has_maxactions()) {
    maxactions_ = new ::IvionOnline::Integer(*from.maxactions_);
  } else {
    maxactions_ = nullptr;
  }
  if (from._internal_has_maxpower()) {
    maxpower_ = new ::IvionOnline::Integer(*from.maxpower_);
  } else {
    maxpower_ = nullptr;
  }
  if (from._internal_has_maxslow()) {
    maxslow_ = new ::IvionOnline::Integer(*from.maxslow_);
  } else {
    maxslow_ = nullptr;
  }
  if (from._internal_has_maxsilence()) {
    maxsilence_ = new ::IvionOnline::Integer(*from.maxsilence_);
  } else {
    maxsilence_ = nullptr;
  }
  if (from._internal_has_maxdisarm()) {
    maxdisarm_ = new ::IvionOnline::Integer(*from.maxdisarm_);
  } else {
    maxdisarm_ = nullptr;
  }
  if (from._internal_has_maxmitigate()) {
    maxmitigate_ = new ::IvionOnline::Integer(*from.maxmitigate_);
  } else {
    maxmitigate_ = nullptr;
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Player)
}

void Player::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Player_GameState_2eproto.base);
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indexstr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&health_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&health_)) + sizeof(index_));
}

Player::~Player() {
  // @@protoc_insertion_point(destructor:IvionOnline.Player)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Player::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  indexstr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  displayname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete health_;
  if (this != internal_default_instance()) delete actions_;
  if (this != internal_default_instance()) delete power_;
  if (this != internal_default_instance()) delete initiative_;
  if (this != internal_default_instance()) delete mitigate_;
  if (this != internal_default_instance()) delete slow_;
  if (this != internal_default_instance()) delete silence_;
  if (this != internal_default_instance()) delete disarm_;
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete hand_;
  if (this != internal_default_instance()) delete deck_;
  if (this != internal_default_instance()) delete discard_;
  if (this != internal_default_instance()) delete feats_;
  if (this != internal_default_instance()) delete maxhealth_;
  if (this != internal_default_instance()) delete maxactions_;
  if (this != internal_default_instance()) delete maxpower_;
  if (this != internal_default_instance()) delete maxslow_;
  if (this != internal_default_instance()) delete maxsilence_;
  if (this != internal_default_instance()) delete maxdisarm_;
  if (this != internal_default_instance()) delete maxmitigate_;
  if (this != internal_default_instance()) delete abspath_;
}

void Player::ArenaDtor(void* object) {
  Player* _this = reinterpret_cast< Player* >(object);
  (void)_this;
}
void Player::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Player& Player::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Player_GameState_2eproto.base);
  return *internal_default_instance();
}


void Player::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Player)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.ClearToEmpty();
  indexstr_.ClearToEmpty();
  displayname_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && health_ != nullptr) {
    delete health_;
  }
  health_ = nullptr;
  if (GetArena() == nullptr && actions_ != nullptr) {
    delete actions_;
  }
  actions_ = nullptr;
  if (GetArena() == nullptr && power_ != nullptr) {
    delete power_;
  }
  power_ = nullptr;
  if (GetArena() == nullptr && initiative_ != nullptr) {
    delete initiative_;
  }
  initiative_ = nullptr;
  if (GetArena() == nullptr && mitigate_ != nullptr) {
    delete mitigate_;
  }
  mitigate_ = nullptr;
  if (GetArena() == nullptr && slow_ != nullptr) {
    delete slow_;
  }
  slow_ = nullptr;
  if (GetArena() == nullptr && silence_ != nullptr) {
    delete silence_;
  }
  silence_ = nullptr;
  if (GetArena() == nullptr && disarm_ != nullptr) {
    delete disarm_;
  }
  disarm_ = nullptr;
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArena() == nullptr && hand_ != nullptr) {
    delete hand_;
  }
  hand_ = nullptr;
  if (GetArena() == nullptr && deck_ != nullptr) {
    delete deck_;
  }
  deck_ = nullptr;
  if (GetArena() == nullptr && discard_ != nullptr) {
    delete discard_;
  }
  discard_ = nullptr;
  if (GetArena() == nullptr && feats_ != nullptr) {
    delete feats_;
  }
  feats_ = nullptr;
  if (GetArena() == nullptr && maxhealth_ != nullptr) {
    delete maxhealth_;
  }
  maxhealth_ = nullptr;
  if (GetArena() == nullptr && maxactions_ != nullptr) {
    delete maxactions_;
  }
  maxactions_ = nullptr;
  if (GetArena() == nullptr && maxpower_ != nullptr) {
    delete maxpower_;
  }
  maxpower_ = nullptr;
  if (GetArena() == nullptr && maxslow_ != nullptr) {
    delete maxslow_;
  }
  maxslow_ = nullptr;
  if (GetArena() == nullptr && maxsilence_ != nullptr) {
    delete maxsilence_;
  }
  maxsilence_ = nullptr;
  if (GetArena() == nullptr && maxdisarm_ != nullptr) {
    delete maxdisarm_;
  }
  maxdisarm_ = nullptr;
  if (GetArena() == nullptr && maxmitigate_ != nullptr) {
    delete maxmitigate_;
  }
  maxmitigate_ = nullptr;
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Player::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string UID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Player.UID"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string IndexStr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_indexstr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Player.IndexStr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string DisplayName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_displayname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Player.DisplayName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Health = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_health(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Actions = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_actions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Power = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_power(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Initiative = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_initiative(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Mitigate = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_mitigate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Slow = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_slow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Silence = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_silence(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Disarm = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_disarm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i Position = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Hand = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_hand(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Deck = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_deck(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Discard = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_discard(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Feats = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_feats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxHealth = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxhealth(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxActions = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxactions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxPower = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxpower(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxSlow = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxslow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxSilence = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxsilence(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxDisarm = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxdisarm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer MaxMitigate = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxmitigate(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 202)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Player.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Player::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Player)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string UID = 1;
  if (this->uid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Player.UID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uid(), target);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // string IndexStr = 3;
  if (this->indexstr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_indexstr().data(), static_cast<int>(this->_internal_indexstr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Player.IndexStr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_indexstr(), target);
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_displayname().data(), static_cast<int>(this->_internal_displayname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Player.DisplayName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_displayname(), target);
  }

  // .IvionOnline.Integer Health = 5;
  if (this->has_health()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::health(this), target, stream);
  }

  // .IvionOnline.Integer Actions = 6;
  if (this->has_actions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::actions(this), target, stream);
  }

  // .IvionOnline.Integer Power = 7;
  if (this->has_power()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::power(this), target, stream);
  }

  // .IvionOnline.Integer Initiative = 8;
  if (this->has_initiative()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::initiative(this), target, stream);
  }

  // .IvionOnline.Integer Mitigate = 9;
  if (this->has_mitigate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::mitigate(this), target, stream);
  }

  // .IvionOnline.Integer Slow = 10;
  if (this->has_slow()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::slow(this), target, stream);
  }

  // .IvionOnline.Integer Silence = 11;
  if (this->has_silence()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::silence(this), target, stream);
  }

  // .IvionOnline.Integer Disarm = 12;
  if (this->has_disarm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::disarm(this), target, stream);
  }

  // .IvionOnline.Vec2i Position = 13;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::position(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Hand = 14;
  if (this->has_hand()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::hand(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Deck = 15;
  if (this->has_deck()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::deck(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Discard = 16;
  if (this->has_discard()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::discard(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Feats = 17;
  if (this->has_feats()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::feats(this), target, stream);
  }

  // .IvionOnline.Integer MaxHealth = 18;
  if (this->has_maxhealth()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::maxhealth(this), target, stream);
  }

  // .IvionOnline.Integer MaxActions = 19;
  if (this->has_maxactions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::maxactions(this), target, stream);
  }

  // .IvionOnline.Integer MaxPower = 20;
  if (this->has_maxpower()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::maxpower(this), target, stream);
  }

  // .IvionOnline.Integer MaxSlow = 21;
  if (this->has_maxslow()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::maxslow(this), target, stream);
  }

  // .IvionOnline.Integer MaxSilence = 22;
  if (this->has_maxsilence()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::maxsilence(this), target, stream);
  }

  // .IvionOnline.Integer MaxDisarm = 23;
  if (this->has_maxdisarm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        23, _Internal::maxdisarm(this), target, stream);
  }

  // .IvionOnline.Integer MaxMitigate = 24;
  if (this->has_maxmitigate()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        24, _Internal::maxmitigate(this), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 25;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        25, _Internal::abspath(this), target, stream);
  }

  // string Name = 26;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Player.Name");
    target = stream->WriteStringMaybeAliased(
        26, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Player)
  return target;
}

size_t Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Player)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UID = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  // string IndexStr = 3;
  if (this->indexstr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_indexstr());
  }

  // string DisplayName = 4;
  if (this->displayname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_displayname());
  }

  // string Name = 26;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.Integer Health = 5;
  if (this->has_health()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *health_);
  }

  // .IvionOnline.Integer Actions = 6;
  if (this->has_actions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actions_);
  }

  // .IvionOnline.Integer Power = 7;
  if (this->has_power()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *power_);
  }

  // .IvionOnline.Integer Initiative = 8;
  if (this->has_initiative()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *initiative_);
  }

  // .IvionOnline.Integer Mitigate = 9;
  if (this->has_mitigate()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mitigate_);
  }

  // .IvionOnline.Integer Slow = 10;
  if (this->has_slow()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *slow_);
  }

  // .IvionOnline.Integer Silence = 11;
  if (this->has_silence()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *silence_);
  }

  // .IvionOnline.Integer Disarm = 12;
  if (this->has_disarm()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *disarm_);
  }

  // .IvionOnline.Vec2i Position = 13;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .IvionOnline.List_ObjectPath Hand = 14;
  if (this->has_hand()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *hand_);
  }

  // .IvionOnline.List_ObjectPath Deck = 15;
  if (this->has_deck()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *deck_);
  }

  // .IvionOnline.List_ObjectPath Discard = 16;
  if (this->has_discard()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *discard_);
  }

  // .IvionOnline.List_ObjectPath Feats = 17;
  if (this->has_feats()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *feats_);
  }

  // .IvionOnline.Integer MaxHealth = 18;
  if (this->has_maxhealth()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxhealth_);
  }

  // .IvionOnline.Integer MaxActions = 19;
  if (this->has_maxactions()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxactions_);
  }

  // .IvionOnline.Integer MaxPower = 20;
  if (this->has_maxpower()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxpower_);
  }

  // .IvionOnline.Integer MaxSlow = 21;
  if (this->has_maxslow()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxslow_);
  }

  // .IvionOnline.Integer MaxSilence = 22;
  if (this->has_maxsilence()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxsilence_);
  }

  // .IvionOnline.Integer MaxDisarm = 23;
  if (this->has_maxdisarm()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxdisarm_);
  }

  // .IvionOnline.Integer MaxMitigate = 24;
  if (this->has_maxmitigate()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxmitigate_);
  }

  // .IvionOnline.ObjectPath AbsPath = 25;
  if (this->has_abspath()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Player::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const Player* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Player>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Player)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Player)
    MergeFrom(*source);
  }
}

void Player::MergeFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid().size() > 0) {
    _internal_set_uid(from._internal_uid());
  }
  if (from.indexstr().size() > 0) {
    _internal_set_indexstr(from._internal_indexstr());
  }
  if (from.displayname().size() > 0) {
    _internal_set_displayname(from._internal_displayname());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_health()) {
    _internal_mutable_health()->::IvionOnline::Integer::MergeFrom(from._internal_health());
  }
  if (from.has_actions()) {
    _internal_mutable_actions()->::IvionOnline::Integer::MergeFrom(from._internal_actions());
  }
  if (from.has_power()) {
    _internal_mutable_power()->::IvionOnline::Integer::MergeFrom(from._internal_power());
  }
  if (from.has_initiative()) {
    _internal_mutable_initiative()->::IvionOnline::Integer::MergeFrom(from._internal_initiative());
  }
  if (from.has_mitigate()) {
    _internal_mutable_mitigate()->::IvionOnline::Integer::MergeFrom(from._internal_mitigate());
  }
  if (from.has_slow()) {
    _internal_mutable_slow()->::IvionOnline::Integer::MergeFrom(from._internal_slow());
  }
  if (from.has_silence()) {
    _internal_mutable_silence()->::IvionOnline::Integer::MergeFrom(from._internal_silence());
  }
  if (from.has_disarm()) {
    _internal_mutable_disarm()->::IvionOnline::Integer::MergeFrom(from._internal_disarm());
  }
  if (from.has_position()) {
    _internal_mutable_position()->::IvionOnline::Vec2i::MergeFrom(from._internal_position());
  }
  if (from.has_hand()) {
    _internal_mutable_hand()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_hand());
  }
  if (from.has_deck()) {
    _internal_mutable_deck()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_deck());
  }
  if (from.has_discard()) {
    _internal_mutable_discard()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_discard());
  }
  if (from.has_feats()) {
    _internal_mutable_feats()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_feats());
  }
  if (from.has_maxhealth()) {
    _internal_mutable_maxhealth()->::IvionOnline::Integer::MergeFrom(from._internal_maxhealth());
  }
  if (from.has_maxactions()) {
    _internal_mutable_maxactions()->::IvionOnline::Integer::MergeFrom(from._internal_maxactions());
  }
  if (from.has_maxpower()) {
    _internal_mutable_maxpower()->::IvionOnline::Integer::MergeFrom(from._internal_maxpower());
  }
  if (from.has_maxslow()) {
    _internal_mutable_maxslow()->::IvionOnline::Integer::MergeFrom(from._internal_maxslow());
  }
  if (from.has_maxsilence()) {
    _internal_mutable_maxsilence()->::IvionOnline::Integer::MergeFrom(from._internal_maxsilence());
  }
  if (from.has_maxdisarm()) {
    _internal_mutable_maxdisarm()->::IvionOnline::Integer::MergeFrom(from._internal_maxdisarm());
  }
  if (from.has_maxmitigate()) {
    _internal_mutable_maxmitigate()->::IvionOnline::Integer::MergeFrom(from._internal_maxmitigate());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void Player::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Player::CopyFrom(const Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Player::IsInitialized() const {
  return true;
}

void Player::InternalSwap(Player* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uid_.Swap(&other->uid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  indexstr_.Swap(&other->indexstr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  displayname_.Swap(&other->displayname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player, index_)
      + sizeof(Player::index_)
      - PROTOBUF_FIELD_OFFSET(Player, health_)>(
          reinterpret_cast<char*>(&health_),
          reinterpret_cast<char*>(&other->health_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Player::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Player::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Player* msg);
};

const ::IvionOnline::ObjectPath&
List_Player::_Internal::abspath(const List_Player* msg) {
  return *msg->abspath_;
}
List_Player::List_Player(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Player)
}
List_Player::List_Player(const List_Player& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Player)
}

void List_Player::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Player_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Player::~List_Player() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Player)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Player::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Player::ArenaDtor(void* object) {
  List_Player* _this = reinterpret_cast< List_Player* >(object);
  (void)_this;
}
void List_Player::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Player::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Player& List_Player::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Player_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Player)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Player::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Player element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Player.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Player::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Player)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Player element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Player.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Player)
  return target;
}

size_t List_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Player)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Player element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Player::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Player)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Player* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Player>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Player)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Player)
    MergeFrom(*source);
  }
}

void List_Player::MergeFrom(const List_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Player::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Player::CopyFrom(const List_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Player::IsInitialized() const {
  return true;
}

void List_Player::InternalSwap(List_Player* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Player::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Card::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& cardstats(const Card* msg);
  static const ::IvionOnline::ObjectPath& abspath(const Card* msg);
};

const ::IvionOnline::ObjectPath&
Card::_Internal::cardstats(const Card* msg) {
  return *msg->cardstats_;
}
const ::IvionOnline::ObjectPath&
Card::_Internal::abspath(const Card* msg) {
  return *msg->abspath_;
}
Card::Card(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Card)
}
Card::Card(const Card& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  indexstr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_indexstr().empty()) {
    indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_indexstr(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_cardstats()) {
    cardstats_ = new ::IvionOnline::ObjectPath(*from.cardstats_);
  } else {
    cardstats_ = nullptr;
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Card)
}

void Card::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Card_GameState_2eproto.base);
  indexstr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&cardstats_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&cardstats_)) + sizeof(index_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:IvionOnline.Card)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Card::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  indexstr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cardstats_;
  if (this != internal_default_instance()) delete abspath_;
}

void Card::ArenaDtor(void* object) {
  Card* _this = reinterpret_cast< Card* >(object);
  (void)_this;
}
void Card::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Card& Card::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Card_GameState_2eproto.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Card)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexstr_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && cardstats_ != nullptr) {
    delete cardstats_;
  }
  cardstats_ = nullptr;
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Card::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath CardStats = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_cardstats(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string IndexStr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_indexstr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Card.IndexStr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Card.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Card::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Card)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath CardStats = 1;
  if (this->has_cardstats()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::cardstats(this), target, stream);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // string IndexStr = 3;
  if (this->indexstr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_indexstr().data(), static_cast<int>(this->_internal_indexstr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Card.IndexStr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_indexstr(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 4;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::abspath(this), target, stream);
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Card.Name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Card)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string IndexStr = 3;
  if (this->indexstr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_indexstr());
  }

  // string Name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath CardStats = 1;
  if (this->has_cardstats()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cardstats_);
  }

  // .IvionOnline.ObjectPath AbsPath = 4;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Card>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Card)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.indexstr().size() > 0) {
    _internal_set_indexstr(from._internal_indexstr());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_cardstats()) {
    _internal_mutable_cardstats()->::IvionOnline::ObjectPath::MergeFrom(from._internal_cardstats());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void Card::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::InternalSwap(Card* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  indexstr_.Swap(&other->indexstr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Card, index_)
      + sizeof(Card::index_)
      - PROTOBUF_FIELD_OFFSET(Card, cardstats_)>(
          reinterpret_cast<char*>(&cardstats_),
          reinterpret_cast<char*>(&other->cardstats_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Card::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Card::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Card* msg);
};

const ::IvionOnline::ObjectPath&
List_Card::_Internal::abspath(const List_Card* msg) {
  return *msg->abspath_;
}
List_Card::List_Card(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Card)
}
List_Card::List_Card(const List_Card& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Card)
}

void List_Card::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Card_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Card::~List_Card() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Card)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Card::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Card::ArenaDtor(void* object) {
  List_Card* _this = reinterpret_cast< List_Card* >(object);
  (void)_this;
}
void List_Card::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Card& List_Card::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Card_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Card::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Card)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Card::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Card element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Card.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Card::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Card)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Card element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Card.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Card)
  return target;
}

size_t List_Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Card)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Card element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Card::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Card)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Card* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Card>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Card)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Card)
    MergeFrom(*source);
  }
}

void List_Card::MergeFrom(const List_Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Card::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Card::CopyFrom(const List_Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Card::IsInitialized() const {
  return true;
}

void List_Card::InternalSwap(List_Card* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Card::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CardData::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& owner(const CardData* msg);
  static const ::IvionOnline::ObjectPath& controller(const CardData* msg);
  static const ::IvionOnline::Integer& actioncost(const CardData* msg);
  static const ::IvionOnline::Integer& powercost(const CardData* msg);
  static const ::IvionOnline::Integer& range(const CardData* msg);
  static const ::IvionOnline::Boolean& affectedbyslow(const CardData* msg);
  static const ::IvionOnline::Boolean& affectedbysilence(const CardData* msg);
  static const ::IvionOnline::Boolean& affectedbydisarm(const CardData* msg);
  static const ::IvionOnline::ObjectPath& attached(const CardData* msg);
  static const ::IvionOnline::List_Method& omnipresenteffect(const CardData* msg);
  static const ::IvionOnline::List_Method& passiveeffect(const CardData* msg);
  static const ::IvionOnline::List_Method& feateffect(const CardData* msg);
  static const ::IvionOnline::List_Method& playeffect(const CardData* msg);
  static const ::IvionOnline::List_Method& resolveeffect(const CardData* msg);
  static const ::IvionOnline::ObjectPath& abspath(const CardData* msg);
};

const ::IvionOnline::ObjectPath&
CardData::_Internal::owner(const CardData* msg) {
  return *msg->owner_;
}
const ::IvionOnline::ObjectPath&
CardData::_Internal::controller(const CardData* msg) {
  return *msg->controller_;
}
const ::IvionOnline::Integer&
CardData::_Internal::actioncost(const CardData* msg) {
  return *msg->actioncost_;
}
const ::IvionOnline::Integer&
CardData::_Internal::powercost(const CardData* msg) {
  return *msg->powercost_;
}
const ::IvionOnline::Integer&
CardData::_Internal::range(const CardData* msg) {
  return *msg->range_;
}
const ::IvionOnline::Boolean&
CardData::_Internal::affectedbyslow(const CardData* msg) {
  return *msg->affectedbyslow_;
}
const ::IvionOnline::Boolean&
CardData::_Internal::affectedbysilence(const CardData* msg) {
  return *msg->affectedbysilence_;
}
const ::IvionOnline::Boolean&
CardData::_Internal::affectedbydisarm(const CardData* msg) {
  return *msg->affectedbydisarm_;
}
const ::IvionOnline::ObjectPath&
CardData::_Internal::attached(const CardData* msg) {
  return *msg->attached_;
}
const ::IvionOnline::List_Method&
CardData::_Internal::omnipresenteffect(const CardData* msg) {
  return *msg->omnipresenteffect_;
}
const ::IvionOnline::List_Method&
CardData::_Internal::passiveeffect(const CardData* msg) {
  return *msg->passiveeffect_;
}
const ::IvionOnline::List_Method&
CardData::_Internal::feateffect(const CardData* msg) {
  return *msg->feateffect_;
}
const ::IvionOnline::List_Method&
CardData::_Internal::playeffect(const CardData* msg) {
  return *msg->playeffect_;
}
const ::IvionOnline::List_Method&
CardData::_Internal::resolveeffect(const CardData* msg) {
  return *msg->resolveeffect_;
}
const ::IvionOnline::ObjectPath&
CardData::_Internal::abspath(const CardData* msg) {
  return *msg->abspath_;
}
CardData::CardData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.CardData)
}
CardData::CardData(const CardData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_owner()) {
    owner_ = new ::IvionOnline::ObjectPath(*from.owner_);
  } else {
    owner_ = nullptr;
  }
  if (from._internal_has_controller()) {
    controller_ = new ::IvionOnline::ObjectPath(*from.controller_);
  } else {
    controller_ = nullptr;
  }
  if (from._internal_has_actioncost()) {
    actioncost_ = new ::IvionOnline::Integer(*from.actioncost_);
  } else {
    actioncost_ = nullptr;
  }
  if (from._internal_has_powercost()) {
    powercost_ = new ::IvionOnline::Integer(*from.powercost_);
  } else {
    powercost_ = nullptr;
  }
  if (from._internal_has_range()) {
    range_ = new ::IvionOnline::Integer(*from.range_);
  } else {
    range_ = nullptr;
  }
  if (from._internal_has_affectedbyslow()) {
    affectedbyslow_ = new ::IvionOnline::Boolean(*from.affectedbyslow_);
  } else {
    affectedbyslow_ = nullptr;
  }
  if (from._internal_has_affectedbysilence()) {
    affectedbysilence_ = new ::IvionOnline::Boolean(*from.affectedbysilence_);
  } else {
    affectedbysilence_ = nullptr;
  }
  if (from._internal_has_affectedbydisarm()) {
    affectedbydisarm_ = new ::IvionOnline::Boolean(*from.affectedbydisarm_);
  } else {
    affectedbydisarm_ = nullptr;
  }
  if (from._internal_has_attached()) {
    attached_ = new ::IvionOnline::ObjectPath(*from.attached_);
  } else {
    attached_ = nullptr;
  }
  if (from._internal_has_omnipresenteffect()) {
    omnipresenteffect_ = new ::IvionOnline::List_Method(*from.omnipresenteffect_);
  } else {
    omnipresenteffect_ = nullptr;
  }
  if (from._internal_has_passiveeffect()) {
    passiveeffect_ = new ::IvionOnline::List_Method(*from.passiveeffect_);
  } else {
    passiveeffect_ = nullptr;
  }
  if (from._internal_has_feateffect()) {
    feateffect_ = new ::IvionOnline::List_Method(*from.feateffect_);
  } else {
    feateffect_ = nullptr;
  }
  if (from._internal_has_playeffect()) {
    playeffect_ = new ::IvionOnline::List_Method(*from.playeffect_);
  } else {
    playeffect_ = nullptr;
  }
  if (from._internal_has_resolveeffect()) {
    resolveeffect_ = new ::IvionOnline::List_Method(*from.resolveeffect_);
  } else {
    resolveeffect_ = nullptr;
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.CardData)
}

void CardData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CardData_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&owner_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&abspath_) -
      reinterpret_cast<char*>(&owner_)) + sizeof(abspath_));
}

CardData::~CardData() {
  // @@protoc_insertion_point(destructor:IvionOnline.CardData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CardData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete owner_;
  if (this != internal_default_instance()) delete controller_;
  if (this != internal_default_instance()) delete actioncost_;
  if (this != internal_default_instance()) delete powercost_;
  if (this != internal_default_instance()) delete range_;
  if (this != internal_default_instance()) delete affectedbyslow_;
  if (this != internal_default_instance()) delete affectedbysilence_;
  if (this != internal_default_instance()) delete affectedbydisarm_;
  if (this != internal_default_instance()) delete attached_;
  if (this != internal_default_instance()) delete omnipresenteffect_;
  if (this != internal_default_instance()) delete passiveeffect_;
  if (this != internal_default_instance()) delete feateffect_;
  if (this != internal_default_instance()) delete playeffect_;
  if (this != internal_default_instance()) delete resolveeffect_;
  if (this != internal_default_instance()) delete abspath_;
}

void CardData::ArenaDtor(void* object) {
  CardData* _this = reinterpret_cast< CardData* >(object);
  (void)_this;
}
void CardData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CardData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CardData& CardData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CardData_GameState_2eproto.base);
  return *internal_default_instance();
}


void CardData::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.CardData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && owner_ != nullptr) {
    delete owner_;
  }
  owner_ = nullptr;
  if (GetArena() == nullptr && controller_ != nullptr) {
    delete controller_;
  }
  controller_ = nullptr;
  if (GetArena() == nullptr && actioncost_ != nullptr) {
    delete actioncost_;
  }
  actioncost_ = nullptr;
  if (GetArena() == nullptr && powercost_ != nullptr) {
    delete powercost_;
  }
  powercost_ = nullptr;
  if (GetArena() == nullptr && range_ != nullptr) {
    delete range_;
  }
  range_ = nullptr;
  if (GetArena() == nullptr && affectedbyslow_ != nullptr) {
    delete affectedbyslow_;
  }
  affectedbyslow_ = nullptr;
  if (GetArena() == nullptr && affectedbysilence_ != nullptr) {
    delete affectedbysilence_;
  }
  affectedbysilence_ = nullptr;
  if (GetArena() == nullptr && affectedbydisarm_ != nullptr) {
    delete affectedbydisarm_;
  }
  affectedbydisarm_ = nullptr;
  if (GetArena() == nullptr && attached_ != nullptr) {
    delete attached_;
  }
  attached_ = nullptr;
  if (GetArena() == nullptr && omnipresenteffect_ != nullptr) {
    delete omnipresenteffect_;
  }
  omnipresenteffect_ = nullptr;
  if (GetArena() == nullptr && passiveeffect_ != nullptr) {
    delete passiveeffect_;
  }
  passiveeffect_ = nullptr;
  if (GetArena() == nullptr && feateffect_ != nullptr) {
    delete feateffect_;
  }
  feateffect_ = nullptr;
  if (GetArena() == nullptr && playeffect_ != nullptr) {
    delete playeffect_;
  }
  playeffect_ = nullptr;
  if (GetArena() == nullptr && resolveeffect_ != nullptr) {
    delete resolveeffect_;
  }
  resolveeffect_ = nullptr;
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CardData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Owner = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_owner(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Controller = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_controller(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer ActionCost = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_actioncost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer PowerCost = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_powercost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer Range = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_range(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean AffectedBySlow = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_affectedbyslow(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean AffectedBySilence = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_affectedbysilence(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean AffectedByDisarm = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_affectedbydisarm(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Attached = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_attached(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Method OmniPresentEffect = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_omnipresenteffect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Method PassiveEffect = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_passiveeffect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Method FeatEffect = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_feateffect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Method PlayEffect = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_playeffect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Method ResolveEffect = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_resolveeffect(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.CardData.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CardData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.CardData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Owner = 1;
  if (this->has_owner()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::owner(this), target, stream);
  }

  // .IvionOnline.ObjectPath Controller = 2;
  if (this->has_controller()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::controller(this), target, stream);
  }

  // .IvionOnline.Integer ActionCost = 3;
  if (this->has_actioncost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::actioncost(this), target, stream);
  }

  // .IvionOnline.Integer PowerCost = 4;
  if (this->has_powercost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::powercost(this), target, stream);
  }

  // .IvionOnline.Integer Range = 5;
  if (this->has_range()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::range(this), target, stream);
  }

  // .IvionOnline.Boolean AffectedBySlow = 6;
  if (this->has_affectedbyslow()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::affectedbyslow(this), target, stream);
  }

  // .IvionOnline.Boolean AffectedBySilence = 7;
  if (this->has_affectedbysilence()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::affectedbysilence(this), target, stream);
  }

  // .IvionOnline.Boolean AffectedByDisarm = 8;
  if (this->has_affectedbydisarm()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::affectedbydisarm(this), target, stream);
  }

  // .IvionOnline.ObjectPath Attached = 9;
  if (this->has_attached()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::attached(this), target, stream);
  }

  // .IvionOnline.List_Method OmniPresentEffect = 10;
  if (this->has_omnipresenteffect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::omnipresenteffect(this), target, stream);
  }

  // .IvionOnline.List_Method PassiveEffect = 11;
  if (this->has_passiveeffect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::passiveeffect(this), target, stream);
  }

  // .IvionOnline.List_Method FeatEffect = 12;
  if (this->has_feateffect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::feateffect(this), target, stream);
  }

  // .IvionOnline.List_Method PlayEffect = 13;
  if (this->has_playeffect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::playeffect(this), target, stream);
  }

  // .IvionOnline.List_Method ResolveEffect = 14;
  if (this->has_resolveeffect()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::resolveeffect(this), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 15;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::abspath(this), target, stream);
  }

  // string Name = 16;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.CardData.Name");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.CardData)
  return target;
}

size_t CardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.CardData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 16;
  if (this->name().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath Owner = 1;
  if (this->has_owner()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *owner_);
  }

  // .IvionOnline.ObjectPath Controller = 2;
  if (this->has_controller()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *controller_);
  }

  // .IvionOnline.Integer ActionCost = 3;
  if (this->has_actioncost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actioncost_);
  }

  // .IvionOnline.Integer PowerCost = 4;
  if (this->has_powercost()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *powercost_);
  }

  // .IvionOnline.Integer Range = 5;
  if (this->has_range()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *range_);
  }

  // .IvionOnline.Boolean AffectedBySlow = 6;
  if (this->has_affectedbyslow()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *affectedbyslow_);
  }

  // .IvionOnline.Boolean AffectedBySilence = 7;
  if (this->has_affectedbysilence()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *affectedbysilence_);
  }

  // .IvionOnline.Boolean AffectedByDisarm = 8;
  if (this->has_affectedbydisarm()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *affectedbydisarm_);
  }

  // .IvionOnline.ObjectPath Attached = 9;
  if (this->has_attached()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *attached_);
  }

  // .IvionOnline.List_Method OmniPresentEffect = 10;
  if (this->has_omnipresenteffect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *omnipresenteffect_);
  }

  // .IvionOnline.List_Method PassiveEffect = 11;
  if (this->has_passiveeffect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *passiveeffect_);
  }

  // .IvionOnline.List_Method FeatEffect = 12;
  if (this->has_feateffect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *feateffect_);
  }

  // .IvionOnline.List_Method PlayEffect = 13;
  if (this->has_playeffect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *playeffect_);
  }

  // .IvionOnline.List_Method ResolveEffect = 14;
  if (this->has_resolveeffect()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *resolveeffect_);
  }

  // .IvionOnline.ObjectPath AbsPath = 15;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CardData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.CardData)
  GOOGLE_DCHECK_NE(&from, this);
  const CardData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CardData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.CardData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.CardData)
    MergeFrom(*source);
  }
}

void CardData::MergeFrom(const CardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.CardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_owner()) {
    _internal_mutable_owner()->::IvionOnline::ObjectPath::MergeFrom(from._internal_owner());
  }
  if (from.has_controller()) {
    _internal_mutable_controller()->::IvionOnline::ObjectPath::MergeFrom(from._internal_controller());
  }
  if (from.has_actioncost()) {
    _internal_mutable_actioncost()->::IvionOnline::Integer::MergeFrom(from._internal_actioncost());
  }
  if (from.has_powercost()) {
    _internal_mutable_powercost()->::IvionOnline::Integer::MergeFrom(from._internal_powercost());
  }
  if (from.has_range()) {
    _internal_mutable_range()->::IvionOnline::Integer::MergeFrom(from._internal_range());
  }
  if (from.has_affectedbyslow()) {
    _internal_mutable_affectedbyslow()->::IvionOnline::Boolean::MergeFrom(from._internal_affectedbyslow());
  }
  if (from.has_affectedbysilence()) {
    _internal_mutable_affectedbysilence()->::IvionOnline::Boolean::MergeFrom(from._internal_affectedbysilence());
  }
  if (from.has_affectedbydisarm()) {
    _internal_mutable_affectedbydisarm()->::IvionOnline::Boolean::MergeFrom(from._internal_affectedbydisarm());
  }
  if (from.has_attached()) {
    _internal_mutable_attached()->::IvionOnline::ObjectPath::MergeFrom(from._internal_attached());
  }
  if (from.has_omnipresenteffect()) {
    _internal_mutable_omnipresenteffect()->::IvionOnline::List_Method::MergeFrom(from._internal_omnipresenteffect());
  }
  if (from.has_passiveeffect()) {
    _internal_mutable_passiveeffect()->::IvionOnline::List_Method::MergeFrom(from._internal_passiveeffect());
  }
  if (from.has_feateffect()) {
    _internal_mutable_feateffect()->::IvionOnline::List_Method::MergeFrom(from._internal_feateffect());
  }
  if (from.has_playeffect()) {
    _internal_mutable_playeffect()->::IvionOnline::List_Method::MergeFrom(from._internal_playeffect());
  }
  if (from.has_resolveeffect()) {
    _internal_mutable_resolveeffect()->::IvionOnline::List_Method::MergeFrom(from._internal_resolveeffect());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void CardData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.CardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CardData::CopyFrom(const CardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.CardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CardData::IsInitialized() const {
  return true;
}

void CardData::InternalSwap(CardData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CardData, abspath_)
      + sizeof(CardData::abspath_)
      - PROTOBUF_FIELD_OFFSET(CardData, owner_)>(
          reinterpret_cast<char*>(&owner_),
          reinterpret_cast<char*>(&other->owner_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CardData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_CardData::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_CardData* msg);
};

const ::IvionOnline::ObjectPath&
List_CardData::_Internal::abspath(const List_CardData* msg) {
  return *msg->abspath_;
}
List_CardData::List_CardData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_CardData)
}
List_CardData::List_CardData(const List_CardData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_CardData)
}

void List_CardData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_CardData_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_CardData::~List_CardData() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_CardData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_CardData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_CardData::ArenaDtor(void* object) {
  List_CardData* _this = reinterpret_cast< List_CardData* >(object);
  (void)_this;
}
void List_CardData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_CardData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_CardData& List_CardData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_CardData_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_CardData::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_CardData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_CardData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.CardData element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_CardData.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_CardData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_CardData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.CardData element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_CardData.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_CardData)
  return target;
}

size_t List_CardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_CardData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.CardData element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_CardData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_CardData)
  GOOGLE_DCHECK_NE(&from, this);
  const List_CardData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_CardData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_CardData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_CardData)
    MergeFrom(*source);
  }
}

void List_CardData::MergeFrom(const List_CardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_CardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_CardData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_CardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_CardData::CopyFrom(const List_CardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_CardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_CardData::IsInitialized() const {
  return true;
}

void List_CardData::InternalSwap(List_CardData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_CardData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Tile::_Internal {
 public:
  static const ::IvionOnline::Vec2i& position(const Tile* msg);
  static const ::IvionOnline::Terrain& terrain(const Tile* msg);
  static const ::IvionOnline::ObjectPath& abspath(const Tile* msg);
};

const ::IvionOnline::Vec2i&
Tile::_Internal::position(const Tile* msg) {
  return *msg->position_;
}
const ::IvionOnline::Terrain&
Tile::_Internal::terrain(const Tile* msg) {
  return *msg->terrain_;
}
const ::IvionOnline::ObjectPath&
Tile::_Internal::abspath(const Tile* msg) {
  return *msg->abspath_;
}
Tile::Tile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Tile)
}
Tile::Tile(const Tile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  indexstr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_indexstr().empty()) {
    indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_indexstr(), 
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_position()) {
    position_ = new ::IvionOnline::Vec2i(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_terrain()) {
    terrain_ = new ::IvionOnline::Terrain(*from.terrain_);
  } else {
    terrain_ = nullptr;
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Tile)
}

void Tile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Tile_GameState_2eproto.base);
  indexstr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&position_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&position_)) + sizeof(index_));
}

Tile::~Tile() {
  // @@protoc_insertion_point(destructor:IvionOnline.Tile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Tile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  indexstr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete terrain_;
  if (this != internal_default_instance()) delete abspath_;
}

void Tile::ArenaDtor(void* object) {
  Tile* _this = reinterpret_cast< Tile* >(object);
  (void)_this;
}
void Tile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tile& Tile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Tile_GameState_2eproto.base);
  return *internal_default_instance();
}


void Tile::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Tile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indexstr_.ClearToEmpty();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
  if (GetArena() == nullptr && terrain_ != nullptr) {
    delete terrain_;
  }
  terrain_ = nullptr;
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Vec2i Position = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string IndexStr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_indexstr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Tile.IndexStr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain Terrain = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_terrain(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.Tile.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Tile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Tile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Vec2i Position = 1;
  if (this->has_position()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::position(this), target, stream);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_index(), target);
  }

  // string IndexStr = 3;
  if (this->indexstr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_indexstr().data(), static_cast<int>(this->_internal_indexstr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Tile.IndexStr");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_indexstr(), target);
  }

  // .IvionOnline.Terrain Terrain = 4;
  if (this->has_terrain()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::terrain(this), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 5;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::abspath(this), target, stream);
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.Tile.Name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Tile)
  return target;
}

size_t Tile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Tile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string IndexStr = 3;
  if (this->indexstr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_indexstr());
  }

  // string Name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.Vec2i Position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .IvionOnline.Terrain Terrain = 4;
  if (this->has_terrain()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *terrain_);
  }

  // .IvionOnline.ObjectPath AbsPath = 5;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  // int32 Index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Tile)
  GOOGLE_DCHECK_NE(&from, this);
  const Tile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Tile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Tile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Tile)
    MergeFrom(*source);
  }
}

void Tile::MergeFrom(const Tile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Tile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.indexstr().size() > 0) {
    _internal_set_indexstr(from._internal_indexstr());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_position()) {
    _internal_mutable_position()->::IvionOnline::Vec2i::MergeFrom(from._internal_position());
  }
  if (from.has_terrain()) {
    _internal_mutable_terrain()->::IvionOnline::Terrain::MergeFrom(from._internal_terrain());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void Tile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tile::CopyFrom(const Tile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tile::IsInitialized() const {
  return true;
}

void Tile::InternalSwap(Tile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  indexstr_.Swap(&other->indexstr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tile, index_)
      + sizeof(Tile::index_)
      - PROTOBUF_FIELD_OFFSET(Tile, position_)>(
          reinterpret_cast<char*>(&position_),
          reinterpret_cast<char*>(&other->position_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Tile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Tile::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Tile* msg);
};

const ::IvionOnline::ObjectPath&
List_Tile::_Internal::abspath(const List_Tile* msg) {
  return *msg->abspath_;
}
List_Tile::List_Tile(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Tile)
}
List_Tile::List_Tile(const List_Tile& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Tile)
}

void List_Tile::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Tile_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Tile::~List_Tile() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Tile)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Tile::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Tile::ArenaDtor(void* object) {
  List_Tile* _this = reinterpret_cast< List_Tile* >(object);
  (void)_this;
}
void List_Tile::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Tile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Tile& List_Tile::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Tile_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Tile::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Tile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Tile::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Tile element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Tile.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Tile::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Tile)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Tile element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Tile.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Tile)
  return target;
}

size_t List_Tile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Tile)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Tile element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Tile::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Tile)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Tile* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Tile>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Tile)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Tile)
    MergeFrom(*source);
  }
}

void List_Tile::MergeFrom(const List_Tile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Tile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Tile::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Tile::CopyFrom(const List_Tile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Tile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Tile::IsInitialized() const {
  return true;
}

void List_Tile::InternalSwap(List_Tile* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Tile::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GameState::_Internal {
 public:
  static const ::IvionOnline::List_Player& players(const GameState* msg);
  static const ::IvionOnline::List_Card& cards(const GameState* msg);
  static const ::IvionOnline::List_CardData& carddata(const GameState* msg);
  static const ::IvionOnline::List_Tile& tiles(const GameState* msg);
  static const ::IvionOnline::List_ObjectPath& field(const GameState* msg);
  static const ::IvionOnline::Integer& turnnumber(const GameState* msg);
  static const ::IvionOnline::ObjectPath& abspath(const GameState* msg);
};

const ::IvionOnline::List_Player&
GameState::_Internal::players(const GameState* msg) {
  return *msg->players_;
}
const ::IvionOnline::List_Card&
GameState::_Internal::cards(const GameState* msg) {
  return *msg->cards_;
}
const ::IvionOnline::List_CardData&
GameState::_Internal::carddata(const GameState* msg) {
  return *msg->carddata_;
}
const ::IvionOnline::List_Tile&
GameState::_Internal::tiles(const GameState* msg) {
  return *msg->tiles_;
}
const ::IvionOnline::List_ObjectPath&
GameState::_Internal::field(const GameState* msg) {
  return *msg->field_;
}
const ::IvionOnline::Integer&
GameState::_Internal::turnnumber(const GameState* msg) {
  return *msg->turnnumber_;
}
const ::IvionOnline::ObjectPath&
GameState::_Internal::abspath(const GameState* msg) {
  return *msg->abspath_;
}
GameState::GameState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.GameState)
}
GameState::GameState(const GameState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_players()) {
    players_ = new ::IvionOnline::List_Player(*from.players_);
  } else {
    players_ = nullptr;
  }
  if (from._internal_has_cards()) {
    cards_ = new ::IvionOnline::List_Card(*from.cards_);
  } else {
    cards_ = nullptr;
  }
  if (from._internal_has_carddata()) {
    carddata_ = new ::IvionOnline::List_CardData(*from.carddata_);
  } else {
    carddata_ = nullptr;
  }
  if (from._internal_has_tiles()) {
    tiles_ = new ::IvionOnline::List_Tile(*from.tiles_);
  } else {
    tiles_ = nullptr;
  }
  if (from._internal_has_field()) {
    field_ = new ::IvionOnline::List_ObjectPath(*from.field_);
  } else {
    field_ = nullptr;
  }
  if (from._internal_has_turnnumber()) {
    turnnumber_ = new ::IvionOnline::Integer(*from.turnnumber_);
  } else {
    turnnumber_ = nullptr;
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.GameState)
}

void GameState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GameState_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&players_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&abspath_) -
      reinterpret_cast<char*>(&players_)) + sizeof(abspath_));
}

GameState::~GameState() {
  // @@protoc_insertion_point(destructor:IvionOnline.GameState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GameState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete players_;
  if (this != internal_default_instance()) delete cards_;
  if (this != internal_default_instance()) delete carddata_;
  if (this != internal_default_instance()) delete tiles_;
  if (this != internal_default_instance()) delete field_;
  if (this != internal_default_instance()) delete turnnumber_;
  if (this != internal_default_instance()) delete abspath_;
}

void GameState::ArenaDtor(void* object) {
  GameState* _this = reinterpret_cast< GameState* >(object);
  (void)_this;
}
void GameState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GameState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameState& GameState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GameState_GameState_2eproto.base);
  return *internal_default_instance();
}


void GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.GameState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && players_ != nullptr) {
    delete players_;
  }
  players_ = nullptr;
  if (GetArena() == nullptr && cards_ != nullptr) {
    delete cards_;
  }
  cards_ = nullptr;
  if (GetArena() == nullptr && carddata_ != nullptr) {
    delete carddata_;
  }
  carddata_ = nullptr;
  if (GetArena() == nullptr && tiles_ != nullptr) {
    delete tiles_;
  }
  tiles_ = nullptr;
  if (GetArena() == nullptr && field_ != nullptr) {
    delete field_;
  }
  field_ = nullptr;
  if (GetArena() == nullptr && turnnumber_ != nullptr) {
    delete turnnumber_;
  }
  turnnumber_ = nullptr;
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GameState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.List_Player Players = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_players(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Card Cards = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_cards(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_CardData CardData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_carddata(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Tile Tiles = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_tiles(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Field = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_field(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer TurnNumber = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_turnnumber(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.GameState.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GameState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.GameState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.List_Player Players = 1;
  if (this->has_players()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::players(this), target, stream);
  }

  // .IvionOnline.List_Card Cards = 2;
  if (this->has_cards()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::cards(this), target, stream);
  }

  // .IvionOnline.List_CardData CardData = 3;
  if (this->has_carddata()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::carddata(this), target, stream);
  }

  // .IvionOnline.List_Tile Tiles = 4;
  if (this->has_tiles()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::tiles(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Field = 5;
  if (this->has_field()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::field(this), target, stream);
  }

  // .IvionOnline.Integer TurnNumber = 6;
  if (this->has_turnnumber()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::turnnumber(this), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 7;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::abspath(this), target, stream);
  }

  // string Name = 8;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.GameState.Name");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.GameState)
  return target;
}

size_t GameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.GameState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 8;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.List_Player Players = 1;
  if (this->has_players()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *players_);
  }

  // .IvionOnline.List_Card Cards = 2;
  if (this->has_cards()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *cards_);
  }

  // .IvionOnline.List_CardData CardData = 3;
  if (this->has_carddata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *carddata_);
  }

  // .IvionOnline.List_Tile Tiles = 4;
  if (this->has_tiles()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tiles_);
  }

  // .IvionOnline.List_ObjectPath Field = 5;
  if (this->has_field()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *field_);
  }

  // .IvionOnline.Integer TurnNumber = 6;
  if (this->has_turnnumber()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *turnnumber_);
  }

  // .IvionOnline.ObjectPath AbsPath = 7;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.GameState)
  GOOGLE_DCHECK_NE(&from, this);
  const GameState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GameState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.GameState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.GameState)
    MergeFrom(*source);
  }
}

void GameState::MergeFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.GameState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_players()) {
    _internal_mutable_players()->::IvionOnline::List_Player::MergeFrom(from._internal_players());
  }
  if (from.has_cards()) {
    _internal_mutable_cards()->::IvionOnline::List_Card::MergeFrom(from._internal_cards());
  }
  if (from.has_carddata()) {
    _internal_mutable_carddata()->::IvionOnline::List_CardData::MergeFrom(from._internal_carddata());
  }
  if (from.has_tiles()) {
    _internal_mutable_tiles()->::IvionOnline::List_Tile::MergeFrom(from._internal_tiles());
  }
  if (from.has_field()) {
    _internal_mutable_field()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_field());
  }
  if (from.has_turnnumber()) {
    _internal_mutable_turnnumber()->::IvionOnline::Integer::MergeFrom(from._internal_turnnumber());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void GameState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameState::CopyFrom(const GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameState::IsInitialized() const {
  return true;
}

void GameState::InternalSwap(GameState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameState, abspath_)
      + sizeof(GameState::abspath_)
      - PROTOBUF_FIELD_OFFSET(GameState, players_)>(
          reinterpret_cast<char*>(&players_),
          reinterpret_cast<char*>(&other->players_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GameState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_GameState::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_GameState* msg);
};

const ::IvionOnline::ObjectPath&
List_GameState::_Internal::abspath(const List_GameState* msg) {
  return *msg->abspath_;
}
List_GameState::List_GameState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_GameState)
}
List_GameState::List_GameState(const List_GameState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_GameState)
}

void List_GameState::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_GameState_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_GameState::~List_GameState() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_GameState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_GameState::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_GameState::ArenaDtor(void* object) {
  List_GameState* _this = reinterpret_cast< List_GameState* >(object);
  (void)_this;
}
void List_GameState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_GameState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_GameState& List_GameState::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_GameState_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_GameState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_GameState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.GameState element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_GameState.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_GameState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_GameState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.GameState element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::abspath(this), target, stream);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_GameState.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_GameState)
  return target;
}

size_t List_GameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_GameState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.GameState element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 2;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_GameState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_GameState)
  GOOGLE_DCHECK_NE(&from, this);
  const List_GameState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_GameState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_GameState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_GameState)
    MergeFrom(*source);
  }
}

void List_GameState::MergeFrom(const List_GameState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_GameState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_GameState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_GameState::CopyFrom(const List_GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_GameState::IsInitialized() const {
  return true;
}

void List_GameState::InternalSwap(List_GameState* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_GameState::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Boolean_Set_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const Boolean_Set_Mutation* msg);
  static const ::IvionOnline::Boolean& newvalue(const Boolean_Set_Mutation* msg);
  static const ::IvionOnline::Boolean& oldvalue(const Boolean_Set_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
Boolean_Set_Mutation::_Internal::path(const Boolean_Set_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Boolean&
Boolean_Set_Mutation::_Internal::newvalue(const Boolean_Set_Mutation* msg) {
  return *msg->newvalue_;
}
const ::IvionOnline::Boolean&
Boolean_Set_Mutation::_Internal::oldvalue(const Boolean_Set_Mutation* msg) {
  return *msg->oldvalue_;
}
Boolean_Set_Mutation::Boolean_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Boolean_Set_Mutation)
}
Boolean_Set_Mutation::Boolean_Set_Mutation(const Boolean_Set_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Boolean(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Boolean(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Boolean_Set_Mutation)
}

void Boolean_Set_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Boolean_Set_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oldvalue_) -
      reinterpret_cast<char*>(&path_)) + sizeof(oldvalue_));
}

Boolean_Set_Mutation::~Boolean_Set_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.Boolean_Set_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Boolean_Set_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void Boolean_Set_Mutation::ArenaDtor(void* object) {
  Boolean_Set_Mutation* _this = reinterpret_cast< Boolean_Set_Mutation* >(object);
  (void)_this;
}
void Boolean_Set_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Boolean_Set_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Boolean_Set_Mutation& Boolean_Set_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Boolean_Set_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void Boolean_Set_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Boolean_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Boolean_Set_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean OldValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Boolean_Set_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Boolean_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Boolean NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // .IvionOnline.Boolean OldValue = 3;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oldvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Boolean_Set_Mutation)
  return target;
}

size_t Boolean_Set_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Boolean_Set_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Boolean NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // .IvionOnline.Boolean OldValue = 3;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Boolean_Set_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Boolean_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Boolean_Set_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Boolean_Set_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Boolean_Set_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Boolean_Set_Mutation)
    MergeFrom(*source);
  }
}

void Boolean_Set_Mutation::MergeFrom(const Boolean_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Boolean_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Boolean::MergeFrom(from._internal_newvalue());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Boolean::MergeFrom(from._internal_oldvalue());
  }
}

void Boolean_Set_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Boolean_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Boolean_Set_Mutation::CopyFrom(const Boolean_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Boolean_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Boolean_Set_Mutation::IsInitialized() const {
  return true;
}

void Boolean_Set_Mutation::InternalSwap(Boolean_Set_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Boolean_Set_Mutation, oldvalue_)
      + sizeof(Boolean_Set_Mutation::oldvalue_)
      - PROTOBUF_FIELD_OFFSET(Boolean_Set_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Boolean_Set_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Boolean_Insert_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Boolean_Insert_Mutation* msg);
  static const ::IvionOnline::Boolean& newvalue(const List_Boolean_Insert_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Boolean_Insert_Mutation::_Internal::path(const List_Boolean_Insert_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Boolean&
List_Boolean_Insert_Mutation::_Internal::newvalue(const List_Boolean_Insert_Mutation* msg) {
  return *msg->newvalue_;
}
List_Boolean_Insert_Mutation::List_Boolean_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Boolean_Insert_Mutation)
}
List_Boolean_Insert_Mutation::List_Boolean_Insert_Mutation(const List_Boolean_Insert_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Boolean(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Boolean_Insert_Mutation)
}

void List_Boolean_Insert_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Boolean_Insert_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Boolean_Insert_Mutation::~List_Boolean_Insert_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Boolean_Insert_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Boolean_Insert_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
}

void List_Boolean_Insert_Mutation::ArenaDtor(void* object) {
  List_Boolean_Insert_Mutation* _this = reinterpret_cast< List_Boolean_Insert_Mutation* >(object);
  (void)_this;
}
void List_Boolean_Insert_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Boolean_Insert_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Boolean_Insert_Mutation& List_Boolean_Insert_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Boolean_Insert_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Boolean_Insert_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Boolean_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Boolean_Insert_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Boolean_Insert_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Boolean_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Boolean NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Boolean_Insert_Mutation)
  return target;
}

size_t List_Boolean_Insert_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Boolean_Insert_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Boolean NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Boolean_Insert_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Boolean_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Boolean_Insert_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Boolean_Insert_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Boolean_Insert_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Boolean_Insert_Mutation)
    MergeFrom(*source);
  }
}

void List_Boolean_Insert_Mutation::MergeFrom(const List_Boolean_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Boolean_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Boolean::MergeFrom(from._internal_newvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Boolean_Insert_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Boolean_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Boolean_Insert_Mutation::CopyFrom(const List_Boolean_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Boolean_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Boolean_Insert_Mutation::IsInitialized() const {
  return true;
}

void List_Boolean_Insert_Mutation::InternalSwap(List_Boolean_Insert_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Boolean_Insert_Mutation, index_)
      + sizeof(List_Boolean_Insert_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Boolean_Insert_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Boolean_Insert_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Boolean_Remove_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Boolean_Remove_Mutation* msg);
  static const ::IvionOnline::Boolean& oldvalue(const List_Boolean_Remove_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Boolean_Remove_Mutation::_Internal::path(const List_Boolean_Remove_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Boolean&
List_Boolean_Remove_Mutation::_Internal::oldvalue(const List_Boolean_Remove_Mutation* msg) {
  return *msg->oldvalue_;
}
List_Boolean_Remove_Mutation::List_Boolean_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Boolean_Remove_Mutation)
}
List_Boolean_Remove_Mutation::List_Boolean_Remove_Mutation(const List_Boolean_Remove_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Boolean(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Boolean_Remove_Mutation)
}

void List_Boolean_Remove_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Boolean_Remove_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Boolean_Remove_Mutation::~List_Boolean_Remove_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Boolean_Remove_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Boolean_Remove_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void List_Boolean_Remove_Mutation::ArenaDtor(void* object) {
  List_Boolean_Remove_Mutation* _this = reinterpret_cast< List_Boolean_Remove_Mutation* >(object);
  (void)_this;
}
void List_Boolean_Remove_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Boolean_Remove_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Boolean_Remove_Mutation& List_Boolean_Remove_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Boolean_Remove_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Boolean_Remove_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Boolean_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Boolean_Remove_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean OldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Boolean_Remove_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Boolean_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Boolean OldValue = 2;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oldvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Boolean_Remove_Mutation)
  return target;
}

size_t List_Boolean_Remove_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Boolean_Remove_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Boolean OldValue = 2;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Boolean_Remove_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Boolean_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Boolean_Remove_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Boolean_Remove_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Boolean_Remove_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Boolean_Remove_Mutation)
    MergeFrom(*source);
  }
}

void List_Boolean_Remove_Mutation::MergeFrom(const List_Boolean_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Boolean_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Boolean::MergeFrom(from._internal_oldvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Boolean_Remove_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Boolean_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Boolean_Remove_Mutation::CopyFrom(const List_Boolean_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Boolean_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Boolean_Remove_Mutation::IsInitialized() const {
  return true;
}

void List_Boolean_Remove_Mutation::InternalSwap(List_Boolean_Remove_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Boolean_Remove_Mutation, index_)
      + sizeof(List_Boolean_Remove_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Boolean_Remove_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Boolean_Remove_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Integer_Set_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const Integer_Set_Mutation* msg);
  static const ::IvionOnline::Integer& newvalue(const Integer_Set_Mutation* msg);
  static const ::IvionOnline::Integer& oldvalue(const Integer_Set_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
Integer_Set_Mutation::_Internal::path(const Integer_Set_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Integer&
Integer_Set_Mutation::_Internal::newvalue(const Integer_Set_Mutation* msg) {
  return *msg->newvalue_;
}
const ::IvionOnline::Integer&
Integer_Set_Mutation::_Internal::oldvalue(const Integer_Set_Mutation* msg) {
  return *msg->oldvalue_;
}
Integer_Set_Mutation::Integer_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Integer_Set_Mutation)
}
Integer_Set_Mutation::Integer_Set_Mutation(const Integer_Set_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Integer(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Integer(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Integer_Set_Mutation)
}

void Integer_Set_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Integer_Set_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oldvalue_) -
      reinterpret_cast<char*>(&path_)) + sizeof(oldvalue_));
}

Integer_Set_Mutation::~Integer_Set_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.Integer_Set_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Integer_Set_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void Integer_Set_Mutation::ArenaDtor(void* object) {
  Integer_Set_Mutation* _this = reinterpret_cast< Integer_Set_Mutation* >(object);
  (void)_this;
}
void Integer_Set_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Integer_Set_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Integer_Set_Mutation& Integer_Set_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Integer_Set_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void Integer_Set_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Integer_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Integer_Set_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer OldValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Integer_Set_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Integer_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Integer NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // .IvionOnline.Integer OldValue = 3;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oldvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Integer_Set_Mutation)
  return target;
}

size_t Integer_Set_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Integer_Set_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Integer NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // .IvionOnline.Integer OldValue = 3;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Integer_Set_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Integer_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Integer_Set_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Integer_Set_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Integer_Set_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Integer_Set_Mutation)
    MergeFrom(*source);
  }
}

void Integer_Set_Mutation::MergeFrom(const Integer_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Integer_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Integer::MergeFrom(from._internal_newvalue());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Integer::MergeFrom(from._internal_oldvalue());
  }
}

void Integer_Set_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Integer_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Integer_Set_Mutation::CopyFrom(const Integer_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Integer_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Integer_Set_Mutation::IsInitialized() const {
  return true;
}

void Integer_Set_Mutation::InternalSwap(Integer_Set_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Integer_Set_Mutation, oldvalue_)
      + sizeof(Integer_Set_Mutation::oldvalue_)
      - PROTOBUF_FIELD_OFFSET(Integer_Set_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Integer_Set_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Integer_Insert_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Integer_Insert_Mutation* msg);
  static const ::IvionOnline::Integer& newvalue(const List_Integer_Insert_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Integer_Insert_Mutation::_Internal::path(const List_Integer_Insert_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Integer&
List_Integer_Insert_Mutation::_Internal::newvalue(const List_Integer_Insert_Mutation* msg) {
  return *msg->newvalue_;
}
List_Integer_Insert_Mutation::List_Integer_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Integer_Insert_Mutation)
}
List_Integer_Insert_Mutation::List_Integer_Insert_Mutation(const List_Integer_Insert_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Integer(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Integer_Insert_Mutation)
}

void List_Integer_Insert_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Integer_Insert_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Integer_Insert_Mutation::~List_Integer_Insert_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Integer_Insert_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Integer_Insert_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
}

void List_Integer_Insert_Mutation::ArenaDtor(void* object) {
  List_Integer_Insert_Mutation* _this = reinterpret_cast< List_Integer_Insert_Mutation* >(object);
  (void)_this;
}
void List_Integer_Insert_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Integer_Insert_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Integer_Insert_Mutation& List_Integer_Insert_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Integer_Insert_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Integer_Insert_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Integer_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Integer_Insert_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Integer_Insert_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Integer_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Integer NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Integer_Insert_Mutation)
  return target;
}

size_t List_Integer_Insert_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Integer_Insert_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Integer NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Integer_Insert_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Integer_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Integer_Insert_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Integer_Insert_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Integer_Insert_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Integer_Insert_Mutation)
    MergeFrom(*source);
  }
}

void List_Integer_Insert_Mutation::MergeFrom(const List_Integer_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Integer_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Integer::MergeFrom(from._internal_newvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Integer_Insert_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Integer_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Integer_Insert_Mutation::CopyFrom(const List_Integer_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Integer_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Integer_Insert_Mutation::IsInitialized() const {
  return true;
}

void List_Integer_Insert_Mutation::InternalSwap(List_Integer_Insert_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Integer_Insert_Mutation, index_)
      + sizeof(List_Integer_Insert_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Integer_Insert_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Integer_Insert_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Integer_Remove_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Integer_Remove_Mutation* msg);
  static const ::IvionOnline::Integer& oldvalue(const List_Integer_Remove_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Integer_Remove_Mutation::_Internal::path(const List_Integer_Remove_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Integer&
List_Integer_Remove_Mutation::_Internal::oldvalue(const List_Integer_Remove_Mutation* msg) {
  return *msg->oldvalue_;
}
List_Integer_Remove_Mutation::List_Integer_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Integer_Remove_Mutation)
}
List_Integer_Remove_Mutation::List_Integer_Remove_Mutation(const List_Integer_Remove_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Integer(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Integer_Remove_Mutation)
}

void List_Integer_Remove_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Integer_Remove_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Integer_Remove_Mutation::~List_Integer_Remove_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Integer_Remove_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Integer_Remove_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void List_Integer_Remove_Mutation::ArenaDtor(void* object) {
  List_Integer_Remove_Mutation* _this = reinterpret_cast< List_Integer_Remove_Mutation* >(object);
  (void)_this;
}
void List_Integer_Remove_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Integer_Remove_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Integer_Remove_Mutation& List_Integer_Remove_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Integer_Remove_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Integer_Remove_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Integer_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Integer_Remove_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer OldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Integer_Remove_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Integer_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Integer OldValue = 2;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oldvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Integer_Remove_Mutation)
  return target;
}

size_t List_Integer_Remove_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Integer_Remove_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Integer OldValue = 2;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Integer_Remove_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Integer_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Integer_Remove_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Integer_Remove_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Integer_Remove_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Integer_Remove_Mutation)
    MergeFrom(*source);
  }
}

void List_Integer_Remove_Mutation::MergeFrom(const List_Integer_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Integer_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Integer::MergeFrom(from._internal_oldvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Integer_Remove_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Integer_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Integer_Remove_Mutation::CopyFrom(const List_Integer_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Integer_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Integer_Remove_Mutation::IsInitialized() const {
  return true;
}

void List_Integer_Remove_Mutation::InternalSwap(List_Integer_Remove_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Integer_Remove_Mutation, index_)
      + sizeof(List_Integer_Remove_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Integer_Remove_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Integer_Remove_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vec2i_Set_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const Vec2i_Set_Mutation* msg);
  static const ::IvionOnline::Vec2i& newvalue(const Vec2i_Set_Mutation* msg);
  static const ::IvionOnline::Vec2i& oldvalue(const Vec2i_Set_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
Vec2i_Set_Mutation::_Internal::path(const Vec2i_Set_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Vec2i&
Vec2i_Set_Mutation::_Internal::newvalue(const Vec2i_Set_Mutation* msg) {
  return *msg->newvalue_;
}
const ::IvionOnline::Vec2i&
Vec2i_Set_Mutation::_Internal::oldvalue(const Vec2i_Set_Mutation* msg) {
  return *msg->oldvalue_;
}
Vec2i_Set_Mutation::Vec2i_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Vec2i_Set_Mutation)
}
Vec2i_Set_Mutation::Vec2i_Set_Mutation(const Vec2i_Set_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Vec2i(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Vec2i(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Vec2i_Set_Mutation)
}

void Vec2i_Set_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Vec2i_Set_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oldvalue_) -
      reinterpret_cast<char*>(&path_)) + sizeof(oldvalue_));
}

Vec2i_Set_Mutation::~Vec2i_Set_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.Vec2i_Set_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec2i_Set_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void Vec2i_Set_Mutation::ArenaDtor(void* object) {
  Vec2i_Set_Mutation* _this = reinterpret_cast< Vec2i_Set_Mutation* >(object);
  (void)_this;
}
void Vec2i_Set_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec2i_Set_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec2i_Set_Mutation& Vec2i_Set_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec2i_Set_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void Vec2i_Set_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Vec2i_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec2i_Set_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i OldValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec2i_Set_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Vec2i_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Vec2i NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // .IvionOnline.Vec2i OldValue = 3;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oldvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Vec2i_Set_Mutation)
  return target;
}

size_t Vec2i_Set_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Vec2i_Set_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Vec2i NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // .IvionOnline.Vec2i OldValue = 3;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec2i_Set_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Vec2i_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec2i_Set_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec2i_Set_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Vec2i_Set_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Vec2i_Set_Mutation)
    MergeFrom(*source);
  }
}

void Vec2i_Set_Mutation::MergeFrom(const Vec2i_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Vec2i_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Vec2i::MergeFrom(from._internal_newvalue());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Vec2i::MergeFrom(from._internal_oldvalue());
  }
}

void Vec2i_Set_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Vec2i_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2i_Set_Mutation::CopyFrom(const Vec2i_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Vec2i_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2i_Set_Mutation::IsInitialized() const {
  return true;
}

void Vec2i_Set_Mutation::InternalSwap(Vec2i_Set_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vec2i_Set_Mutation, oldvalue_)
      + sizeof(Vec2i_Set_Mutation::oldvalue_)
      - PROTOBUF_FIELD_OFFSET(Vec2i_Set_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec2i_Set_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Vec2i_Insert_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Vec2i_Insert_Mutation* msg);
  static const ::IvionOnline::Vec2i& newvalue(const List_Vec2i_Insert_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Vec2i_Insert_Mutation::_Internal::path(const List_Vec2i_Insert_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Vec2i&
List_Vec2i_Insert_Mutation::_Internal::newvalue(const List_Vec2i_Insert_Mutation* msg) {
  return *msg->newvalue_;
}
List_Vec2i_Insert_Mutation::List_Vec2i_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Vec2i_Insert_Mutation)
}
List_Vec2i_Insert_Mutation::List_Vec2i_Insert_Mutation(const List_Vec2i_Insert_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Vec2i(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Vec2i_Insert_Mutation)
}

void List_Vec2i_Insert_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Vec2i_Insert_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Vec2i_Insert_Mutation::~List_Vec2i_Insert_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Vec2i_Insert_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Vec2i_Insert_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
}

void List_Vec2i_Insert_Mutation::ArenaDtor(void* object) {
  List_Vec2i_Insert_Mutation* _this = reinterpret_cast< List_Vec2i_Insert_Mutation* >(object);
  (void)_this;
}
void List_Vec2i_Insert_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Vec2i_Insert_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Vec2i_Insert_Mutation& List_Vec2i_Insert_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Vec2i_Insert_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Vec2i_Insert_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Vec2i_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Vec2i_Insert_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Vec2i_Insert_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Vec2i_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Vec2i NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Vec2i_Insert_Mutation)
  return target;
}

size_t List_Vec2i_Insert_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Vec2i_Insert_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Vec2i NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Vec2i_Insert_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Vec2i_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Vec2i_Insert_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Vec2i_Insert_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Vec2i_Insert_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Vec2i_Insert_Mutation)
    MergeFrom(*source);
  }
}

void List_Vec2i_Insert_Mutation::MergeFrom(const List_Vec2i_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Vec2i_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Vec2i::MergeFrom(from._internal_newvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Vec2i_Insert_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Vec2i_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Vec2i_Insert_Mutation::CopyFrom(const List_Vec2i_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Vec2i_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Vec2i_Insert_Mutation::IsInitialized() const {
  return true;
}

void List_Vec2i_Insert_Mutation::InternalSwap(List_Vec2i_Insert_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Vec2i_Insert_Mutation, index_)
      + sizeof(List_Vec2i_Insert_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Vec2i_Insert_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Vec2i_Insert_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Vec2i_Remove_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Vec2i_Remove_Mutation* msg);
  static const ::IvionOnline::Vec2i& oldvalue(const List_Vec2i_Remove_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Vec2i_Remove_Mutation::_Internal::path(const List_Vec2i_Remove_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Vec2i&
List_Vec2i_Remove_Mutation::_Internal::oldvalue(const List_Vec2i_Remove_Mutation* msg) {
  return *msg->oldvalue_;
}
List_Vec2i_Remove_Mutation::List_Vec2i_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Vec2i_Remove_Mutation)
}
List_Vec2i_Remove_Mutation::List_Vec2i_Remove_Mutation(const List_Vec2i_Remove_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Vec2i(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Vec2i_Remove_Mutation)
}

void List_Vec2i_Remove_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Vec2i_Remove_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Vec2i_Remove_Mutation::~List_Vec2i_Remove_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Vec2i_Remove_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Vec2i_Remove_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void List_Vec2i_Remove_Mutation::ArenaDtor(void* object) {
  List_Vec2i_Remove_Mutation* _this = reinterpret_cast< List_Vec2i_Remove_Mutation* >(object);
  (void)_this;
}
void List_Vec2i_Remove_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Vec2i_Remove_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Vec2i_Remove_Mutation& List_Vec2i_Remove_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Vec2i_Remove_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Vec2i_Remove_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Vec2i_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Vec2i_Remove_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i OldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Vec2i_Remove_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Vec2i_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Vec2i OldValue = 2;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oldvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Vec2i_Remove_Mutation)
  return target;
}

size_t List_Vec2i_Remove_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Vec2i_Remove_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Vec2i OldValue = 2;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Vec2i_Remove_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Vec2i_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Vec2i_Remove_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Vec2i_Remove_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Vec2i_Remove_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Vec2i_Remove_Mutation)
    MergeFrom(*source);
  }
}

void List_Vec2i_Remove_Mutation::MergeFrom(const List_Vec2i_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Vec2i_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Vec2i::MergeFrom(from._internal_oldvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Vec2i_Remove_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Vec2i_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Vec2i_Remove_Mutation::CopyFrom(const List_Vec2i_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Vec2i_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Vec2i_Remove_Mutation::IsInitialized() const {
  return true;
}

void List_Vec2i_Remove_Mutation::InternalSwap(List_Vec2i_Remove_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Vec2i_Remove_Mutation, index_)
      + sizeof(List_Vec2i_Remove_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Vec2i_Remove_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Vec2i_Remove_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Terrain_Set_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const Terrain_Set_Mutation* msg);
  static const ::IvionOnline::Terrain& newvalue(const Terrain_Set_Mutation* msg);
  static const ::IvionOnline::Terrain& oldvalue(const Terrain_Set_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
Terrain_Set_Mutation::_Internal::path(const Terrain_Set_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Terrain&
Terrain_Set_Mutation::_Internal::newvalue(const Terrain_Set_Mutation* msg) {
  return *msg->newvalue_;
}
const ::IvionOnline::Terrain&
Terrain_Set_Mutation::_Internal::oldvalue(const Terrain_Set_Mutation* msg) {
  return *msg->oldvalue_;
}
Terrain_Set_Mutation::Terrain_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Terrain_Set_Mutation)
}
Terrain_Set_Mutation::Terrain_Set_Mutation(const Terrain_Set_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Terrain(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Terrain(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Terrain_Set_Mutation)
}

void Terrain_Set_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Terrain_Set_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oldvalue_) -
      reinterpret_cast<char*>(&path_)) + sizeof(oldvalue_));
}

Terrain_Set_Mutation::~Terrain_Set_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.Terrain_Set_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Terrain_Set_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void Terrain_Set_Mutation::ArenaDtor(void* object) {
  Terrain_Set_Mutation* _this = reinterpret_cast< Terrain_Set_Mutation* >(object);
  (void)_this;
}
void Terrain_Set_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Terrain_Set_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Terrain_Set_Mutation& Terrain_Set_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Terrain_Set_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void Terrain_Set_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Terrain_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Terrain_Set_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain OldValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Terrain_Set_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Terrain_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Terrain NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // .IvionOnline.Terrain OldValue = 3;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oldvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Terrain_Set_Mutation)
  return target;
}

size_t Terrain_Set_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Terrain_Set_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Terrain NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // .IvionOnline.Terrain OldValue = 3;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Terrain_Set_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Terrain_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Terrain_Set_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Terrain_Set_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Terrain_Set_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Terrain_Set_Mutation)
    MergeFrom(*source);
  }
}

void Terrain_Set_Mutation::MergeFrom(const Terrain_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Terrain_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Terrain::MergeFrom(from._internal_newvalue());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Terrain::MergeFrom(from._internal_oldvalue());
  }
}

void Terrain_Set_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Terrain_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terrain_Set_Mutation::CopyFrom(const Terrain_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Terrain_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terrain_Set_Mutation::IsInitialized() const {
  return true;
}

void Terrain_Set_Mutation::InternalSwap(Terrain_Set_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Terrain_Set_Mutation, oldvalue_)
      + sizeof(Terrain_Set_Mutation::oldvalue_)
      - PROTOBUF_FIELD_OFFSET(Terrain_Set_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Terrain_Set_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Terrain_Insert_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Terrain_Insert_Mutation* msg);
  static const ::IvionOnline::Terrain& newvalue(const List_Terrain_Insert_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Terrain_Insert_Mutation::_Internal::path(const List_Terrain_Insert_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Terrain&
List_Terrain_Insert_Mutation::_Internal::newvalue(const List_Terrain_Insert_Mutation* msg) {
  return *msg->newvalue_;
}
List_Terrain_Insert_Mutation::List_Terrain_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Terrain_Insert_Mutation)
}
List_Terrain_Insert_Mutation::List_Terrain_Insert_Mutation(const List_Terrain_Insert_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Terrain(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Terrain_Insert_Mutation)
}

void List_Terrain_Insert_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Terrain_Insert_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Terrain_Insert_Mutation::~List_Terrain_Insert_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Terrain_Insert_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Terrain_Insert_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
}

void List_Terrain_Insert_Mutation::ArenaDtor(void* object) {
  List_Terrain_Insert_Mutation* _this = reinterpret_cast< List_Terrain_Insert_Mutation* >(object);
  (void)_this;
}
void List_Terrain_Insert_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Terrain_Insert_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Terrain_Insert_Mutation& List_Terrain_Insert_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Terrain_Insert_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Terrain_Insert_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Terrain_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Terrain_Insert_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Terrain_Insert_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Terrain_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Terrain NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Terrain_Insert_Mutation)
  return target;
}

size_t List_Terrain_Insert_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Terrain_Insert_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Terrain NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Terrain_Insert_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Terrain_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Terrain_Insert_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Terrain_Insert_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Terrain_Insert_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Terrain_Insert_Mutation)
    MergeFrom(*source);
  }
}

void List_Terrain_Insert_Mutation::MergeFrom(const List_Terrain_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Terrain_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Terrain::MergeFrom(from._internal_newvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Terrain_Insert_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Terrain_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Terrain_Insert_Mutation::CopyFrom(const List_Terrain_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Terrain_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Terrain_Insert_Mutation::IsInitialized() const {
  return true;
}

void List_Terrain_Insert_Mutation::InternalSwap(List_Terrain_Insert_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Terrain_Insert_Mutation, index_)
      + sizeof(List_Terrain_Insert_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Terrain_Insert_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Terrain_Insert_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Terrain_Remove_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Terrain_Remove_Mutation* msg);
  static const ::IvionOnline::Terrain& oldvalue(const List_Terrain_Remove_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Terrain_Remove_Mutation::_Internal::path(const List_Terrain_Remove_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Terrain&
List_Terrain_Remove_Mutation::_Internal::oldvalue(const List_Terrain_Remove_Mutation* msg) {
  return *msg->oldvalue_;
}
List_Terrain_Remove_Mutation::List_Terrain_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Terrain_Remove_Mutation)
}
List_Terrain_Remove_Mutation::List_Terrain_Remove_Mutation(const List_Terrain_Remove_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Terrain(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Terrain_Remove_Mutation)
}

void List_Terrain_Remove_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Terrain_Remove_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Terrain_Remove_Mutation::~List_Terrain_Remove_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Terrain_Remove_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Terrain_Remove_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void List_Terrain_Remove_Mutation::ArenaDtor(void* object) {
  List_Terrain_Remove_Mutation* _this = reinterpret_cast< List_Terrain_Remove_Mutation* >(object);
  (void)_this;
}
void List_Terrain_Remove_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Terrain_Remove_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Terrain_Remove_Mutation& List_Terrain_Remove_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Terrain_Remove_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Terrain_Remove_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Terrain_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Terrain_Remove_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain OldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Terrain_Remove_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Terrain_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Terrain OldValue = 2;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oldvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Terrain_Remove_Mutation)
  return target;
}

size_t List_Terrain_Remove_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Terrain_Remove_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Terrain OldValue = 2;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Terrain_Remove_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Terrain_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Terrain_Remove_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Terrain_Remove_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Terrain_Remove_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Terrain_Remove_Mutation)
    MergeFrom(*source);
  }
}

void List_Terrain_Remove_Mutation::MergeFrom(const List_Terrain_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Terrain_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Terrain::MergeFrom(from._internal_oldvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Terrain_Remove_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Terrain_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Terrain_Remove_Mutation::CopyFrom(const List_Terrain_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Terrain_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Terrain_Remove_Mutation::IsInitialized() const {
  return true;
}

void List_Terrain_Remove_Mutation::InternalSwap(List_Terrain_Remove_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Terrain_Remove_Mutation, index_)
      + sizeof(List_Terrain_Remove_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Terrain_Remove_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Terrain_Remove_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Color_Set_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const Color_Set_Mutation* msg);
  static const ::IvionOnline::Color& newvalue(const Color_Set_Mutation* msg);
  static const ::IvionOnline::Color& oldvalue(const Color_Set_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
Color_Set_Mutation::_Internal::path(const Color_Set_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Color&
Color_Set_Mutation::_Internal::newvalue(const Color_Set_Mutation* msg) {
  return *msg->newvalue_;
}
const ::IvionOnline::Color&
Color_Set_Mutation::_Internal::oldvalue(const Color_Set_Mutation* msg) {
  return *msg->oldvalue_;
}
Color_Set_Mutation::Color_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Color_Set_Mutation)
}
Color_Set_Mutation::Color_Set_Mutation(const Color_Set_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Color(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Color(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Color_Set_Mutation)
}

void Color_Set_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Color_Set_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oldvalue_) -
      reinterpret_cast<char*>(&path_)) + sizeof(oldvalue_));
}

Color_Set_Mutation::~Color_Set_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.Color_Set_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Color_Set_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void Color_Set_Mutation::ArenaDtor(void* object) {
  Color_Set_Mutation* _this = reinterpret_cast< Color_Set_Mutation* >(object);
  (void)_this;
}
void Color_Set_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Color_Set_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Color_Set_Mutation& Color_Set_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Color_Set_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void Color_Set_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Color_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Color_Set_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Color NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Color OldValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Color_Set_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Color_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Color NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // .IvionOnline.Color OldValue = 3;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oldvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Color_Set_Mutation)
  return target;
}

size_t Color_Set_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Color_Set_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Color NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // .IvionOnline.Color OldValue = 3;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Color_Set_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Color_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Color_Set_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Color_Set_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Color_Set_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Color_Set_Mutation)
    MergeFrom(*source);
  }
}

void Color_Set_Mutation::MergeFrom(const Color_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Color_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Color::MergeFrom(from._internal_newvalue());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Color::MergeFrom(from._internal_oldvalue());
  }
}

void Color_Set_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Color_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Color_Set_Mutation::CopyFrom(const Color_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Color_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Color_Set_Mutation::IsInitialized() const {
  return true;
}

void Color_Set_Mutation::InternalSwap(Color_Set_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Color_Set_Mutation, oldvalue_)
      + sizeof(Color_Set_Mutation::oldvalue_)
      - PROTOBUF_FIELD_OFFSET(Color_Set_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Color_Set_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Color_Insert_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Color_Insert_Mutation* msg);
  static const ::IvionOnline::Color& newvalue(const List_Color_Insert_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Color_Insert_Mutation::_Internal::path(const List_Color_Insert_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Color&
List_Color_Insert_Mutation::_Internal::newvalue(const List_Color_Insert_Mutation* msg) {
  return *msg->newvalue_;
}
List_Color_Insert_Mutation::List_Color_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Color_Insert_Mutation)
}
List_Color_Insert_Mutation::List_Color_Insert_Mutation(const List_Color_Insert_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::Color(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Color_Insert_Mutation)
}

void List_Color_Insert_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Color_Insert_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Color_Insert_Mutation::~List_Color_Insert_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Color_Insert_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Color_Insert_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
}

void List_Color_Insert_Mutation::ArenaDtor(void* object) {
  List_Color_Insert_Mutation* _this = reinterpret_cast< List_Color_Insert_Mutation* >(object);
  (void)_this;
}
void List_Color_Insert_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Color_Insert_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Color_Insert_Mutation& List_Color_Insert_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Color_Insert_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Color_Insert_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Color_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Color_Insert_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Color NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Color_Insert_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Color_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Color NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Color_Insert_Mutation)
  return target;
}

size_t List_Color_Insert_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Color_Insert_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Color NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Color_Insert_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Color_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Color_Insert_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Color_Insert_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Color_Insert_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Color_Insert_Mutation)
    MergeFrom(*source);
  }
}

void List_Color_Insert_Mutation::MergeFrom(const List_Color_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Color_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::Color::MergeFrom(from._internal_newvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Color_Insert_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Color_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Color_Insert_Mutation::CopyFrom(const List_Color_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Color_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Color_Insert_Mutation::IsInitialized() const {
  return true;
}

void List_Color_Insert_Mutation::InternalSwap(List_Color_Insert_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Color_Insert_Mutation, index_)
      + sizeof(List_Color_Insert_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Color_Insert_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Color_Insert_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Color_Remove_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_Color_Remove_Mutation* msg);
  static const ::IvionOnline::Color& oldvalue(const List_Color_Remove_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_Color_Remove_Mutation::_Internal::path(const List_Color_Remove_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::Color&
List_Color_Remove_Mutation::_Internal::oldvalue(const List_Color_Remove_Mutation* msg) {
  return *msg->oldvalue_;
}
List_Color_Remove_Mutation::List_Color_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Color_Remove_Mutation)
}
List_Color_Remove_Mutation::List_Color_Remove_Mutation(const List_Color_Remove_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::Color(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Color_Remove_Mutation)
}

void List_Color_Remove_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Color_Remove_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_Color_Remove_Mutation::~List_Color_Remove_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Color_Remove_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Color_Remove_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void List_Color_Remove_Mutation::ArenaDtor(void* object) {
  List_Color_Remove_Mutation* _this = reinterpret_cast< List_Color_Remove_Mutation* >(object);
  (void)_this;
}
void List_Color_Remove_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Color_Remove_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Color_Remove_Mutation& List_Color_Remove_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Color_Remove_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Color_Remove_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Color_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Color_Remove_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Color OldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Color_Remove_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Color_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.Color OldValue = 2;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oldvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Color_Remove_Mutation)
  return target;
}

size_t List_Color_Remove_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Color_Remove_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.Color OldValue = 2;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Color_Remove_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Color_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Color_Remove_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Color_Remove_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Color_Remove_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Color_Remove_Mutation)
    MergeFrom(*source);
  }
}

void List_Color_Remove_Mutation::MergeFrom(const List_Color_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Color_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::Color::MergeFrom(from._internal_oldvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_Color_Remove_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Color_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Color_Remove_Mutation::CopyFrom(const List_Color_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Color_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Color_Remove_Mutation::IsInitialized() const {
  return true;
}

void List_Color_Remove_Mutation::InternalSwap(List_Color_Remove_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_Color_Remove_Mutation, index_)
      + sizeof(List_Color_Remove_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_Color_Remove_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Color_Remove_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjectPath_Set_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const ObjectPath_Set_Mutation* msg);
  static const ::IvionOnline::ObjectPath& newvalue(const ObjectPath_Set_Mutation* msg);
  static const ::IvionOnline::ObjectPath& oldvalue(const ObjectPath_Set_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
ObjectPath_Set_Mutation::_Internal::path(const ObjectPath_Set_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::ObjectPath&
ObjectPath_Set_Mutation::_Internal::newvalue(const ObjectPath_Set_Mutation* msg) {
  return *msg->newvalue_;
}
const ::IvionOnline::ObjectPath&
ObjectPath_Set_Mutation::_Internal::oldvalue(const ObjectPath_Set_Mutation* msg) {
  return *msg->oldvalue_;
}
ObjectPath_Set_Mutation::ObjectPath_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.ObjectPath_Set_Mutation)
}
ObjectPath_Set_Mutation::ObjectPath_Set_Mutation(const ObjectPath_Set_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::ObjectPath(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::ObjectPath(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.ObjectPath_Set_Mutation)
}

void ObjectPath_Set_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectPath_Set_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&oldvalue_) -
      reinterpret_cast<char*>(&path_)) + sizeof(oldvalue_));
}

ObjectPath_Set_Mutation::~ObjectPath_Set_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.ObjectPath_Set_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectPath_Set_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void ObjectPath_Set_Mutation::ArenaDtor(void* object) {
  ObjectPath_Set_Mutation* _this = reinterpret_cast< ObjectPath_Set_Mutation* >(object);
  (void)_this;
}
void ObjectPath_Set_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectPath_Set_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectPath_Set_Mutation& ObjectPath_Set_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectPath_Set_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void ObjectPath_Set_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.ObjectPath_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectPath_Set_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath OldValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectPath_Set_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.ObjectPath_Set_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.ObjectPath NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // .IvionOnline.ObjectPath OldValue = 3;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::oldvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.ObjectPath_Set_Mutation)
  return target;
}

size_t ObjectPath_Set_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.ObjectPath_Set_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.ObjectPath NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // .IvionOnline.ObjectPath OldValue = 3;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectPath_Set_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.ObjectPath_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPath_Set_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectPath_Set_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.ObjectPath_Set_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.ObjectPath_Set_Mutation)
    MergeFrom(*source);
  }
}

void ObjectPath_Set_Mutation::MergeFrom(const ObjectPath_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.ObjectPath_Set_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::ObjectPath::MergeFrom(from._internal_newvalue());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::ObjectPath::MergeFrom(from._internal_oldvalue());
  }
}

void ObjectPath_Set_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.ObjectPath_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPath_Set_Mutation::CopyFrom(const ObjectPath_Set_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.ObjectPath_Set_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPath_Set_Mutation::IsInitialized() const {
  return true;
}

void ObjectPath_Set_Mutation::InternalSwap(ObjectPath_Set_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObjectPath_Set_Mutation, oldvalue_)
      + sizeof(ObjectPath_Set_Mutation::oldvalue_)
      - PROTOBUF_FIELD_OFFSET(ObjectPath_Set_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectPath_Set_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_ObjectPath_Insert_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_ObjectPath_Insert_Mutation* msg);
  static const ::IvionOnline::ObjectPath& newvalue(const List_ObjectPath_Insert_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_ObjectPath_Insert_Mutation::_Internal::path(const List_ObjectPath_Insert_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::ObjectPath&
List_ObjectPath_Insert_Mutation::_Internal::newvalue(const List_ObjectPath_Insert_Mutation* msg) {
  return *msg->newvalue_;
}
List_ObjectPath_Insert_Mutation::List_ObjectPath_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_ObjectPath_Insert_Mutation)
}
List_ObjectPath_Insert_Mutation::List_ObjectPath_Insert_Mutation(const List_ObjectPath_Insert_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_newvalue()) {
    newvalue_ = new ::IvionOnline::ObjectPath(*from.newvalue_);
  } else {
    newvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_ObjectPath_Insert_Mutation)
}

void List_ObjectPath_Insert_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_ObjectPath_Insert_Mutation::~List_ObjectPath_Insert_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_ObjectPath_Insert_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_ObjectPath_Insert_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete newvalue_;
}

void List_ObjectPath_Insert_Mutation::ArenaDtor(void* object) {
  List_ObjectPath_Insert_Mutation* _this = reinterpret_cast< List_ObjectPath_Insert_Mutation* >(object);
  (void)_this;
}
void List_ObjectPath_Insert_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_ObjectPath_Insert_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_ObjectPath_Insert_Mutation& List_ObjectPath_Insert_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_ObjectPath_Insert_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_ObjectPath_Insert_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_ObjectPath_Insert_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath NewValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_newvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_ObjectPath_Insert_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.ObjectPath NewValue = 2;
  if (this->has_newvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::newvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_ObjectPath_Insert_Mutation)
  return target;
}

size_t List_ObjectPath_Insert_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.ObjectPath NewValue = 2;
  if (this->has_newvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *newvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_ObjectPath_Insert_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_ObjectPath_Insert_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_ObjectPath_Insert_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_ObjectPath_Insert_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_ObjectPath_Insert_Mutation)
    MergeFrom(*source);
  }
}

void List_ObjectPath_Insert_Mutation::MergeFrom(const List_ObjectPath_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_newvalue()) {
    _internal_mutable_newvalue()->::IvionOnline::ObjectPath::MergeFrom(from._internal_newvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_ObjectPath_Insert_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_ObjectPath_Insert_Mutation::CopyFrom(const List_ObjectPath_Insert_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_ObjectPath_Insert_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_ObjectPath_Insert_Mutation::IsInitialized() const {
  return true;
}

void List_ObjectPath_Insert_Mutation::InternalSwap(List_ObjectPath_Insert_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_ObjectPath_Insert_Mutation, index_)
      + sizeof(List_ObjectPath_Insert_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_ObjectPath_Insert_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_ObjectPath_Insert_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_ObjectPath_Remove_Mutation::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& path(const List_ObjectPath_Remove_Mutation* msg);
  static const ::IvionOnline::ObjectPath& oldvalue(const List_ObjectPath_Remove_Mutation* msg);
};

const ::IvionOnline::ObjectPath&
List_ObjectPath_Remove_Mutation::_Internal::path(const List_ObjectPath_Remove_Mutation* msg) {
  return *msg->path_;
}
const ::IvionOnline::ObjectPath&
List_ObjectPath_Remove_Mutation::_Internal::oldvalue(const List_ObjectPath_Remove_Mutation* msg) {
  return *msg->oldvalue_;
}
List_ObjectPath_Remove_Mutation::List_ObjectPath_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_ObjectPath_Remove_Mutation)
}
List_ObjectPath_Remove_Mutation::List_ObjectPath_Remove_Mutation(const List_ObjectPath_Remove_Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_path()) {
    path_ = new ::IvionOnline::ObjectPath(*from.path_);
  } else {
    path_ = nullptr;
  }
  if (from._internal_has_oldvalue()) {
    oldvalue_ = new ::IvionOnline::ObjectPath(*from.oldvalue_);
  } else {
    oldvalue_ = nullptr;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_ObjectPath_Remove_Mutation)
}

void List_ObjectPath_Remove_Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&path_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&path_)) + sizeof(index_));
}

List_ObjectPath_Remove_Mutation::~List_ObjectPath_Remove_Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_ObjectPath_Remove_Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_ObjectPath_Remove_Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete path_;
  if (this != internal_default_instance()) delete oldvalue_;
}

void List_ObjectPath_Remove_Mutation::ArenaDtor(void* object) {
  List_ObjectPath_Remove_Mutation* _this = reinterpret_cast< List_ObjectPath_Remove_Mutation* >(object);
  (void)_this;
}
void List_ObjectPath_Remove_Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_ObjectPath_Remove_Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_ObjectPath_Remove_Mutation& List_ObjectPath_Remove_Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_ObjectPath_Remove_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_ObjectPath_Remove_Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
  index_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_ObjectPath_Remove_Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath OldValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_oldvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 Index = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_ObjectPath_Remove_Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path(this), target, stream);
  }

  // .IvionOnline.ObjectPath OldValue = 2;
  if (this->has_oldvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::oldvalue(this), target, stream);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_ObjectPath_Remove_Mutation)
  return target;
}

size_t List_ObjectPath_Remove_Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_);
  }

  // .IvionOnline.ObjectPath OldValue = 2;
  if (this->has_oldvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *oldvalue_);
  }

  // int32 Index = 3;
  if (this->index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_index());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_ObjectPath_Remove_Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const List_ObjectPath_Remove_Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_ObjectPath_Remove_Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_ObjectPath_Remove_Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_ObjectPath_Remove_Mutation)
    MergeFrom(*source);
  }
}

void List_ObjectPath_Remove_Mutation::MergeFrom(const List_ObjectPath_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    _internal_mutable_path()->::IvionOnline::ObjectPath::MergeFrom(from._internal_path());
  }
  if (from.has_oldvalue()) {
    _internal_mutable_oldvalue()->::IvionOnline::ObjectPath::MergeFrom(from._internal_oldvalue());
  }
  if (from.index() != 0) {
    _internal_set_index(from._internal_index());
  }
}

void List_ObjectPath_Remove_Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_ObjectPath_Remove_Mutation::CopyFrom(const List_ObjectPath_Remove_Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_ObjectPath_Remove_Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_ObjectPath_Remove_Mutation::IsInitialized() const {
  return true;
}

void List_ObjectPath_Remove_Mutation::InternalSwap(List_ObjectPath_Remove_Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(List_ObjectPath_Remove_Mutation, index_)
      + sizeof(List_ObjectPath_Remove_Mutation::index_)
      - PROTOBUF_FIELD_OFFSET(List_ObjectPath_Remove_Mutation, path_)>(
          reinterpret_cast<char*>(&path_),
          reinterpret_cast<char*>(&other->path_));
}

::PROTOBUF_NAMESPACE_ID::Metadata List_ObjectPath_Remove_Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Mutation::_Internal {
 public:
  static const ::IvionOnline::Boolean_Set_Mutation& boolean_set_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Boolean_Insert_Mutation& list_boolean_insert_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Boolean_Remove_Mutation& list_boolean_remove_mutation(const Mutation* msg);
  static const ::IvionOnline::Integer_Set_Mutation& integer_set_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Integer_Insert_Mutation& list_integer_insert_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Integer_Remove_Mutation& list_integer_remove_mutation(const Mutation* msg);
  static const ::IvionOnline::Vec2i_Set_Mutation& vec2i_set_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Vec2i_Insert_Mutation& list_vec2i_insert_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Vec2i_Remove_Mutation& list_vec2i_remove_mutation(const Mutation* msg);
  static const ::IvionOnline::Terrain_Set_Mutation& terrain_set_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Terrain_Insert_Mutation& list_terrain_insert_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Terrain_Remove_Mutation& list_terrain_remove_mutation(const Mutation* msg);
  static const ::IvionOnline::Color_Set_Mutation& color_set_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Color_Insert_Mutation& list_color_insert_mutation(const Mutation* msg);
  static const ::IvionOnline::List_Color_Remove_Mutation& list_color_remove_mutation(const Mutation* msg);
  static const ::IvionOnline::ObjectPath_Set_Mutation& objectpath_set_mutation(const Mutation* msg);
  static const ::IvionOnline::List_ObjectPath_Insert_Mutation& list_objectpath_insert_mutation(const Mutation* msg);
  static const ::IvionOnline::List_ObjectPath_Remove_Mutation& list_objectpath_remove_mutation(const Mutation* msg);
};

const ::IvionOnline::Boolean_Set_Mutation&
Mutation::_Internal::boolean_set_mutation(const Mutation* msg) {
  return *msg->mut_.boolean_set_mutation_;
}
const ::IvionOnline::List_Boolean_Insert_Mutation&
Mutation::_Internal::list_boolean_insert_mutation(const Mutation* msg) {
  return *msg->mut_.list_boolean_insert_mutation_;
}
const ::IvionOnline::List_Boolean_Remove_Mutation&
Mutation::_Internal::list_boolean_remove_mutation(const Mutation* msg) {
  return *msg->mut_.list_boolean_remove_mutation_;
}
const ::IvionOnline::Integer_Set_Mutation&
Mutation::_Internal::integer_set_mutation(const Mutation* msg) {
  return *msg->mut_.integer_set_mutation_;
}
const ::IvionOnline::List_Integer_Insert_Mutation&
Mutation::_Internal::list_integer_insert_mutation(const Mutation* msg) {
  return *msg->mut_.list_integer_insert_mutation_;
}
const ::IvionOnline::List_Integer_Remove_Mutation&
Mutation::_Internal::list_integer_remove_mutation(const Mutation* msg) {
  return *msg->mut_.list_integer_remove_mutation_;
}
const ::IvionOnline::Vec2i_Set_Mutation&
Mutation::_Internal::vec2i_set_mutation(const Mutation* msg) {
  return *msg->mut_.vec2i_set_mutation_;
}
const ::IvionOnline::List_Vec2i_Insert_Mutation&
Mutation::_Internal::list_vec2i_insert_mutation(const Mutation* msg) {
  return *msg->mut_.list_vec2i_insert_mutation_;
}
const ::IvionOnline::List_Vec2i_Remove_Mutation&
Mutation::_Internal::list_vec2i_remove_mutation(const Mutation* msg) {
  return *msg->mut_.list_vec2i_remove_mutation_;
}
const ::IvionOnline::Terrain_Set_Mutation&
Mutation::_Internal::terrain_set_mutation(const Mutation* msg) {
  return *msg->mut_.terrain_set_mutation_;
}
const ::IvionOnline::List_Terrain_Insert_Mutation&
Mutation::_Internal::list_terrain_insert_mutation(const Mutation* msg) {
  return *msg->mut_.list_terrain_insert_mutation_;
}
const ::IvionOnline::List_Terrain_Remove_Mutation&
Mutation::_Internal::list_terrain_remove_mutation(const Mutation* msg) {
  return *msg->mut_.list_terrain_remove_mutation_;
}
const ::IvionOnline::Color_Set_Mutation&
Mutation::_Internal::color_set_mutation(const Mutation* msg) {
  return *msg->mut_.color_set_mutation_;
}
const ::IvionOnline::List_Color_Insert_Mutation&
Mutation::_Internal::list_color_insert_mutation(const Mutation* msg) {
  return *msg->mut_.list_color_insert_mutation_;
}
const ::IvionOnline::List_Color_Remove_Mutation&
Mutation::_Internal::list_color_remove_mutation(const Mutation* msg) {
  return *msg->mut_.list_color_remove_mutation_;
}
const ::IvionOnline::ObjectPath_Set_Mutation&
Mutation::_Internal::objectpath_set_mutation(const Mutation* msg) {
  return *msg->mut_.objectpath_set_mutation_;
}
const ::IvionOnline::List_ObjectPath_Insert_Mutation&
Mutation::_Internal::list_objectpath_insert_mutation(const Mutation* msg) {
  return *msg->mut_.list_objectpath_insert_mutation_;
}
const ::IvionOnline::List_ObjectPath_Remove_Mutation&
Mutation::_Internal::list_objectpath_remove_mutation(const Mutation* msg) {
  return *msg->mut_.list_objectpath_remove_mutation_;
}
void Mutation::set_allocated_boolean_set_mutation(::IvionOnline::Boolean_Set_Mutation* boolean_set_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (boolean_set_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(boolean_set_mutation);
    if (message_arena != submessage_arena) {
      boolean_set_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boolean_set_mutation, submessage_arena);
    }
    set_has_boolean_set_mutation();
    mut_.boolean_set_mutation_ = boolean_set_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.Boolean_Set_Mutation)
}
void Mutation::set_allocated_list_boolean_insert_mutation(::IvionOnline::List_Boolean_Insert_Mutation* list_boolean_insert_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_boolean_insert_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_boolean_insert_mutation);
    if (message_arena != submessage_arena) {
      list_boolean_insert_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_boolean_insert_mutation, submessage_arena);
    }
    set_has_list_boolean_insert_mutation();
    mut_.list_boolean_insert_mutation_ = list_boolean_insert_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Boolean_Insert_Mutation)
}
void Mutation::set_allocated_list_boolean_remove_mutation(::IvionOnline::List_Boolean_Remove_Mutation* list_boolean_remove_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_boolean_remove_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_boolean_remove_mutation);
    if (message_arena != submessage_arena) {
      list_boolean_remove_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_boolean_remove_mutation, submessage_arena);
    }
    set_has_list_boolean_remove_mutation();
    mut_.list_boolean_remove_mutation_ = list_boolean_remove_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Boolean_Remove_Mutation)
}
void Mutation::set_allocated_integer_set_mutation(::IvionOnline::Integer_Set_Mutation* integer_set_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (integer_set_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(integer_set_mutation);
    if (message_arena != submessage_arena) {
      integer_set_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, integer_set_mutation, submessage_arena);
    }
    set_has_integer_set_mutation();
    mut_.integer_set_mutation_ = integer_set_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.Integer_Set_Mutation)
}
void Mutation::set_allocated_list_integer_insert_mutation(::IvionOnline::List_Integer_Insert_Mutation* list_integer_insert_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_integer_insert_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_integer_insert_mutation);
    if (message_arena != submessage_arena) {
      list_integer_insert_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_integer_insert_mutation, submessage_arena);
    }
    set_has_list_integer_insert_mutation();
    mut_.list_integer_insert_mutation_ = list_integer_insert_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Integer_Insert_Mutation)
}
void Mutation::set_allocated_list_integer_remove_mutation(::IvionOnline::List_Integer_Remove_Mutation* list_integer_remove_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_integer_remove_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_integer_remove_mutation);
    if (message_arena != submessage_arena) {
      list_integer_remove_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_integer_remove_mutation, submessage_arena);
    }
    set_has_list_integer_remove_mutation();
    mut_.list_integer_remove_mutation_ = list_integer_remove_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Integer_Remove_Mutation)
}
void Mutation::set_allocated_vec2i_set_mutation(::IvionOnline::Vec2i_Set_Mutation* vec2i_set_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (vec2i_set_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vec2i_set_mutation);
    if (message_arena != submessage_arena) {
      vec2i_set_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vec2i_set_mutation, submessage_arena);
    }
    set_has_vec2i_set_mutation();
    mut_.vec2i_set_mutation_ = vec2i_set_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.Vec2i_Set_Mutation)
}
void Mutation::set_allocated_list_vec2i_insert_mutation(::IvionOnline::List_Vec2i_Insert_Mutation* list_vec2i_insert_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_vec2i_insert_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_vec2i_insert_mutation);
    if (message_arena != submessage_arena) {
      list_vec2i_insert_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_vec2i_insert_mutation, submessage_arena);
    }
    set_has_list_vec2i_insert_mutation();
    mut_.list_vec2i_insert_mutation_ = list_vec2i_insert_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Vec2i_Insert_Mutation)
}
void Mutation::set_allocated_list_vec2i_remove_mutation(::IvionOnline::List_Vec2i_Remove_Mutation* list_vec2i_remove_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_vec2i_remove_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_vec2i_remove_mutation);
    if (message_arena != submessage_arena) {
      list_vec2i_remove_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_vec2i_remove_mutation, submessage_arena);
    }
    set_has_list_vec2i_remove_mutation();
    mut_.list_vec2i_remove_mutation_ = list_vec2i_remove_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Vec2i_Remove_Mutation)
}
void Mutation::set_allocated_terrain_set_mutation(::IvionOnline::Terrain_Set_Mutation* terrain_set_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (terrain_set_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(terrain_set_mutation);
    if (message_arena != submessage_arena) {
      terrain_set_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, terrain_set_mutation, submessage_arena);
    }
    set_has_terrain_set_mutation();
    mut_.terrain_set_mutation_ = terrain_set_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.Terrain_Set_Mutation)
}
void Mutation::set_allocated_list_terrain_insert_mutation(::IvionOnline::List_Terrain_Insert_Mutation* list_terrain_insert_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_terrain_insert_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_terrain_insert_mutation);
    if (message_arena != submessage_arena) {
      list_terrain_insert_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_terrain_insert_mutation, submessage_arena);
    }
    set_has_list_terrain_insert_mutation();
    mut_.list_terrain_insert_mutation_ = list_terrain_insert_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Terrain_Insert_Mutation)
}
void Mutation::set_allocated_list_terrain_remove_mutation(::IvionOnline::List_Terrain_Remove_Mutation* list_terrain_remove_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_terrain_remove_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_terrain_remove_mutation);
    if (message_arena != submessage_arena) {
      list_terrain_remove_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_terrain_remove_mutation, submessage_arena);
    }
    set_has_list_terrain_remove_mutation();
    mut_.list_terrain_remove_mutation_ = list_terrain_remove_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Terrain_Remove_Mutation)
}
void Mutation::set_allocated_color_set_mutation(::IvionOnline::Color_Set_Mutation* color_set_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (color_set_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(color_set_mutation);
    if (message_arena != submessage_arena) {
      color_set_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_set_mutation, submessage_arena);
    }
    set_has_color_set_mutation();
    mut_.color_set_mutation_ = color_set_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.Color_Set_Mutation)
}
void Mutation::set_allocated_list_color_insert_mutation(::IvionOnline::List_Color_Insert_Mutation* list_color_insert_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_color_insert_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_color_insert_mutation);
    if (message_arena != submessage_arena) {
      list_color_insert_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_color_insert_mutation, submessage_arena);
    }
    set_has_list_color_insert_mutation();
    mut_.list_color_insert_mutation_ = list_color_insert_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Color_Insert_Mutation)
}
void Mutation::set_allocated_list_color_remove_mutation(::IvionOnline::List_Color_Remove_Mutation* list_color_remove_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_color_remove_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_color_remove_mutation);
    if (message_arena != submessage_arena) {
      list_color_remove_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_color_remove_mutation, submessage_arena);
    }
    set_has_list_color_remove_mutation();
    mut_.list_color_remove_mutation_ = list_color_remove_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_Color_Remove_Mutation)
}
void Mutation::set_allocated_objectpath_set_mutation(::IvionOnline::ObjectPath_Set_Mutation* objectpath_set_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (objectpath_set_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(objectpath_set_mutation);
    if (message_arena != submessage_arena) {
      objectpath_set_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objectpath_set_mutation, submessage_arena);
    }
    set_has_objectpath_set_mutation();
    mut_.objectpath_set_mutation_ = objectpath_set_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.ObjectPath_Set_Mutation)
}
void Mutation::set_allocated_list_objectpath_insert_mutation(::IvionOnline::List_ObjectPath_Insert_Mutation* list_objectpath_insert_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_objectpath_insert_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_objectpath_insert_mutation);
    if (message_arena != submessage_arena) {
      list_objectpath_insert_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_objectpath_insert_mutation, submessage_arena);
    }
    set_has_list_objectpath_insert_mutation();
    mut_.list_objectpath_insert_mutation_ = list_objectpath_insert_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_ObjectPath_Insert_Mutation)
}
void Mutation::set_allocated_list_objectpath_remove_mutation(::IvionOnline::List_ObjectPath_Remove_Mutation* list_objectpath_remove_mutation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_mut();
  if (list_objectpath_remove_mutation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(list_objectpath_remove_mutation);
    if (message_arena != submessage_arena) {
      list_objectpath_remove_mutation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, list_objectpath_remove_mutation, submessage_arena);
    }
    set_has_list_objectpath_remove_mutation();
    mut_.list_objectpath_remove_mutation_ = list_objectpath_remove_mutation;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Mutation.List_ObjectPath_Remove_Mutation)
}
Mutation::Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Mutation)
}
Mutation::Mutation(const Mutation& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_mut();
  switch (from.mut_case()) {
    case kBooleanSetMutation: {
      _internal_mutable_boolean_set_mutation()->::IvionOnline::Boolean_Set_Mutation::MergeFrom(from._internal_boolean_set_mutation());
      break;
    }
    case kListBooleanInsertMutation: {
      _internal_mutable_list_boolean_insert_mutation()->::IvionOnline::List_Boolean_Insert_Mutation::MergeFrom(from._internal_list_boolean_insert_mutation());
      break;
    }
    case kListBooleanRemoveMutation: {
      _internal_mutable_list_boolean_remove_mutation()->::IvionOnline::List_Boolean_Remove_Mutation::MergeFrom(from._internal_list_boolean_remove_mutation());
      break;
    }
    case kIntegerSetMutation: {
      _internal_mutable_integer_set_mutation()->::IvionOnline::Integer_Set_Mutation::MergeFrom(from._internal_integer_set_mutation());
      break;
    }
    case kListIntegerInsertMutation: {
      _internal_mutable_list_integer_insert_mutation()->::IvionOnline::List_Integer_Insert_Mutation::MergeFrom(from._internal_list_integer_insert_mutation());
      break;
    }
    case kListIntegerRemoveMutation: {
      _internal_mutable_list_integer_remove_mutation()->::IvionOnline::List_Integer_Remove_Mutation::MergeFrom(from._internal_list_integer_remove_mutation());
      break;
    }
    case kVec2ISetMutation: {
      _internal_mutable_vec2i_set_mutation()->::IvionOnline::Vec2i_Set_Mutation::MergeFrom(from._internal_vec2i_set_mutation());
      break;
    }
    case kListVec2IInsertMutation: {
      _internal_mutable_list_vec2i_insert_mutation()->::IvionOnline::List_Vec2i_Insert_Mutation::MergeFrom(from._internal_list_vec2i_insert_mutation());
      break;
    }
    case kListVec2IRemoveMutation: {
      _internal_mutable_list_vec2i_remove_mutation()->::IvionOnline::List_Vec2i_Remove_Mutation::MergeFrom(from._internal_list_vec2i_remove_mutation());
      break;
    }
    case kTerrainSetMutation: {
      _internal_mutable_terrain_set_mutation()->::IvionOnline::Terrain_Set_Mutation::MergeFrom(from._internal_terrain_set_mutation());
      break;
    }
    case kListTerrainInsertMutation: {
      _internal_mutable_list_terrain_insert_mutation()->::IvionOnline::List_Terrain_Insert_Mutation::MergeFrom(from._internal_list_terrain_insert_mutation());
      break;
    }
    case kListTerrainRemoveMutation: {
      _internal_mutable_list_terrain_remove_mutation()->::IvionOnline::List_Terrain_Remove_Mutation::MergeFrom(from._internal_list_terrain_remove_mutation());
      break;
    }
    case kColorSetMutation: {
      _internal_mutable_color_set_mutation()->::IvionOnline::Color_Set_Mutation::MergeFrom(from._internal_color_set_mutation());
      break;
    }
    case kListColorInsertMutation: {
      _internal_mutable_list_color_insert_mutation()->::IvionOnline::List_Color_Insert_Mutation::MergeFrom(from._internal_list_color_insert_mutation());
      break;
    }
    case kListColorRemoveMutation: {
      _internal_mutable_list_color_remove_mutation()->::IvionOnline::List_Color_Remove_Mutation::MergeFrom(from._internal_list_color_remove_mutation());
      break;
    }
    case kObjectPathSetMutation: {
      _internal_mutable_objectpath_set_mutation()->::IvionOnline::ObjectPath_Set_Mutation::MergeFrom(from._internal_objectpath_set_mutation());
      break;
    }
    case kListObjectPathInsertMutation: {
      _internal_mutable_list_objectpath_insert_mutation()->::IvionOnline::List_ObjectPath_Insert_Mutation::MergeFrom(from._internal_list_objectpath_insert_mutation());
      break;
    }
    case kListObjectPathRemoveMutation: {
      _internal_mutable_list_objectpath_remove_mutation()->::IvionOnline::List_ObjectPath_Remove_Mutation::MergeFrom(from._internal_list_objectpath_remove_mutation());
      break;
    }
    case MUT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Mutation)
}

void Mutation::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Mutation_GameState_2eproto.base);
  clear_has_mut();
}

Mutation::~Mutation() {
  // @@protoc_insertion_point(destructor:IvionOnline.Mutation)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Mutation::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_mut()) {
    clear_mut();
  }
}

void Mutation::ArenaDtor(void* object) {
  Mutation* _this = reinterpret_cast< Mutation* >(object);
  (void)_this;
}
void Mutation::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Mutation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Mutation& Mutation::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Mutation_GameState_2eproto.base);
  return *internal_default_instance();
}


void Mutation::clear_mut() {
// @@protoc_insertion_point(one_of_clear_start:IvionOnline.Mutation)
  switch (mut_case()) {
    case kBooleanSetMutation: {
      if (GetArena() == nullptr) {
        delete mut_.boolean_set_mutation_;
      }
      break;
    }
    case kListBooleanInsertMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_boolean_insert_mutation_;
      }
      break;
    }
    case kListBooleanRemoveMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_boolean_remove_mutation_;
      }
      break;
    }
    case kIntegerSetMutation: {
      if (GetArena() == nullptr) {
        delete mut_.integer_set_mutation_;
      }
      break;
    }
    case kListIntegerInsertMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_integer_insert_mutation_;
      }
      break;
    }
    case kListIntegerRemoveMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_integer_remove_mutation_;
      }
      break;
    }
    case kVec2ISetMutation: {
      if (GetArena() == nullptr) {
        delete mut_.vec2i_set_mutation_;
      }
      break;
    }
    case kListVec2IInsertMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_vec2i_insert_mutation_;
      }
      break;
    }
    case kListVec2IRemoveMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_vec2i_remove_mutation_;
      }
      break;
    }
    case kTerrainSetMutation: {
      if (GetArena() == nullptr) {
        delete mut_.terrain_set_mutation_;
      }
      break;
    }
    case kListTerrainInsertMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_terrain_insert_mutation_;
      }
      break;
    }
    case kListTerrainRemoveMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_terrain_remove_mutation_;
      }
      break;
    }
    case kColorSetMutation: {
      if (GetArena() == nullptr) {
        delete mut_.color_set_mutation_;
      }
      break;
    }
    case kListColorInsertMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_color_insert_mutation_;
      }
      break;
    }
    case kListColorRemoveMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_color_remove_mutation_;
      }
      break;
    }
    case kObjectPathSetMutation: {
      if (GetArena() == nullptr) {
        delete mut_.objectpath_set_mutation_;
      }
      break;
    }
    case kListObjectPathInsertMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_objectpath_insert_mutation_;
      }
      break;
    }
    case kListObjectPathRemoveMutation: {
      if (GetArena() == nullptr) {
        delete mut_.list_objectpath_remove_mutation_;
      }
      break;
    }
    case MUT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MUT_NOT_SET;
}


void Mutation::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_mut();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Mutation::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Boolean_Set_Mutation Boolean_Set_Mutation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_boolean_set_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Boolean_Insert_Mutation List_Boolean_Insert_Mutation = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_boolean_insert_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Boolean_Remove_Mutation List_Boolean_Remove_Mutation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_boolean_remove_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer_Set_Mutation Integer_Set_Mutation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_integer_set_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Integer_Insert_Mutation List_Integer_Insert_Mutation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_integer_insert_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Integer_Remove_Mutation List_Integer_Remove_Mutation = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_integer_remove_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i_Set_Mutation Vec2i_Set_Mutation = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_vec2i_set_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Vec2i_Insert_Mutation List_Vec2i_Insert_Mutation = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_vec2i_insert_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Vec2i_Remove_Mutation List_Vec2i_Remove_Mutation = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_vec2i_remove_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain_Set_Mutation Terrain_Set_Mutation = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_terrain_set_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Terrain_Insert_Mutation List_Terrain_Insert_Mutation = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_terrain_insert_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Terrain_Remove_Mutation List_Terrain_Remove_Mutation = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_terrain_remove_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Color_Set_Mutation Color_Set_Mutation = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_color_set_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Color_Insert_Mutation List_Color_Insert_Mutation = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_color_insert_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_Color_Remove_Mutation List_Color_Remove_Mutation = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_color_remove_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath_Set_Mutation ObjectPath_Set_Mutation = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath_set_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath_Insert_Mutation List_ObjectPath_Insert_Mutation = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_objectpath_insert_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath_Remove_Mutation List_ObjectPath_Remove_Mutation = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_list_objectpath_remove_mutation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Mutation::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Mutation)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Boolean_Set_Mutation Boolean_Set_Mutation = 1;
  if (_internal_has_boolean_set_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::boolean_set_mutation(this), target, stream);
  }

  // .IvionOnline.List_Boolean_Insert_Mutation List_Boolean_Insert_Mutation = 2;
  if (_internal_has_list_boolean_insert_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::list_boolean_insert_mutation(this), target, stream);
  }

  // .IvionOnline.List_Boolean_Remove_Mutation List_Boolean_Remove_Mutation = 3;
  if (_internal_has_list_boolean_remove_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::list_boolean_remove_mutation(this), target, stream);
  }

  // .IvionOnline.Integer_Set_Mutation Integer_Set_Mutation = 4;
  if (_internal_has_integer_set_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::integer_set_mutation(this), target, stream);
  }

  // .IvionOnline.List_Integer_Insert_Mutation List_Integer_Insert_Mutation = 5;
  if (_internal_has_list_integer_insert_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::list_integer_insert_mutation(this), target, stream);
  }

  // .IvionOnline.List_Integer_Remove_Mutation List_Integer_Remove_Mutation = 6;
  if (_internal_has_list_integer_remove_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::list_integer_remove_mutation(this), target, stream);
  }

  // .IvionOnline.Vec2i_Set_Mutation Vec2i_Set_Mutation = 7;
  if (_internal_has_vec2i_set_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::vec2i_set_mutation(this), target, stream);
  }

  // .IvionOnline.List_Vec2i_Insert_Mutation List_Vec2i_Insert_Mutation = 8;
  if (_internal_has_list_vec2i_insert_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::list_vec2i_insert_mutation(this), target, stream);
  }

  // .IvionOnline.List_Vec2i_Remove_Mutation List_Vec2i_Remove_Mutation = 9;
  if (_internal_has_list_vec2i_remove_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::list_vec2i_remove_mutation(this), target, stream);
  }

  // .IvionOnline.Terrain_Set_Mutation Terrain_Set_Mutation = 10;
  if (_internal_has_terrain_set_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::terrain_set_mutation(this), target, stream);
  }

  // .IvionOnline.List_Terrain_Insert_Mutation List_Terrain_Insert_Mutation = 11;
  if (_internal_has_list_terrain_insert_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::list_terrain_insert_mutation(this), target, stream);
  }

  // .IvionOnline.List_Terrain_Remove_Mutation List_Terrain_Remove_Mutation = 12;
  if (_internal_has_list_terrain_remove_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::list_terrain_remove_mutation(this), target, stream);
  }

  // .IvionOnline.Color_Set_Mutation Color_Set_Mutation = 13;
  if (_internal_has_color_set_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::color_set_mutation(this), target, stream);
  }

  // .IvionOnline.List_Color_Insert_Mutation List_Color_Insert_Mutation = 14;
  if (_internal_has_list_color_insert_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::list_color_insert_mutation(this), target, stream);
  }

  // .IvionOnline.List_Color_Remove_Mutation List_Color_Remove_Mutation = 15;
  if (_internal_has_list_color_remove_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::list_color_remove_mutation(this), target, stream);
  }

  // .IvionOnline.ObjectPath_Set_Mutation ObjectPath_Set_Mutation = 16;
  if (_internal_has_objectpath_set_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::objectpath_set_mutation(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath_Insert_Mutation List_ObjectPath_Insert_Mutation = 17;
  if (_internal_has_list_objectpath_insert_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::list_objectpath_insert_mutation(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath_Remove_Mutation List_ObjectPath_Remove_Mutation = 18;
  if (_internal_has_list_objectpath_remove_mutation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::list_objectpath_remove_mutation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Mutation)
  return target;
}

size_t Mutation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Mutation)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (mut_case()) {
    // .IvionOnline.Boolean_Set_Mutation Boolean_Set_Mutation = 1;
    case kBooleanSetMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.boolean_set_mutation_);
      break;
    }
    // .IvionOnline.List_Boolean_Insert_Mutation List_Boolean_Insert_Mutation = 2;
    case kListBooleanInsertMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_boolean_insert_mutation_);
      break;
    }
    // .IvionOnline.List_Boolean_Remove_Mutation List_Boolean_Remove_Mutation = 3;
    case kListBooleanRemoveMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_boolean_remove_mutation_);
      break;
    }
    // .IvionOnline.Integer_Set_Mutation Integer_Set_Mutation = 4;
    case kIntegerSetMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.integer_set_mutation_);
      break;
    }
    // .IvionOnline.List_Integer_Insert_Mutation List_Integer_Insert_Mutation = 5;
    case kListIntegerInsertMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_integer_insert_mutation_);
      break;
    }
    // .IvionOnline.List_Integer_Remove_Mutation List_Integer_Remove_Mutation = 6;
    case kListIntegerRemoveMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_integer_remove_mutation_);
      break;
    }
    // .IvionOnline.Vec2i_Set_Mutation Vec2i_Set_Mutation = 7;
    case kVec2ISetMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.vec2i_set_mutation_);
      break;
    }
    // .IvionOnline.List_Vec2i_Insert_Mutation List_Vec2i_Insert_Mutation = 8;
    case kListVec2IInsertMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_vec2i_insert_mutation_);
      break;
    }
    // .IvionOnline.List_Vec2i_Remove_Mutation List_Vec2i_Remove_Mutation = 9;
    case kListVec2IRemoveMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_vec2i_remove_mutation_);
      break;
    }
    // .IvionOnline.Terrain_Set_Mutation Terrain_Set_Mutation = 10;
    case kTerrainSetMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.terrain_set_mutation_);
      break;
    }
    // .IvionOnline.List_Terrain_Insert_Mutation List_Terrain_Insert_Mutation = 11;
    case kListTerrainInsertMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_terrain_insert_mutation_);
      break;
    }
    // .IvionOnline.List_Terrain_Remove_Mutation List_Terrain_Remove_Mutation = 12;
    case kListTerrainRemoveMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_terrain_remove_mutation_);
      break;
    }
    // .IvionOnline.Color_Set_Mutation Color_Set_Mutation = 13;
    case kColorSetMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.color_set_mutation_);
      break;
    }
    // .IvionOnline.List_Color_Insert_Mutation List_Color_Insert_Mutation = 14;
    case kListColorInsertMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_color_insert_mutation_);
      break;
    }
    // .IvionOnline.List_Color_Remove_Mutation List_Color_Remove_Mutation = 15;
    case kListColorRemoveMutation: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_color_remove_mutation_);
      break;
    }
    // .IvionOnline.ObjectPath_Set_Mutation ObjectPath_Set_Mutation = 16;
    case kObjectPathSetMutation: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.objectpath_set_mutation_);
      break;
    }
    // .IvionOnline.List_ObjectPath_Insert_Mutation List_ObjectPath_Insert_Mutation = 17;
    case kListObjectPathInsertMutation: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_objectpath_insert_mutation_);
      break;
    }
    // .IvionOnline.List_ObjectPath_Remove_Mutation List_ObjectPath_Remove_Mutation = 18;
    case kListObjectPathRemoveMutation: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mut_.list_objectpath_remove_mutation_);
      break;
    }
    case MUT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mutation::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  const Mutation* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Mutation>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Mutation)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Mutation)
    MergeFrom(*source);
  }
}

void Mutation::MergeFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Mutation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.mut_case()) {
    case kBooleanSetMutation: {
      _internal_mutable_boolean_set_mutation()->::IvionOnline::Boolean_Set_Mutation::MergeFrom(from._internal_boolean_set_mutation());
      break;
    }
    case kListBooleanInsertMutation: {
      _internal_mutable_list_boolean_insert_mutation()->::IvionOnline::List_Boolean_Insert_Mutation::MergeFrom(from._internal_list_boolean_insert_mutation());
      break;
    }
    case kListBooleanRemoveMutation: {
      _internal_mutable_list_boolean_remove_mutation()->::IvionOnline::List_Boolean_Remove_Mutation::MergeFrom(from._internal_list_boolean_remove_mutation());
      break;
    }
    case kIntegerSetMutation: {
      _internal_mutable_integer_set_mutation()->::IvionOnline::Integer_Set_Mutation::MergeFrom(from._internal_integer_set_mutation());
      break;
    }
    case kListIntegerInsertMutation: {
      _internal_mutable_list_integer_insert_mutation()->::IvionOnline::List_Integer_Insert_Mutation::MergeFrom(from._internal_list_integer_insert_mutation());
      break;
    }
    case kListIntegerRemoveMutation: {
      _internal_mutable_list_integer_remove_mutation()->::IvionOnline::List_Integer_Remove_Mutation::MergeFrom(from._internal_list_integer_remove_mutation());
      break;
    }
    case kVec2ISetMutation: {
      _internal_mutable_vec2i_set_mutation()->::IvionOnline::Vec2i_Set_Mutation::MergeFrom(from._internal_vec2i_set_mutation());
      break;
    }
    case kListVec2IInsertMutation: {
      _internal_mutable_list_vec2i_insert_mutation()->::IvionOnline::List_Vec2i_Insert_Mutation::MergeFrom(from._internal_list_vec2i_insert_mutation());
      break;
    }
    case kListVec2IRemoveMutation: {
      _internal_mutable_list_vec2i_remove_mutation()->::IvionOnline::List_Vec2i_Remove_Mutation::MergeFrom(from._internal_list_vec2i_remove_mutation());
      break;
    }
    case kTerrainSetMutation: {
      _internal_mutable_terrain_set_mutation()->::IvionOnline::Terrain_Set_Mutation::MergeFrom(from._internal_terrain_set_mutation());
      break;
    }
    case kListTerrainInsertMutation: {
      _internal_mutable_list_terrain_insert_mutation()->::IvionOnline::List_Terrain_Insert_Mutation::MergeFrom(from._internal_list_terrain_insert_mutation());
      break;
    }
    case kListTerrainRemoveMutation: {
      _internal_mutable_list_terrain_remove_mutation()->::IvionOnline::List_Terrain_Remove_Mutation::MergeFrom(from._internal_list_terrain_remove_mutation());
      break;
    }
    case kColorSetMutation: {
      _internal_mutable_color_set_mutation()->::IvionOnline::Color_Set_Mutation::MergeFrom(from._internal_color_set_mutation());
      break;
    }
    case kListColorInsertMutation: {
      _internal_mutable_list_color_insert_mutation()->::IvionOnline::List_Color_Insert_Mutation::MergeFrom(from._internal_list_color_insert_mutation());
      break;
    }
    case kListColorRemoveMutation: {
      _internal_mutable_list_color_remove_mutation()->::IvionOnline::List_Color_Remove_Mutation::MergeFrom(from._internal_list_color_remove_mutation());
      break;
    }
    case kObjectPathSetMutation: {
      _internal_mutable_objectpath_set_mutation()->::IvionOnline::ObjectPath_Set_Mutation::MergeFrom(from._internal_objectpath_set_mutation());
      break;
    }
    case kListObjectPathInsertMutation: {
      _internal_mutable_list_objectpath_insert_mutation()->::IvionOnline::List_ObjectPath_Insert_Mutation::MergeFrom(from._internal_list_objectpath_insert_mutation());
      break;
    }
    case kListObjectPathRemoveMutation: {
      _internal_mutable_list_objectpath_remove_mutation()->::IvionOnline::List_ObjectPath_Remove_Mutation::MergeFrom(from._internal_list_objectpath_remove_mutation());
      break;
    }
    case MUT_NOT_SET: {
      break;
    }
  }
}

void Mutation::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mutation::CopyFrom(const Mutation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Mutation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mutation::IsInitialized() const {
  return true;
}

void Mutation::InternalSwap(Mutation* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(mut_, other->mut_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Mutation::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetList::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& source(const GetList* msg);
  static const ::IvionOnline::List_ObjectPath& result(const GetList* msg);
};

const ::IvionOnline::ObjectPath&
GetList::_Internal::source(const GetList* msg) {
  return *msg->source_;
}
const ::IvionOnline::List_ObjectPath&
GetList::_Internal::result(const GetList* msg) {
  return *msg->result_;
}
GetList::GetList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.GetList)
}
GetList::GetList(const GetList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::IvionOnline::ObjectPath(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::List_ObjectPath(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.GetList)
}

void GetList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetList_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&source_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&source_)) + sizeof(result_));
}

GetList::~GetList() {
  // @@protoc_insertion_point(destructor:IvionOnline.GetList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete result_;
}

void GetList::ArenaDtor(void* object) {
  GetList* _this = reinterpret_cast< GetList* >(object);
  (void)_this;
}
void GetList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetList& GetList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetList_GameState_2eproto.base);
  return *internal_default_instance();
}


void GetList::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.GetList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.GetList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Result = 2;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.GetList)
  return target;
}

size_t GetList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.GetList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .IvionOnline.List_ObjectPath Result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.GetList)
  GOOGLE_DCHECK_NE(&from, this);
  const GetList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.GetList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.GetList)
    MergeFrom(*source);
  }
}

void GetList::MergeFrom(const GetList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.GetList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::IvionOnline::ObjectPath::MergeFrom(from._internal_source());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_result());
  }
}

void GetList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.GetList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetList::CopyFrom(const GetList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.GetList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetList::IsInitialized() const {
  return true;
}

void GetList::InternalSwap(GetList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetList, result_)
      + sizeof(GetList::result_)
      - PROTOBUF_FIELD_OFFSET(GetList, source_)>(
          reinterpret_cast<char*>(&source_),
          reinterpret_cast<char*>(&other->source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class FilterDistance::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& targets(const FilterDistance* msg);
  static const ::IvionOnline::ObjectPath& rangesources(const FilterDistance* msg);
  static const ::IvionOnline::ObjectPath& maxdistance(const FilterDistance* msg);
};

const ::IvionOnline::ObjectPath&
FilterDistance::_Internal::targets(const FilterDistance* msg) {
  return *msg->targets_;
}
const ::IvionOnline::ObjectPath&
FilterDistance::_Internal::rangesources(const FilterDistance* msg) {
  return *msg->rangesources_;
}
const ::IvionOnline::ObjectPath&
FilterDistance::_Internal::maxdistance(const FilterDistance* msg) {
  return *msg->maxdistance_;
}
FilterDistance::FilterDistance(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.FilterDistance)
}
FilterDistance::FilterDistance(const FilterDistance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_targets()) {
    targets_ = new ::IvionOnline::ObjectPath(*from.targets_);
  } else {
    targets_ = nullptr;
  }
  if (from._internal_has_rangesources()) {
    rangesources_ = new ::IvionOnline::ObjectPath(*from.rangesources_);
  } else {
    rangesources_ = nullptr;
  }
  if (from._internal_has_maxdistance()) {
    maxdistance_ = new ::IvionOnline::ObjectPath(*from.maxdistance_);
  } else {
    maxdistance_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.FilterDistance)
}

void FilterDistance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FilterDistance_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&targets_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&maxdistance_) -
      reinterpret_cast<char*>(&targets_)) + sizeof(maxdistance_));
}

FilterDistance::~FilterDistance() {
  // @@protoc_insertion_point(destructor:IvionOnline.FilterDistance)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FilterDistance::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete targets_;
  if (this != internal_default_instance()) delete rangesources_;
  if (this != internal_default_instance()) delete maxdistance_;
}

void FilterDistance::ArenaDtor(void* object) {
  FilterDistance* _this = reinterpret_cast< FilterDistance* >(object);
  (void)_this;
}
void FilterDistance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FilterDistance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FilterDistance& FilterDistance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FilterDistance_GameState_2eproto.base);
  return *internal_default_instance();
}


void FilterDistance::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.FilterDistance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && targets_ != nullptr) {
    delete targets_;
  }
  targets_ = nullptr;
  if (GetArena() == nullptr && rangesources_ != nullptr) {
    delete rangesources_;
  }
  rangesources_ = nullptr;
  if (GetArena() == nullptr && maxdistance_ != nullptr) {
    delete maxdistance_;
  }
  maxdistance_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FilterDistance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Targets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_targets(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath RangeSources = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rangesources(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath MaxDistance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_maxdistance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FilterDistance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.FilterDistance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Targets = 1;
  if (this->has_targets()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::targets(this), target, stream);
  }

  // .IvionOnline.ObjectPath RangeSources = 2;
  if (this->has_rangesources()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rangesources(this), target, stream);
  }

  // .IvionOnline.ObjectPath MaxDistance = 3;
  if (this->has_maxdistance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::maxdistance(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.FilterDistance)
  return target;
}

size_t FilterDistance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.FilterDistance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Targets = 1;
  if (this->has_targets()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *targets_);
  }

  // .IvionOnline.ObjectPath RangeSources = 2;
  if (this->has_rangesources()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rangesources_);
  }

  // .IvionOnline.ObjectPath MaxDistance = 3;
  if (this->has_maxdistance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *maxdistance_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FilterDistance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.FilterDistance)
  GOOGLE_DCHECK_NE(&from, this);
  const FilterDistance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FilterDistance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.FilterDistance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.FilterDistance)
    MergeFrom(*source);
  }
}

void FilterDistance::MergeFrom(const FilterDistance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.FilterDistance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_targets()) {
    _internal_mutable_targets()->::IvionOnline::ObjectPath::MergeFrom(from._internal_targets());
  }
  if (from.has_rangesources()) {
    _internal_mutable_rangesources()->::IvionOnline::ObjectPath::MergeFrom(from._internal_rangesources());
  }
  if (from.has_maxdistance()) {
    _internal_mutable_maxdistance()->::IvionOnline::ObjectPath::MergeFrom(from._internal_maxdistance());
  }
}

void FilterDistance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.FilterDistance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilterDistance::CopyFrom(const FilterDistance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.FilterDistance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilterDistance::IsInitialized() const {
  return true;
}

void FilterDistance::InternalSwap(FilterDistance* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FilterDistance, maxdistance_)
      + sizeof(FilterDistance::maxdistance_)
      - PROTOBUF_FIELD_OFFSET(FilterDistance, targets_)>(
          reinterpret_cast<char*>(&targets_),
          reinterpret_cast<char*>(&other->targets_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FilterDistance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SelectMultiple::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& source(const SelectMultiple* msg);
  static const ::IvionOnline::ObjectPath& number(const SelectMultiple* msg);
  static const ::IvionOnline::ObjectPath& upto(const SelectMultiple* msg);
  static const ::IvionOnline::List_ObjectPath& result(const SelectMultiple* msg);
};

const ::IvionOnline::ObjectPath&
SelectMultiple::_Internal::source(const SelectMultiple* msg) {
  return *msg->source_;
}
const ::IvionOnline::ObjectPath&
SelectMultiple::_Internal::number(const SelectMultiple* msg) {
  return *msg->number_;
}
const ::IvionOnline::ObjectPath&
SelectMultiple::_Internal::upto(const SelectMultiple* msg) {
  return *msg->upto_;
}
const ::IvionOnline::List_ObjectPath&
SelectMultiple::_Internal::result(const SelectMultiple* msg) {
  return *msg->result_;
}
SelectMultiple::SelectMultiple(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.SelectMultiple)
}
SelectMultiple::SelectMultiple(const SelectMultiple& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::IvionOnline::ObjectPath(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_number()) {
    number_ = new ::IvionOnline::ObjectPath(*from.number_);
  } else {
    number_ = nullptr;
  }
  if (from._internal_has_upto()) {
    upto_ = new ::IvionOnline::ObjectPath(*from.upto_);
  } else {
    upto_ = nullptr;
  }
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::List_ObjectPath(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.SelectMultiple)
}

void SelectMultiple::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SelectMultiple_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&source_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&source_)) + sizeof(result_));
}

SelectMultiple::~SelectMultiple() {
  // @@protoc_insertion_point(destructor:IvionOnline.SelectMultiple)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SelectMultiple::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete number_;
  if (this != internal_default_instance()) delete upto_;
  if (this != internal_default_instance()) delete result_;
}

void SelectMultiple::ArenaDtor(void* object) {
  SelectMultiple* _this = reinterpret_cast< SelectMultiple* >(object);
  (void)_this;
}
void SelectMultiple::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SelectMultiple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelectMultiple& SelectMultiple::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelectMultiple_GameState_2eproto.base);
  return *internal_default_instance();
}


void SelectMultiple::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.SelectMultiple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && number_ != nullptr) {
    delete number_;
  }
  number_ = nullptr;
  if (GetArena() == nullptr && upto_ != nullptr) {
    delete upto_;
  }
  upto_ = nullptr;
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelectMultiple::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath UpTo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_upto(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.List_ObjectPath Result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelectMultiple::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.SelectMultiple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  // .IvionOnline.ObjectPath Number = 2;
  if (this->has_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::number(this), target, stream);
  }

  // .IvionOnline.ObjectPath UpTo = 3;
  if (this->has_upto()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::upto(this), target, stream);
  }

  // .IvionOnline.List_ObjectPath Result = 4;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.SelectMultiple)
  return target;
}

size_t SelectMultiple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.SelectMultiple)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .IvionOnline.ObjectPath Number = 2;
  if (this->has_number()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *number_);
  }

  // .IvionOnline.ObjectPath UpTo = 3;
  if (this->has_upto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *upto_);
  }

  // .IvionOnline.List_ObjectPath Result = 4;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectMultiple::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.SelectMultiple)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectMultiple* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelectMultiple>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.SelectMultiple)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.SelectMultiple)
    MergeFrom(*source);
  }
}

void SelectMultiple::MergeFrom(const SelectMultiple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.SelectMultiple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::IvionOnline::ObjectPath::MergeFrom(from._internal_source());
  }
  if (from.has_number()) {
    _internal_mutable_number()->::IvionOnline::ObjectPath::MergeFrom(from._internal_number());
  }
  if (from.has_upto()) {
    _internal_mutable_upto()->::IvionOnline::ObjectPath::MergeFrom(from._internal_upto());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::List_ObjectPath::MergeFrom(from._internal_result());
  }
}

void SelectMultiple::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.SelectMultiple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectMultiple::CopyFrom(const SelectMultiple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.SelectMultiple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectMultiple::IsInitialized() const {
  return true;
}

void SelectMultiple::InternalSwap(SelectMultiple* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectMultiple, result_)
      + sizeof(SelectMultiple::result_)
      - PROTOBUF_FIELD_OFFSET(SelectMultiple, source_)>(
          reinterpret_cast<char*>(&source_),
          reinterpret_cast<char*>(&other->source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SelectMultiple::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class SelectExactlyOne::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& source(const SelectExactlyOne* msg);
  static const ::IvionOnline::ObjectPath& result(const SelectExactlyOne* msg);
};

const ::IvionOnline::ObjectPath&
SelectExactlyOne::_Internal::source(const SelectExactlyOne* msg) {
  return *msg->source_;
}
const ::IvionOnline::ObjectPath&
SelectExactlyOne::_Internal::result(const SelectExactlyOne* msg) {
  return *msg->result_;
}
SelectExactlyOne::SelectExactlyOne(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.SelectExactlyOne)
}
SelectExactlyOne::SelectExactlyOne(const SelectExactlyOne& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::IvionOnline::ObjectPath(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::ObjectPath(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.SelectExactlyOne)
}

void SelectExactlyOne::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SelectExactlyOne_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&source_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&source_)) + sizeof(result_));
}

SelectExactlyOne::~SelectExactlyOne() {
  // @@protoc_insertion_point(destructor:IvionOnline.SelectExactlyOne)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SelectExactlyOne::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete result_;
}

void SelectExactlyOne::ArenaDtor(void* object) {
  SelectExactlyOne* _this = reinterpret_cast< SelectExactlyOne* >(object);
  (void)_this;
}
void SelectExactlyOne::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SelectExactlyOne::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SelectExactlyOne& SelectExactlyOne::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SelectExactlyOne_GameState_2eproto.base);
  return *internal_default_instance();
}


void SelectExactlyOne::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.SelectExactlyOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SelectExactlyOne::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SelectExactlyOne::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.SelectExactlyOne)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  // .IvionOnline.ObjectPath Result = 2;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.SelectExactlyOne)
  return target;
}

size_t SelectExactlyOne::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.SelectExactlyOne)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .IvionOnline.ObjectPath Result = 2;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SelectExactlyOne::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.SelectExactlyOne)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectExactlyOne* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SelectExactlyOne>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.SelectExactlyOne)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.SelectExactlyOne)
    MergeFrom(*source);
  }
}

void SelectExactlyOne::MergeFrom(const SelectExactlyOne& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.SelectExactlyOne)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::IvionOnline::ObjectPath::MergeFrom(from._internal_source());
  }
  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::ObjectPath::MergeFrom(from._internal_result());
  }
}

void SelectExactlyOne::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.SelectExactlyOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectExactlyOne::CopyFrom(const SelectExactlyOne& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.SelectExactlyOne)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectExactlyOne::IsInitialized() const {
  return true;
}

void SelectExactlyOne::InternalSwap(SelectExactlyOne* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectExactlyOne, result_)
      + sizeof(SelectExactlyOne::result_)
      - PROTOBUF_FIELD_OFFSET(SelectExactlyOne, source_)>(
          reinterpret_cast<char*>(&source_),
          reinterpret_cast<char*>(&other->source_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SelectExactlyOne::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AssertControlOrHeroic::_Internal {
 public:
};

AssertControlOrHeroic::AssertControlOrHeroic(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.AssertControlOrHeroic)
}
AssertControlOrHeroic::AssertControlOrHeroic(const AssertControlOrHeroic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IvionOnline.AssertControlOrHeroic)
}

void AssertControlOrHeroic::SharedCtor() {
}

AssertControlOrHeroic::~AssertControlOrHeroic() {
  // @@protoc_insertion_point(destructor:IvionOnline.AssertControlOrHeroic)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AssertControlOrHeroic::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AssertControlOrHeroic::ArenaDtor(void* object) {
  AssertControlOrHeroic* _this = reinterpret_cast< AssertControlOrHeroic* >(object);
  (void)_this;
}
void AssertControlOrHeroic::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AssertControlOrHeroic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssertControlOrHeroic& AssertControlOrHeroic::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssertControlOrHeroic_GameState_2eproto.base);
  return *internal_default_instance();
}


void AssertControlOrHeroic::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.AssertControlOrHeroic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssertControlOrHeroic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssertControlOrHeroic::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.AssertControlOrHeroic)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.AssertControlOrHeroic)
  return target;
}

size_t AssertControlOrHeroic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.AssertControlOrHeroic)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssertControlOrHeroic::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.AssertControlOrHeroic)
  GOOGLE_DCHECK_NE(&from, this);
  const AssertControlOrHeroic* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssertControlOrHeroic>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.AssertControlOrHeroic)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.AssertControlOrHeroic)
    MergeFrom(*source);
  }
}

void AssertControlOrHeroic::MergeFrom(const AssertControlOrHeroic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.AssertControlOrHeroic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AssertControlOrHeroic::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.AssertControlOrHeroic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssertControlOrHeroic::CopyFrom(const AssertControlOrHeroic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.AssertControlOrHeroic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssertControlOrHeroic::IsInitialized() const {
  return true;
}

void AssertControlOrHeroic::InternalSwap(AssertControlOrHeroic* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssertControlOrHeroic::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AssertControllerHasPriority::_Internal {
 public:
};

AssertControllerHasPriority::AssertControllerHasPriority(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.AssertControllerHasPriority)
}
AssertControllerHasPriority::AssertControllerHasPriority(const AssertControllerHasPriority& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IvionOnline.AssertControllerHasPriority)
}

void AssertControllerHasPriority::SharedCtor() {
}

AssertControllerHasPriority::~AssertControllerHasPriority() {
  // @@protoc_insertion_point(destructor:IvionOnline.AssertControllerHasPriority)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AssertControllerHasPriority::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AssertControllerHasPriority::ArenaDtor(void* object) {
  AssertControllerHasPriority* _this = reinterpret_cast< AssertControllerHasPriority* >(object);
  (void)_this;
}
void AssertControllerHasPriority::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AssertControllerHasPriority::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssertControllerHasPriority& AssertControllerHasPriority::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssertControllerHasPriority_GameState_2eproto.base);
  return *internal_default_instance();
}


void AssertControllerHasPriority::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.AssertControllerHasPriority)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssertControllerHasPriority::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssertControllerHasPriority::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.AssertControllerHasPriority)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.AssertControllerHasPriority)
  return target;
}

size_t AssertControllerHasPriority::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.AssertControllerHasPriority)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssertControllerHasPriority::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.AssertControllerHasPriority)
  GOOGLE_DCHECK_NE(&from, this);
  const AssertControllerHasPriority* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssertControllerHasPriority>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.AssertControllerHasPriority)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.AssertControllerHasPriority)
    MergeFrom(*source);
  }
}

void AssertControllerHasPriority::MergeFrom(const AssertControllerHasPriority& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.AssertControllerHasPriority)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AssertControllerHasPriority::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.AssertControllerHasPriority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssertControllerHasPriority::CopyFrom(const AssertControllerHasPriority& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.AssertControllerHasPriority)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssertControllerHasPriority::IsInitialized() const {
  return true;
}

void AssertControllerHasPriority::InternalSwap(AssertControllerHasPriority* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssertControllerHasPriority::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AssertStackEmptyOrInstant::_Internal {
 public:
};

AssertStackEmptyOrInstant::AssertStackEmptyOrInstant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.AssertStackEmptyOrInstant)
}
AssertStackEmptyOrInstant::AssertStackEmptyOrInstant(const AssertStackEmptyOrInstant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:IvionOnline.AssertStackEmptyOrInstant)
}

void AssertStackEmptyOrInstant::SharedCtor() {
}

AssertStackEmptyOrInstant::~AssertStackEmptyOrInstant() {
  // @@protoc_insertion_point(destructor:IvionOnline.AssertStackEmptyOrInstant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AssertStackEmptyOrInstant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AssertStackEmptyOrInstant::ArenaDtor(void* object) {
  AssertStackEmptyOrInstant* _this = reinterpret_cast< AssertStackEmptyOrInstant* >(object);
  (void)_this;
}
void AssertStackEmptyOrInstant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AssertStackEmptyOrInstant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AssertStackEmptyOrInstant& AssertStackEmptyOrInstant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AssertStackEmptyOrInstant_GameState_2eproto.base);
  return *internal_default_instance();
}


void AssertStackEmptyOrInstant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.AssertStackEmptyOrInstant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssertStackEmptyOrInstant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AssertStackEmptyOrInstant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.AssertStackEmptyOrInstant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.AssertStackEmptyOrInstant)
  return target;
}

size_t AssertStackEmptyOrInstant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.AssertStackEmptyOrInstant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AssertStackEmptyOrInstant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.AssertStackEmptyOrInstant)
  GOOGLE_DCHECK_NE(&from, this);
  const AssertStackEmptyOrInstant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AssertStackEmptyOrInstant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.AssertStackEmptyOrInstant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.AssertStackEmptyOrInstant)
    MergeFrom(*source);
  }
}

void AssertStackEmptyOrInstant::MergeFrom(const AssertStackEmptyOrInstant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.AssertStackEmptyOrInstant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void AssertStackEmptyOrInstant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.AssertStackEmptyOrInstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AssertStackEmptyOrInstant::CopyFrom(const AssertStackEmptyOrInstant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.AssertStackEmptyOrInstant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssertStackEmptyOrInstant::IsInitialized() const {
  return true;
}

void AssertStackEmptyOrInstant::InternalSwap(AssertStackEmptyOrInstant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssertStackEmptyOrInstant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ReduceCost::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& card(const ReduceCost* msg);
  static const ::IvionOnline::ObjectPath& actioncostreduction(const ReduceCost* msg);
  static const ::IvionOnline::ObjectPath& powercostreduction(const ReduceCost* msg);
  static const ::IvionOnline::ObjectPath& costreduction(const ReduceCost* msg);
  static const ::IvionOnline::ObjectPath& free(const ReduceCost* msg);
};

const ::IvionOnline::ObjectPath&
ReduceCost::_Internal::card(const ReduceCost* msg) {
  return *msg->card_;
}
const ::IvionOnline::ObjectPath&
ReduceCost::_Internal::actioncostreduction(const ReduceCost* msg) {
  return *msg->actioncostreduction_;
}
const ::IvionOnline::ObjectPath&
ReduceCost::_Internal::powercostreduction(const ReduceCost* msg) {
  return *msg->powercostreduction_;
}
const ::IvionOnline::ObjectPath&
ReduceCost::_Internal::costreduction(const ReduceCost* msg) {
  return *msg->costreduction_;
}
const ::IvionOnline::ObjectPath&
ReduceCost::_Internal::free(const ReduceCost* msg) {
  return *msg->free_;
}
ReduceCost::ReduceCost(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.ReduceCost)
}
ReduceCost::ReduceCost(const ReduceCost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_card()) {
    card_ = new ::IvionOnline::ObjectPath(*from.card_);
  } else {
    card_ = nullptr;
  }
  if (from._internal_has_actioncostreduction()) {
    actioncostreduction_ = new ::IvionOnline::ObjectPath(*from.actioncostreduction_);
  } else {
    actioncostreduction_ = nullptr;
  }
  if (from._internal_has_powercostreduction()) {
    powercostreduction_ = new ::IvionOnline::ObjectPath(*from.powercostreduction_);
  } else {
    powercostreduction_ = nullptr;
  }
  if (from._internal_has_costreduction()) {
    costreduction_ = new ::IvionOnline::ObjectPath(*from.costreduction_);
  } else {
    costreduction_ = nullptr;
  }
  if (from._internal_has_free()) {
    free_ = new ::IvionOnline::ObjectPath(*from.free_);
  } else {
    free_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.ReduceCost)
}

void ReduceCost::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReduceCost_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&card_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&free_) -
      reinterpret_cast<char*>(&card_)) + sizeof(free_));
}

ReduceCost::~ReduceCost() {
  // @@protoc_insertion_point(destructor:IvionOnline.ReduceCost)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReduceCost::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete card_;
  if (this != internal_default_instance()) delete actioncostreduction_;
  if (this != internal_default_instance()) delete powercostreduction_;
  if (this != internal_default_instance()) delete costreduction_;
  if (this != internal_default_instance()) delete free_;
}

void ReduceCost::ArenaDtor(void* object) {
  ReduceCost* _this = reinterpret_cast< ReduceCost* >(object);
  (void)_this;
}
void ReduceCost::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReduceCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReduceCost& ReduceCost::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReduceCost_GameState_2eproto.base);
  return *internal_default_instance();
}


void ReduceCost::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.ReduceCost)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
  if (GetArena() == nullptr && actioncostreduction_ != nullptr) {
    delete actioncostreduction_;
  }
  actioncostreduction_ = nullptr;
  if (GetArena() == nullptr && powercostreduction_ != nullptr) {
    delete powercostreduction_;
  }
  powercostreduction_ = nullptr;
  if (GetArena() == nullptr && costreduction_ != nullptr) {
    delete costreduction_;
  }
  costreduction_ = nullptr;
  if (GetArena() == nullptr && free_ != nullptr) {
    delete free_;
  }
  free_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReduceCost::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Card = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath ActionCostReduction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_actioncostreduction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath PowerCostReduction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_powercostreduction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath CostReduction = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_costreduction(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Free = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_free(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReduceCost::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.ReduceCost)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Card = 1;
  if (this->has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::card(this), target, stream);
  }

  // .IvionOnline.ObjectPath ActionCostReduction = 2;
  if (this->has_actioncostreduction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::actioncostreduction(this), target, stream);
  }

  // .IvionOnline.ObjectPath PowerCostReduction = 3;
  if (this->has_powercostreduction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::powercostreduction(this), target, stream);
  }

  // .IvionOnline.ObjectPath CostReduction = 4;
  if (this->has_costreduction()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::costreduction(this), target, stream);
  }

  // .IvionOnline.ObjectPath Free = 5;
  if (this->has_free()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::free(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.ReduceCost)
  return target;
}

size_t ReduceCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.ReduceCost)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Card = 1;
  if (this->has_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *card_);
  }

  // .IvionOnline.ObjectPath ActionCostReduction = 2;
  if (this->has_actioncostreduction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *actioncostreduction_);
  }

  // .IvionOnline.ObjectPath PowerCostReduction = 3;
  if (this->has_powercostreduction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *powercostreduction_);
  }

  // .IvionOnline.ObjectPath CostReduction = 4;
  if (this->has_costreduction()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *costreduction_);
  }

  // .IvionOnline.ObjectPath Free = 5;
  if (this->has_free()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *free_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReduceCost::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.ReduceCost)
  GOOGLE_DCHECK_NE(&from, this);
  const ReduceCost* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReduceCost>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.ReduceCost)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.ReduceCost)
    MergeFrom(*source);
  }
}

void ReduceCost::MergeFrom(const ReduceCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.ReduceCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_card()) {
    _internal_mutable_card()->::IvionOnline::ObjectPath::MergeFrom(from._internal_card());
  }
  if (from.has_actioncostreduction()) {
    _internal_mutable_actioncostreduction()->::IvionOnline::ObjectPath::MergeFrom(from._internal_actioncostreduction());
  }
  if (from.has_powercostreduction()) {
    _internal_mutable_powercostreduction()->::IvionOnline::ObjectPath::MergeFrom(from._internal_powercostreduction());
  }
  if (from.has_costreduction()) {
    _internal_mutable_costreduction()->::IvionOnline::ObjectPath::MergeFrom(from._internal_costreduction());
  }
  if (from.has_free()) {
    _internal_mutable_free()->::IvionOnline::ObjectPath::MergeFrom(from._internal_free());
  }
}

void ReduceCost::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.ReduceCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReduceCost::CopyFrom(const ReduceCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.ReduceCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReduceCost::IsInitialized() const {
  return true;
}

void ReduceCost::InternalSwap(ReduceCost* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReduceCost, free_)
      + sizeof(ReduceCost::free_)
      - PROTOBUF_FIELD_OFFSET(ReduceCost, card_)>(
          reinterpret_cast<char*>(&card_),
          reinterpret_cast<char*>(&other->card_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReduceCost::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PayCost::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const PayCost* msg);
  static const ::IvionOnline::ObjectPath& card(const PayCost* msg);
};

const ::IvionOnline::ObjectPath&
PayCost::_Internal::player(const PayCost* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
PayCost::_Internal::card(const PayCost* msg) {
  return *msg->card_;
}
PayCost::PayCost(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.PayCost)
}
PayCost::PayCost(const PayCost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_card()) {
    card_ = new ::IvionOnline::ObjectPath(*from.card_);
  } else {
    card_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.PayCost)
}

void PayCost::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PayCost_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&card_) -
      reinterpret_cast<char*>(&player_)) + sizeof(card_));
}

PayCost::~PayCost() {
  // @@protoc_insertion_point(destructor:IvionOnline.PayCost)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PayCost::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete card_;
}

void PayCost::ArenaDtor(void* object) {
  PayCost* _this = reinterpret_cast< PayCost* >(object);
  (void)_this;
}
void PayCost::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PayCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PayCost& PayCost::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PayCost_GameState_2eproto.base);
  return *internal_default_instance();
}


void PayCost::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.PayCost)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PayCost::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Card = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PayCost::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.PayCost)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Card = 2;
  if (this->has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::card(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.PayCost)
  return target;
}

size_t PayCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.PayCost)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Card = 2;
  if (this->has_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *card_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PayCost::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.PayCost)
  GOOGLE_DCHECK_NE(&from, this);
  const PayCost* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PayCost>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.PayCost)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.PayCost)
    MergeFrom(*source);
  }
}

void PayCost::MergeFrom(const PayCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.PayCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_card()) {
    _internal_mutable_card()->::IvionOnline::ObjectPath::MergeFrom(from._internal_card());
  }
}

void PayCost::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.PayCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PayCost::CopyFrom(const PayCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.PayCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PayCost::IsInitialized() const {
  return true;
}

void PayCost::InternalSwap(PayCost* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayCost, card_)
      + sizeof(PayCost::card_)
      - PROTOBUF_FIELD_OFFSET(PayCost, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PayCost::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PlayGainResources::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const PlayGainResources* msg);
  static const ::IvionOnline::ObjectPath& card(const PlayGainResources* msg);
};

const ::IvionOnline::ObjectPath&
PlayGainResources::_Internal::player(const PlayGainResources* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
PlayGainResources::_Internal::card(const PlayGainResources* msg) {
  return *msg->card_;
}
PlayGainResources::PlayGainResources(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.PlayGainResources)
}
PlayGainResources::PlayGainResources(const PlayGainResources& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_card()) {
    card_ = new ::IvionOnline::ObjectPath(*from.card_);
  } else {
    card_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.PlayGainResources)
}

void PlayGainResources::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PlayGainResources_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&card_) -
      reinterpret_cast<char*>(&player_)) + sizeof(card_));
}

PlayGainResources::~PlayGainResources() {
  // @@protoc_insertion_point(destructor:IvionOnline.PlayGainResources)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PlayGainResources::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete card_;
}

void PlayGainResources::ArenaDtor(void* object) {
  PlayGainResources* _this = reinterpret_cast< PlayGainResources* >(object);
  (void)_this;
}
void PlayGainResources::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PlayGainResources::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayGainResources& PlayGainResources::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PlayGainResources_GameState_2eproto.base);
  return *internal_default_instance();
}


void PlayGainResources::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.PlayGainResources)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PlayGainResources::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Card = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PlayGainResources::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.PlayGainResources)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Card = 2;
  if (this->has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::card(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.PlayGainResources)
  return target;
}

size_t PlayGainResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.PlayGainResources)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Card = 2;
  if (this->has_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *card_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayGainResources::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.PlayGainResources)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayGainResources* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PlayGainResources>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.PlayGainResources)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.PlayGainResources)
    MergeFrom(*source);
  }
}

void PlayGainResources::MergeFrom(const PlayGainResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.PlayGainResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_card()) {
    _internal_mutable_card()->::IvionOnline::ObjectPath::MergeFrom(from._internal_card());
  }
}

void PlayGainResources::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.PlayGainResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayGainResources::CopyFrom(const PlayGainResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.PlayGainResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayGainResources::IsInitialized() const {
  return true;
}

void PlayGainResources::InternalSwap(PlayGainResources* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlayGainResources, card_)
      + sizeof(PlayGainResources::card_)
      - PROTOBUF_FIELD_OFFSET(PlayGainResources, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PlayGainResources::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RefundCost::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const RefundCost* msg);
  static const ::IvionOnline::ObjectPath& card(const RefundCost* msg);
};

const ::IvionOnline::ObjectPath&
RefundCost::_Internal::player(const RefundCost* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
RefundCost::_Internal::card(const RefundCost* msg) {
  return *msg->card_;
}
RefundCost::RefundCost(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.RefundCost)
}
RefundCost::RefundCost(const RefundCost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_card()) {
    card_ = new ::IvionOnline::ObjectPath(*from.card_);
  } else {
    card_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.RefundCost)
}

void RefundCost::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RefundCost_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&card_) -
      reinterpret_cast<char*>(&player_)) + sizeof(card_));
}

RefundCost::~RefundCost() {
  // @@protoc_insertion_point(destructor:IvionOnline.RefundCost)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RefundCost::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete card_;
}

void RefundCost::ArenaDtor(void* object) {
  RefundCost* _this = reinterpret_cast< RefundCost* >(object);
  (void)_this;
}
void RefundCost::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RefundCost::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RefundCost& RefundCost::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RefundCost_GameState_2eproto.base);
  return *internal_default_instance();
}


void RefundCost::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.RefundCost)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RefundCost::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Card = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_card(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RefundCost::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.RefundCost)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Card = 2;
  if (this->has_card()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::card(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.RefundCost)
  return target;
}

size_t RefundCost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.RefundCost)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Card = 2;
  if (this->has_card()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *card_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefundCost::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.RefundCost)
  GOOGLE_DCHECK_NE(&from, this);
  const RefundCost* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RefundCost>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.RefundCost)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.RefundCost)
    MergeFrom(*source);
  }
}

void RefundCost::MergeFrom(const RefundCost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.RefundCost)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_card()) {
    _internal_mutable_card()->::IvionOnline::ObjectPath::MergeFrom(from._internal_card());
  }
}

void RefundCost::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.RefundCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefundCost::CopyFrom(const RefundCost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.RefundCost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefundCost::IsInitialized() const {
  return true;
}

void RefundCost::InternalSwap(RefundCost* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RefundCost, card_)
      + sizeof(RefundCost::card_)
      - PROTOBUF_FIELD_OFFSET(RefundCost, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RefundCost::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GainActions::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const GainActions* msg);
  static const ::IvionOnline::ObjectPath& value(const GainActions* msg);
};

const ::IvionOnline::ObjectPath&
GainActions::_Internal::player(const GainActions* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
GainActions::_Internal::value(const GainActions* msg) {
  return *msg->value_;
}
GainActions::GainActions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.GainActions)
}
GainActions::GainActions(const GainActions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::IvionOnline::ObjectPath(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.GainActions)
}

void GainActions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GainActions_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&player_)) + sizeof(value_));
}

GainActions::~GainActions() {
  // @@protoc_insertion_point(destructor:IvionOnline.GainActions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GainActions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete value_;
}

void GainActions::ArenaDtor(void* object) {
  GainActions* _this = reinterpret_cast< GainActions* >(object);
  (void)_this;
}
void GainActions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GainActions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GainActions& GainActions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GainActions_GameState_2eproto.base);
  return *internal_default_instance();
}


void GainActions::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.GainActions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GainActions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GainActions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.GainActions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.GainActions)
  return target;
}

size_t GainActions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.GainActions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GainActions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.GainActions)
  GOOGLE_DCHECK_NE(&from, this);
  const GainActions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GainActions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.GainActions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.GainActions)
    MergeFrom(*source);
  }
}

void GainActions::MergeFrom(const GainActions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.GainActions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::IvionOnline::ObjectPath::MergeFrom(from._internal_value());
  }
}

void GainActions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.GainActions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GainActions::CopyFrom(const GainActions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.GainActions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GainActions::IsInitialized() const {
  return true;
}

void GainActions::InternalSwap(GainActions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GainActions, value_)
      + sizeof(GainActions::value_)
      - PROTOBUF_FIELD_OFFSET(GainActions, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GainActions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GainPower::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const GainPower* msg);
  static const ::IvionOnline::ObjectPath& value(const GainPower* msg);
};

const ::IvionOnline::ObjectPath&
GainPower::_Internal::player(const GainPower* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
GainPower::_Internal::value(const GainPower* msg) {
  return *msg->value_;
}
GainPower::GainPower(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.GainPower)
}
GainPower::GainPower(const GainPower& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::IvionOnline::ObjectPath(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.GainPower)
}

void GainPower::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GainPower_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&player_)) + sizeof(value_));
}

GainPower::~GainPower() {
  // @@protoc_insertion_point(destructor:IvionOnline.GainPower)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GainPower::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete value_;
}

void GainPower::ArenaDtor(void* object) {
  GainPower* _this = reinterpret_cast< GainPower* >(object);
  (void)_this;
}
void GainPower::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GainPower::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GainPower& GainPower::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GainPower_GameState_2eproto.base);
  return *internal_default_instance();
}


void GainPower::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.GainPower)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GainPower::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GainPower::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.GainPower)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.GainPower)
  return target;
}

size_t GainPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.GainPower)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GainPower::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.GainPower)
  GOOGLE_DCHECK_NE(&from, this);
  const GainPower* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GainPower>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.GainPower)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.GainPower)
    MergeFrom(*source);
  }
}

void GainPower::MergeFrom(const GainPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.GainPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::IvionOnline::ObjectPath::MergeFrom(from._internal_value());
  }
}

void GainPower::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.GainPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GainPower::CopyFrom(const GainPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.GainPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GainPower::IsInitialized() const {
  return true;
}

void GainPower::InternalSwap(GainPower* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GainPower, value_)
      + sizeof(GainPower::value_)
      - PROTOBUF_FIELD_OFFSET(GainPower, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GainPower::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Move::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const Move* msg);
  static const ::IvionOnline::ObjectPath& destination(const Move* msg);
};

const ::IvionOnline::ObjectPath&
Move::_Internal::player(const Move* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
Move::_Internal::destination(const Move* msg) {
  return *msg->destination_;
}
Move::Move(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Move)
}
Move::Move(const Move& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_destination()) {
    destination_ = new ::IvionOnline::ObjectPath(*from.destination_);
  } else {
    destination_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Move)
}

void Move::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Move_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&destination_) -
      reinterpret_cast<char*>(&player_)) + sizeof(destination_));
}

Move::~Move() {
  // @@protoc_insertion_point(destructor:IvionOnline.Move)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Move::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete destination_;
}

void Move::ArenaDtor(void* object) {
  Move* _this = reinterpret_cast< Move* >(object);
  (void)_this;
}
void Move::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Move::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Move& Move::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Move_GameState_2eproto.base);
  return *internal_default_instance();
}


void Move::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Move)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && destination_ != nullptr) {
    delete destination_;
  }
  destination_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Move::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Destination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_destination(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Move::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Move)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Destination = 2;
  if (this->has_destination()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::destination(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Move)
  return target;
}

size_t Move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Move)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Destination = 2;
  if (this->has_destination()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Move::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Move)
  GOOGLE_DCHECK_NE(&from, this);
  const Move* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Move>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Move)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Move)
    MergeFrom(*source);
  }
}

void Move::MergeFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_destination()) {
    _internal_mutable_destination()->::IvionOnline::ObjectPath::MergeFrom(from._internal_destination());
  }
}

void Move::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Move::CopyFrom(const Move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Move::IsInitialized() const {
  return true;
}

void Move::InternalSwap(Move* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Move, destination_)
      + sizeof(Move::destination_)
      - PROTOBUF_FIELD_OFFSET(Move, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Move::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Travel::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const Travel* msg);
  static const ::IvionOnline::ObjectPath& destination(const Travel* msg);
};

const ::IvionOnline::ObjectPath&
Travel::_Internal::player(const Travel* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
Travel::_Internal::destination(const Travel* msg) {
  return *msg->destination_;
}
Travel::Travel(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Travel)
}
Travel::Travel(const Travel& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_destination()) {
    destination_ = new ::IvionOnline::ObjectPath(*from.destination_);
  } else {
    destination_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Travel)
}

void Travel::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Travel_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&destination_) -
      reinterpret_cast<char*>(&player_)) + sizeof(destination_));
}

Travel::~Travel() {
  // @@protoc_insertion_point(destructor:IvionOnline.Travel)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Travel::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete destination_;
}

void Travel::ArenaDtor(void* object) {
  Travel* _this = reinterpret_cast< Travel* >(object);
  (void)_this;
}
void Travel::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Travel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Travel& Travel::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Travel_GameState_2eproto.base);
  return *internal_default_instance();
}


void Travel::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Travel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && destination_ != nullptr) {
    delete destination_;
  }
  destination_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Travel::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Destination = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_destination(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Travel::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Travel)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Destination = 2;
  if (this->has_destination()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::destination(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Travel)
  return target;
}

size_t Travel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Travel)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Destination = 2;
  if (this->has_destination()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *destination_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Travel::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Travel)
  GOOGLE_DCHECK_NE(&from, this);
  const Travel* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Travel>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Travel)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Travel)
    MergeFrom(*source);
  }
}

void Travel::MergeFrom(const Travel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Travel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_destination()) {
    _internal_mutable_destination()->::IvionOnline::ObjectPath::MergeFrom(from._internal_destination());
  }
}

void Travel::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Travel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Travel::CopyFrom(const Travel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Travel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Travel::IsInitialized() const {
  return true;
}

void Travel::InternalSwap(Travel* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Travel, destination_)
      + sizeof(Travel::destination_)
      - PROTOBUF_FIELD_OFFSET(Travel, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Travel::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Damage::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& player(const Damage* msg);
  static const ::IvionOnline::ObjectPath& amount(const Damage* msg);
};

const ::IvionOnline::ObjectPath&
Damage::_Internal::player(const Damage* msg) {
  return *msg->player_;
}
const ::IvionOnline::ObjectPath&
Damage::_Internal::amount(const Damage* msg) {
  return *msg->amount_;
}
Damage::Damage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Damage)
}
Damage::Damage(const Damage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    player_ = new ::IvionOnline::ObjectPath(*from.player_);
  } else {
    player_ = nullptr;
  }
  if (from._internal_has_amount()) {
    amount_ = new ::IvionOnline::ObjectPath(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Damage)
}

void Damage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Damage_GameState_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&player_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&amount_) -
      reinterpret_cast<char*>(&player_)) + sizeof(amount_));
}

Damage::~Damage() {
  // @@protoc_insertion_point(destructor:IvionOnline.Damage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Damage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete player_;
  if (this != internal_default_instance()) delete amount_;
}

void Damage::ArenaDtor(void* object) {
  Damage* _this = reinterpret_cast< Damage* >(object);
  (void)_this;
}
void Damage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Damage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Damage& Damage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Damage_GameState_2eproto.base);
  return *internal_default_instance();
}


void Damage::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Damage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
  if (GetArena() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Damage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath Amount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Damage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Damage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::player(this), target, stream);
  }

  // .IvionOnline.ObjectPath Amount = 2;
  if (this->has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::amount(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Damage)
  return target;
}

size_t Damage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Damage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Player = 1;
  if (this->has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *player_);
  }

  // .IvionOnline.ObjectPath Amount = 2;
  if (this->has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Damage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Damage)
  GOOGLE_DCHECK_NE(&from, this);
  const Damage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Damage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Damage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Damage)
    MergeFrom(*source);
  }
}

void Damage::MergeFrom(const Damage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Damage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_player()) {
    _internal_mutable_player()->::IvionOnline::ObjectPath::MergeFrom(from._internal_player());
  }
  if (from.has_amount()) {
    _internal_mutable_amount()->::IvionOnline::ObjectPath::MergeFrom(from._internal_amount());
  }
}

void Damage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Damage::CopyFrom(const Damage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Damage::IsInitialized() const {
  return true;
}

void Damage::InternalSwap(Damage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Damage, amount_)
      + sizeof(Damage::amount_)
      - PROTOBUF_FIELD_OFFSET(Damage, player_)>(
          reinterpret_cast<char*>(&player_),
          reinterpret_cast<char*>(&other->player_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Damage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Boolean_Constant::_Internal {
 public:
  static const ::IvionOnline::Boolean& result(const Boolean_Constant* msg);
};

const ::IvionOnline::Boolean&
Boolean_Constant::_Internal::result(const Boolean_Constant* msg) {
  return *msg->result_;
}
Boolean_Constant::Boolean_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Boolean_Constant)
}
Boolean_Constant::Boolean_Constant(const Boolean_Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::Boolean(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Boolean_Constant)
}

void Boolean_Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Boolean_Constant_GameState_2eproto.base);
  result_ = nullptr;
}

Boolean_Constant::~Boolean_Constant() {
  // @@protoc_insertion_point(destructor:IvionOnline.Boolean_Constant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Boolean_Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void Boolean_Constant::ArenaDtor(void* object) {
  Boolean_Constant* _this = reinterpret_cast< Boolean_Constant* >(object);
  (void)_this;
}
void Boolean_Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Boolean_Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Boolean_Constant& Boolean_Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Boolean_Constant_GameState_2eproto.base);
  return *internal_default_instance();
}


void Boolean_Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Boolean_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Boolean_Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Boolean Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Boolean_Constant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Boolean_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Boolean Result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Boolean_Constant)
  return target;
}

size_t Boolean_Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Boolean_Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.Boolean Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Boolean_Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Boolean_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Boolean_Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Boolean_Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Boolean_Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Boolean_Constant)
    MergeFrom(*source);
  }
}

void Boolean_Constant::MergeFrom(const Boolean_Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Boolean_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::Boolean::MergeFrom(from._internal_result());
  }
}

void Boolean_Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Boolean_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Boolean_Constant::CopyFrom(const Boolean_Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Boolean_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Boolean_Constant::IsInitialized() const {
  return true;
}

void Boolean_Constant::InternalSwap(Boolean_Constant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Boolean_Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Integer_Constant::_Internal {
 public:
  static const ::IvionOnline::Integer& result(const Integer_Constant* msg);
};

const ::IvionOnline::Integer&
Integer_Constant::_Internal::result(const Integer_Constant* msg) {
  return *msg->result_;
}
Integer_Constant::Integer_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Integer_Constant)
}
Integer_Constant::Integer_Constant(const Integer_Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::Integer(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Integer_Constant)
}

void Integer_Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Integer_Constant_GameState_2eproto.base);
  result_ = nullptr;
}

Integer_Constant::~Integer_Constant() {
  // @@protoc_insertion_point(destructor:IvionOnline.Integer_Constant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Integer_Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void Integer_Constant::ArenaDtor(void* object) {
  Integer_Constant* _this = reinterpret_cast< Integer_Constant* >(object);
  (void)_this;
}
void Integer_Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Integer_Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Integer_Constant& Integer_Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Integer_Constant_GameState_2eproto.base);
  return *internal_default_instance();
}


void Integer_Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Integer_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Integer_Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Integer Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Integer_Constant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Integer_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Integer Result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Integer_Constant)
  return target;
}

size_t Integer_Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Integer_Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.Integer Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Integer_Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Integer_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Integer_Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Integer_Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Integer_Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Integer_Constant)
    MergeFrom(*source);
  }
}

void Integer_Constant::MergeFrom(const Integer_Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Integer_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::Integer::MergeFrom(from._internal_result());
  }
}

void Integer_Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Integer_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Integer_Constant::CopyFrom(const Integer_Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Integer_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Integer_Constant::IsInitialized() const {
  return true;
}

void Integer_Constant::InternalSwap(Integer_Constant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Integer_Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Vec2i_Constant::_Internal {
 public:
  static const ::IvionOnline::Vec2i& result(const Vec2i_Constant* msg);
};

const ::IvionOnline::Vec2i&
Vec2i_Constant::_Internal::result(const Vec2i_Constant* msg) {
  return *msg->result_;
}
Vec2i_Constant::Vec2i_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Vec2i_Constant)
}
Vec2i_Constant::Vec2i_Constant(const Vec2i_Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::Vec2i(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Vec2i_Constant)
}

void Vec2i_Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Vec2i_Constant_GameState_2eproto.base);
  result_ = nullptr;
}

Vec2i_Constant::~Vec2i_Constant() {
  // @@protoc_insertion_point(destructor:IvionOnline.Vec2i_Constant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vec2i_Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void Vec2i_Constant::ArenaDtor(void* object) {
  Vec2i_Constant* _this = reinterpret_cast< Vec2i_Constant* >(object);
  (void)_this;
}
void Vec2i_Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vec2i_Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vec2i_Constant& Vec2i_Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vec2i_Constant_GameState_2eproto.base);
  return *internal_default_instance();
}


void Vec2i_Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Vec2i_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vec2i_Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Vec2i Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vec2i_Constant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Vec2i_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Vec2i Result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Vec2i_Constant)
  return target;
}

size_t Vec2i_Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Vec2i_Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.Vec2i Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec2i_Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Vec2i_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec2i_Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vec2i_Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Vec2i_Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Vec2i_Constant)
    MergeFrom(*source);
  }
}

void Vec2i_Constant::MergeFrom(const Vec2i_Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Vec2i_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::Vec2i::MergeFrom(from._internal_result());
  }
}

void Vec2i_Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Vec2i_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec2i_Constant::CopyFrom(const Vec2i_Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Vec2i_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec2i_Constant::IsInitialized() const {
  return true;
}

void Vec2i_Constant::InternalSwap(Vec2i_Constant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vec2i_Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Terrain_Constant::_Internal {
 public:
  static const ::IvionOnline::Terrain& result(const Terrain_Constant* msg);
};

const ::IvionOnline::Terrain&
Terrain_Constant::_Internal::result(const Terrain_Constant* msg) {
  return *msg->result_;
}
Terrain_Constant::Terrain_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Terrain_Constant)
}
Terrain_Constant::Terrain_Constant(const Terrain_Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::Terrain(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Terrain_Constant)
}

void Terrain_Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Terrain_Constant_GameState_2eproto.base);
  result_ = nullptr;
}

Terrain_Constant::~Terrain_Constant() {
  // @@protoc_insertion_point(destructor:IvionOnline.Terrain_Constant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Terrain_Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void Terrain_Constant::ArenaDtor(void* object) {
  Terrain_Constant* _this = reinterpret_cast< Terrain_Constant* >(object);
  (void)_this;
}
void Terrain_Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Terrain_Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Terrain_Constant& Terrain_Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Terrain_Constant_GameState_2eproto.base);
  return *internal_default_instance();
}


void Terrain_Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Terrain_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Terrain_Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Terrain Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Terrain_Constant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Terrain_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Terrain Result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Terrain_Constant)
  return target;
}

size_t Terrain_Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Terrain_Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.Terrain Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Terrain_Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Terrain_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Terrain_Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Terrain_Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Terrain_Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Terrain_Constant)
    MergeFrom(*source);
  }
}

void Terrain_Constant::MergeFrom(const Terrain_Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Terrain_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::Terrain::MergeFrom(from._internal_result());
  }
}

void Terrain_Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Terrain_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Terrain_Constant::CopyFrom(const Terrain_Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Terrain_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Terrain_Constant::IsInitialized() const {
  return true;
}

void Terrain_Constant::InternalSwap(Terrain_Constant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Terrain_Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Color_Constant::_Internal {
 public:
  static const ::IvionOnline::Color& result(const Color_Constant* msg);
};

const ::IvionOnline::Color&
Color_Constant::_Internal::result(const Color_Constant* msg) {
  return *msg->result_;
}
Color_Constant::Color_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Color_Constant)
}
Color_Constant::Color_Constant(const Color_Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::Color(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Color_Constant)
}

void Color_Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Color_Constant_GameState_2eproto.base);
  result_ = nullptr;
}

Color_Constant::~Color_Constant() {
  // @@protoc_insertion_point(destructor:IvionOnline.Color_Constant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Color_Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void Color_Constant::ArenaDtor(void* object) {
  Color_Constant* _this = reinterpret_cast< Color_Constant* >(object);
  (void)_this;
}
void Color_Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Color_Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Color_Constant& Color_Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Color_Constant_GameState_2eproto.base);
  return *internal_default_instance();
}


void Color_Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Color_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Color_Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.Color Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Color_Constant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Color_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.Color Result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Color_Constant)
  return target;
}

size_t Color_Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Color_Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.Color Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Color_Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Color_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const Color_Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Color_Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Color_Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Color_Constant)
    MergeFrom(*source);
  }
}

void Color_Constant::MergeFrom(const Color_Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Color_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::Color::MergeFrom(from._internal_result());
  }
}

void Color_Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Color_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Color_Constant::CopyFrom(const Color_Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Color_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Color_Constant::IsInitialized() const {
  return true;
}

void Color_Constant::InternalSwap(Color_Constant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Color_Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjectPath_Constant::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& result(const ObjectPath_Constant* msg);
};

const ::IvionOnline::ObjectPath&
ObjectPath_Constant::_Internal::result(const ObjectPath_Constant* msg) {
  return *msg->result_;
}
ObjectPath_Constant::ObjectPath_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.ObjectPath_Constant)
}
ObjectPath_Constant::ObjectPath_Constant(const ObjectPath_Constant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::IvionOnline::ObjectPath(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.ObjectPath_Constant)
}

void ObjectPath_Constant::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectPath_Constant_GameState_2eproto.base);
  result_ = nullptr;
}

ObjectPath_Constant::~ObjectPath_Constant() {
  // @@protoc_insertion_point(destructor:IvionOnline.ObjectPath_Constant)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectPath_Constant::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void ObjectPath_Constant::ArenaDtor(void* object) {
  ObjectPath_Constant* _this = reinterpret_cast< ObjectPath_Constant* >(object);
  (void)_this;
}
void ObjectPath_Constant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectPath_Constant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectPath_Constant& ObjectPath_Constant::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectPath_Constant_GameState_2eproto.base);
  return *internal_default_instance();
}


void ObjectPath_Constant::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.ObjectPath_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectPath_Constant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.ObjectPath Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectPath_Constant::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.ObjectPath_Constant)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.ObjectPath_Constant)
  return target;
}

size_t ObjectPath_Constant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.ObjectPath_Constant)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .IvionOnline.ObjectPath Result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectPath_Constant::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.ObjectPath_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPath_Constant* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectPath_Constant>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.ObjectPath_Constant)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.ObjectPath_Constant)
    MergeFrom(*source);
  }
}

void ObjectPath_Constant::MergeFrom(const ObjectPath_Constant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.ObjectPath_Constant)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::IvionOnline::ObjectPath::MergeFrom(from._internal_result());
  }
}

void ObjectPath_Constant::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.ObjectPath_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPath_Constant::CopyFrom(const ObjectPath_Constant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.ObjectPath_Constant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPath_Constant::IsInitialized() const {
  return true;
}

void ObjectPath_Constant::InternalSwap(ObjectPath_Constant* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectPath_Constant::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Method::_Internal {
 public:
  static const ::IvionOnline::GetList& getlist(const Method* msg);
  static const ::IvionOnline::FilterDistance& filterdistance(const Method* msg);
  static const ::IvionOnline::SelectMultiple& selectmultiple(const Method* msg);
  static const ::IvionOnline::SelectExactlyOne& selectexactlyone(const Method* msg);
  static const ::IvionOnline::AssertControlOrHeroic& assertcontrolorheroic(const Method* msg);
  static const ::IvionOnline::AssertControllerHasPriority& assertcontrollerhaspriority(const Method* msg);
  static const ::IvionOnline::AssertStackEmptyOrInstant& assertstackemptyorinstant(const Method* msg);
  static const ::IvionOnline::ReduceCost& reducecost(const Method* msg);
  static const ::IvionOnline::PayCost& paycost(const Method* msg);
  static const ::IvionOnline::PlayGainResources& playgainresources(const Method* msg);
  static const ::IvionOnline::RefundCost& refundcost(const Method* msg);
  static const ::IvionOnline::GainActions& gainactions(const Method* msg);
  static const ::IvionOnline::GainPower& gainpower(const Method* msg);
  static const ::IvionOnline::Move& move(const Method* msg);
  static const ::IvionOnline::Travel& travel(const Method* msg);
  static const ::IvionOnline::Damage& damage(const Method* msg);
  static const ::IvionOnline::Boolean_Constant& boolean_constant(const Method* msg);
  static const ::IvionOnline::Integer_Constant& integer_constant(const Method* msg);
  static const ::IvionOnline::Vec2i_Constant& vec2i_constant(const Method* msg);
  static const ::IvionOnline::Terrain_Constant& terrain_constant(const Method* msg);
  static const ::IvionOnline::Color_Constant& color_constant(const Method* msg);
  static const ::IvionOnline::ObjectPath_Constant& objectpath_constant(const Method* msg);
};

const ::IvionOnline::GetList&
Method::_Internal::getlist(const Method* msg) {
  return *msg->methods_.getlist_;
}
const ::IvionOnline::FilterDistance&
Method::_Internal::filterdistance(const Method* msg) {
  return *msg->methods_.filterdistance_;
}
const ::IvionOnline::SelectMultiple&
Method::_Internal::selectmultiple(const Method* msg) {
  return *msg->methods_.selectmultiple_;
}
const ::IvionOnline::SelectExactlyOne&
Method::_Internal::selectexactlyone(const Method* msg) {
  return *msg->methods_.selectexactlyone_;
}
const ::IvionOnline::AssertControlOrHeroic&
Method::_Internal::assertcontrolorheroic(const Method* msg) {
  return *msg->methods_.assertcontrolorheroic_;
}
const ::IvionOnline::AssertControllerHasPriority&
Method::_Internal::assertcontrollerhaspriority(const Method* msg) {
  return *msg->methods_.assertcontrollerhaspriority_;
}
const ::IvionOnline::AssertStackEmptyOrInstant&
Method::_Internal::assertstackemptyorinstant(const Method* msg) {
  return *msg->methods_.assertstackemptyorinstant_;
}
const ::IvionOnline::ReduceCost&
Method::_Internal::reducecost(const Method* msg) {
  return *msg->methods_.reducecost_;
}
const ::IvionOnline::PayCost&
Method::_Internal::paycost(const Method* msg) {
  return *msg->methods_.paycost_;
}
const ::IvionOnline::PlayGainResources&
Method::_Internal::playgainresources(const Method* msg) {
  return *msg->methods_.playgainresources_;
}
const ::IvionOnline::RefundCost&
Method::_Internal::refundcost(const Method* msg) {
  return *msg->methods_.refundcost_;
}
const ::IvionOnline::GainActions&
Method::_Internal::gainactions(const Method* msg) {
  return *msg->methods_.gainactions_;
}
const ::IvionOnline::GainPower&
Method::_Internal::gainpower(const Method* msg) {
  return *msg->methods_.gainpower_;
}
const ::IvionOnline::Move&
Method::_Internal::move(const Method* msg) {
  return *msg->methods_.move_;
}
const ::IvionOnline::Travel&
Method::_Internal::travel(const Method* msg) {
  return *msg->methods_.travel_;
}
const ::IvionOnline::Damage&
Method::_Internal::damage(const Method* msg) {
  return *msg->methods_.damage_;
}
const ::IvionOnline::Boolean_Constant&
Method::_Internal::boolean_constant(const Method* msg) {
  return *msg->methods_.boolean_constant_;
}
const ::IvionOnline::Integer_Constant&
Method::_Internal::integer_constant(const Method* msg) {
  return *msg->methods_.integer_constant_;
}
const ::IvionOnline::Vec2i_Constant&
Method::_Internal::vec2i_constant(const Method* msg) {
  return *msg->methods_.vec2i_constant_;
}
const ::IvionOnline::Terrain_Constant&
Method::_Internal::terrain_constant(const Method* msg) {
  return *msg->methods_.terrain_constant_;
}
const ::IvionOnline::Color_Constant&
Method::_Internal::color_constant(const Method* msg) {
  return *msg->methods_.color_constant_;
}
const ::IvionOnline::ObjectPath_Constant&
Method::_Internal::objectpath_constant(const Method* msg) {
  return *msg->methods_.objectpath_constant_;
}
void Method::set_allocated_getlist(::IvionOnline::GetList* getlist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (getlist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(getlist);
    if (message_arena != submessage_arena) {
      getlist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, getlist, submessage_arena);
    }
    set_has_getlist();
    methods_.getlist_ = getlist;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.GetList)
}
void Method::set_allocated_filterdistance(::IvionOnline::FilterDistance* filterdistance) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (filterdistance) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(filterdistance);
    if (message_arena != submessage_arena) {
      filterdistance = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filterdistance, submessage_arena);
    }
    set_has_filterdistance();
    methods_.filterdistance_ = filterdistance;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.FilterDistance)
}
void Method::set_allocated_selectmultiple(::IvionOnline::SelectMultiple* selectmultiple) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (selectmultiple) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(selectmultiple);
    if (message_arena != submessage_arena) {
      selectmultiple = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, selectmultiple, submessage_arena);
    }
    set_has_selectmultiple();
    methods_.selectmultiple_ = selectmultiple;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.SelectMultiple)
}
void Method::set_allocated_selectexactlyone(::IvionOnline::SelectExactlyOne* selectexactlyone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (selectexactlyone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(selectexactlyone);
    if (message_arena != submessage_arena) {
      selectexactlyone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, selectexactlyone, submessage_arena);
    }
    set_has_selectexactlyone();
    methods_.selectexactlyone_ = selectexactlyone;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.SelectExactlyOne)
}
void Method::set_allocated_assertcontrolorheroic(::IvionOnline::AssertControlOrHeroic* assertcontrolorheroic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (assertcontrolorheroic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(assertcontrolorheroic);
    if (message_arena != submessage_arena) {
      assertcontrolorheroic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, assertcontrolorheroic, submessage_arena);
    }
    set_has_assertcontrolorheroic();
    methods_.assertcontrolorheroic_ = assertcontrolorheroic;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.AssertControlOrHeroic)
}
void Method::set_allocated_assertcontrollerhaspriority(::IvionOnline::AssertControllerHasPriority* assertcontrollerhaspriority) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (assertcontrollerhaspriority) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(assertcontrollerhaspriority);
    if (message_arena != submessage_arena) {
      assertcontrollerhaspriority = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, assertcontrollerhaspriority, submessage_arena);
    }
    set_has_assertcontrollerhaspriority();
    methods_.assertcontrollerhaspriority_ = assertcontrollerhaspriority;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.AssertControllerHasPriority)
}
void Method::set_allocated_assertstackemptyorinstant(::IvionOnline::AssertStackEmptyOrInstant* assertstackemptyorinstant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (assertstackemptyorinstant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(assertstackemptyorinstant);
    if (message_arena != submessage_arena) {
      assertstackemptyorinstant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, assertstackemptyorinstant, submessage_arena);
    }
    set_has_assertstackemptyorinstant();
    methods_.assertstackemptyorinstant_ = assertstackemptyorinstant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.AssertStackEmptyOrInstant)
}
void Method::set_allocated_reducecost(::IvionOnline::ReduceCost* reducecost) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (reducecost) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(reducecost);
    if (message_arena != submessage_arena) {
      reducecost = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reducecost, submessage_arena);
    }
    set_has_reducecost();
    methods_.reducecost_ = reducecost;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.ReduceCost)
}
void Method::set_allocated_paycost(::IvionOnline::PayCost* paycost) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (paycost) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(paycost);
    if (message_arena != submessage_arena) {
      paycost = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, paycost, submessage_arena);
    }
    set_has_paycost();
    methods_.paycost_ = paycost;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.PayCost)
}
void Method::set_allocated_playgainresources(::IvionOnline::PlayGainResources* playgainresources) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (playgainresources) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(playgainresources);
    if (message_arena != submessage_arena) {
      playgainresources = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playgainresources, submessage_arena);
    }
    set_has_playgainresources();
    methods_.playgainresources_ = playgainresources;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.PlayGainResources)
}
void Method::set_allocated_refundcost(::IvionOnline::RefundCost* refundcost) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (refundcost) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(refundcost);
    if (message_arena != submessage_arena) {
      refundcost = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, refundcost, submessage_arena);
    }
    set_has_refundcost();
    methods_.refundcost_ = refundcost;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.RefundCost)
}
void Method::set_allocated_gainactions(::IvionOnline::GainActions* gainactions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (gainactions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gainactions);
    if (message_arena != submessage_arena) {
      gainactions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gainactions, submessage_arena);
    }
    set_has_gainactions();
    methods_.gainactions_ = gainactions;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.GainActions)
}
void Method::set_allocated_gainpower(::IvionOnline::GainPower* gainpower) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (gainpower) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(gainpower);
    if (message_arena != submessage_arena) {
      gainpower = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gainpower, submessage_arena);
    }
    set_has_gainpower();
    methods_.gainpower_ = gainpower;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.GainPower)
}
void Method::set_allocated_move(::IvionOnline::Move* move) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (move) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(move);
    if (message_arena != submessage_arena) {
      move = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, move, submessage_arena);
    }
    set_has_move();
    methods_.move_ = move;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Move)
}
void Method::set_allocated_travel(::IvionOnline::Travel* travel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (travel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(travel);
    if (message_arena != submessage_arena) {
      travel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, travel, submessage_arena);
    }
    set_has_travel();
    methods_.travel_ = travel;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Travel)
}
void Method::set_allocated_damage(::IvionOnline::Damage* damage) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (damage) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(damage);
    if (message_arena != submessage_arena) {
      damage = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, damage, submessage_arena);
    }
    set_has_damage();
    methods_.damage_ = damage;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Damage)
}
void Method::set_allocated_boolean_constant(::IvionOnline::Boolean_Constant* boolean_constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (boolean_constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(boolean_constant);
    if (message_arena != submessage_arena) {
      boolean_constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boolean_constant, submessage_arena);
    }
    set_has_boolean_constant();
    methods_.boolean_constant_ = boolean_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Boolean_Constant)
}
void Method::set_allocated_integer_constant(::IvionOnline::Integer_Constant* integer_constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (integer_constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(integer_constant);
    if (message_arena != submessage_arena) {
      integer_constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, integer_constant, submessage_arena);
    }
    set_has_integer_constant();
    methods_.integer_constant_ = integer_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Integer_Constant)
}
void Method::set_allocated_vec2i_constant(::IvionOnline::Vec2i_Constant* vec2i_constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (vec2i_constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vec2i_constant);
    if (message_arena != submessage_arena) {
      vec2i_constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vec2i_constant, submessage_arena);
    }
    set_has_vec2i_constant();
    methods_.vec2i_constant_ = vec2i_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Vec2i_Constant)
}
void Method::set_allocated_terrain_constant(::IvionOnline::Terrain_Constant* terrain_constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (terrain_constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(terrain_constant);
    if (message_arena != submessage_arena) {
      terrain_constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, terrain_constant, submessage_arena);
    }
    set_has_terrain_constant();
    methods_.terrain_constant_ = terrain_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Terrain_Constant)
}
void Method::set_allocated_color_constant(::IvionOnline::Color_Constant* color_constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (color_constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(color_constant);
    if (message_arena != submessage_arena) {
      color_constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, color_constant, submessage_arena);
    }
    set_has_color_constant();
    methods_.color_constant_ = color_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.Color_Constant)
}
void Method::set_allocated_objectpath_constant(::IvionOnline::ObjectPath_Constant* objectpath_constant) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_methods();
  if (objectpath_constant) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(objectpath_constant);
    if (message_arena != submessage_arena) {
      objectpath_constant = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, objectpath_constant, submessage_arena);
    }
    set_has_objectpath_constant();
    methods_.objectpath_constant_ = objectpath_constant;
  }
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Method.ObjectPath_Constant)
}
Method::Method(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.Method)
}
Method::Method(const Method& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_methods();
  switch (from.methods_case()) {
    case kGetList: {
      _internal_mutable_getlist()->::IvionOnline::GetList::MergeFrom(from._internal_getlist());
      break;
    }
    case kFilterDistance: {
      _internal_mutable_filterdistance()->::IvionOnline::FilterDistance::MergeFrom(from._internal_filterdistance());
      break;
    }
    case kSelectMultiple: {
      _internal_mutable_selectmultiple()->::IvionOnline::SelectMultiple::MergeFrom(from._internal_selectmultiple());
      break;
    }
    case kSelectExactlyOne: {
      _internal_mutable_selectexactlyone()->::IvionOnline::SelectExactlyOne::MergeFrom(from._internal_selectexactlyone());
      break;
    }
    case kAssertControlOrHeroic: {
      _internal_mutable_assertcontrolorheroic()->::IvionOnline::AssertControlOrHeroic::MergeFrom(from._internal_assertcontrolorheroic());
      break;
    }
    case kAssertControllerHasPriority: {
      _internal_mutable_assertcontrollerhaspriority()->::IvionOnline::AssertControllerHasPriority::MergeFrom(from._internal_assertcontrollerhaspriority());
      break;
    }
    case kAssertStackEmptyOrInstant: {
      _internal_mutable_assertstackemptyorinstant()->::IvionOnline::AssertStackEmptyOrInstant::MergeFrom(from._internal_assertstackemptyorinstant());
      break;
    }
    case kReduceCost: {
      _internal_mutable_reducecost()->::IvionOnline::ReduceCost::MergeFrom(from._internal_reducecost());
      break;
    }
    case kPayCost: {
      _internal_mutable_paycost()->::IvionOnline::PayCost::MergeFrom(from._internal_paycost());
      break;
    }
    case kPlayGainResources: {
      _internal_mutable_playgainresources()->::IvionOnline::PlayGainResources::MergeFrom(from._internal_playgainresources());
      break;
    }
    case kRefundCost: {
      _internal_mutable_refundcost()->::IvionOnline::RefundCost::MergeFrom(from._internal_refundcost());
      break;
    }
    case kGainActions: {
      _internal_mutable_gainactions()->::IvionOnline::GainActions::MergeFrom(from._internal_gainactions());
      break;
    }
    case kGainPower: {
      _internal_mutable_gainpower()->::IvionOnline::GainPower::MergeFrom(from._internal_gainpower());
      break;
    }
    case kMove: {
      _internal_mutable_move()->::IvionOnline::Move::MergeFrom(from._internal_move());
      break;
    }
    case kTravel: {
      _internal_mutable_travel()->::IvionOnline::Travel::MergeFrom(from._internal_travel());
      break;
    }
    case kDamage: {
      _internal_mutable_damage()->::IvionOnline::Damage::MergeFrom(from._internal_damage());
      break;
    }
    case kBooleanConstant: {
      _internal_mutable_boolean_constant()->::IvionOnline::Boolean_Constant::MergeFrom(from._internal_boolean_constant());
      break;
    }
    case kIntegerConstant: {
      _internal_mutable_integer_constant()->::IvionOnline::Integer_Constant::MergeFrom(from._internal_integer_constant());
      break;
    }
    case kVec2IConstant: {
      _internal_mutable_vec2i_constant()->::IvionOnline::Vec2i_Constant::MergeFrom(from._internal_vec2i_constant());
      break;
    }
    case kTerrainConstant: {
      _internal_mutable_terrain_constant()->::IvionOnline::Terrain_Constant::MergeFrom(from._internal_terrain_constant());
      break;
    }
    case kColorConstant: {
      _internal_mutable_color_constant()->::IvionOnline::Color_Constant::MergeFrom(from._internal_color_constant());
      break;
    }
    case kObjectPathConstant: {
      _internal_mutable_objectpath_constant()->::IvionOnline::ObjectPath_Constant::MergeFrom(from._internal_objectpath_constant());
      break;
    }
    case METHODS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.Method)
}

void Method::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Method_GameState_2eproto.base);
  clear_has_methods();
}

Method::~Method() {
  // @@protoc_insertion_point(destructor:IvionOnline.Method)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Method::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_methods()) {
    clear_methods();
  }
}

void Method::ArenaDtor(void* object) {
  Method* _this = reinterpret_cast< Method* >(object);
  (void)_this;
}
void Method::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Method::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Method& Method::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Method_GameState_2eproto.base);
  return *internal_default_instance();
}


void Method::clear_methods() {
// @@protoc_insertion_point(one_of_clear_start:IvionOnline.Method)
  switch (methods_case()) {
    case kGetList: {
      if (GetArena() == nullptr) {
        delete methods_.getlist_;
      }
      break;
    }
    case kFilterDistance: {
      if (GetArena() == nullptr) {
        delete methods_.filterdistance_;
      }
      break;
    }
    case kSelectMultiple: {
      if (GetArena() == nullptr) {
        delete methods_.selectmultiple_;
      }
      break;
    }
    case kSelectExactlyOne: {
      if (GetArena() == nullptr) {
        delete methods_.selectexactlyone_;
      }
      break;
    }
    case kAssertControlOrHeroic: {
      if (GetArena() == nullptr) {
        delete methods_.assertcontrolorheroic_;
      }
      break;
    }
    case kAssertControllerHasPriority: {
      if (GetArena() == nullptr) {
        delete methods_.assertcontrollerhaspriority_;
      }
      break;
    }
    case kAssertStackEmptyOrInstant: {
      if (GetArena() == nullptr) {
        delete methods_.assertstackemptyorinstant_;
      }
      break;
    }
    case kReduceCost: {
      if (GetArena() == nullptr) {
        delete methods_.reducecost_;
      }
      break;
    }
    case kPayCost: {
      if (GetArena() == nullptr) {
        delete methods_.paycost_;
      }
      break;
    }
    case kPlayGainResources: {
      if (GetArena() == nullptr) {
        delete methods_.playgainresources_;
      }
      break;
    }
    case kRefundCost: {
      if (GetArena() == nullptr) {
        delete methods_.refundcost_;
      }
      break;
    }
    case kGainActions: {
      if (GetArena() == nullptr) {
        delete methods_.gainactions_;
      }
      break;
    }
    case kGainPower: {
      if (GetArena() == nullptr) {
        delete methods_.gainpower_;
      }
      break;
    }
    case kMove: {
      if (GetArena() == nullptr) {
        delete methods_.move_;
      }
      break;
    }
    case kTravel: {
      if (GetArena() == nullptr) {
        delete methods_.travel_;
      }
      break;
    }
    case kDamage: {
      if (GetArena() == nullptr) {
        delete methods_.damage_;
      }
      break;
    }
    case kBooleanConstant: {
      if (GetArena() == nullptr) {
        delete methods_.boolean_constant_;
      }
      break;
    }
    case kIntegerConstant: {
      if (GetArena() == nullptr) {
        delete methods_.integer_constant_;
      }
      break;
    }
    case kVec2IConstant: {
      if (GetArena() == nullptr) {
        delete methods_.vec2i_constant_;
      }
      break;
    }
    case kTerrainConstant: {
      if (GetArena() == nullptr) {
        delete methods_.terrain_constant_;
      }
      break;
    }
    case kColorConstant: {
      if (GetArena() == nullptr) {
        delete methods_.color_constant_;
      }
      break;
    }
    case kObjectPathConstant: {
      if (GetArena() == nullptr) {
        delete methods_.objectpath_constant_;
      }
      break;
    }
    case METHODS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = METHODS_NOT_SET;
}


void Method::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.Method)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_methods();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Method::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .IvionOnline.GetList GetList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_getlist(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.FilterDistance FilterDistance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_filterdistance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.SelectMultiple SelectMultiple = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_selectmultiple(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.SelectExactlyOne SelectExactlyOne = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_selectexactlyone(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.AssertControlOrHeroic AssertControlOrHeroic = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_assertcontrolorheroic(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.AssertControllerHasPriority AssertControllerHasPriority = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_assertcontrollerhaspriority(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.AssertStackEmptyOrInstant AssertStackEmptyOrInstant = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_assertstackemptyorinstant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ReduceCost ReduceCost = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_reducecost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.PayCost PayCost = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_paycost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.PlayGainResources PlayGainResources = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_playgainresources(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.RefundCost RefundCost = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_refundcost(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.GainActions GainActions = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_gainactions(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.GainPower GainPower = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_gainpower(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Move Move = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_move(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Travel Travel = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_travel(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Damage Damage = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_damage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Boolean_Constant Boolean_Constant = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 138)) {
          ptr = ctx->ParseMessage(_internal_mutable_boolean_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Integer_Constant Integer_Constant = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          ptr = ctx->ParseMessage(_internal_mutable_integer_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Vec2i_Constant Vec2i_Constant = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          ptr = ctx->ParseMessage(_internal_mutable_vec2i_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Terrain_Constant Terrain_Constant = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr = ctx->ParseMessage(_internal_mutable_terrain_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.Color_Constant Color_Constant = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          ptr = ctx->ParseMessage(_internal_mutable_color_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath_Constant ObjectPath_Constant = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          ptr = ctx->ParseMessage(_internal_mutable_objectpath_constant(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Method::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.Method)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .IvionOnline.GetList GetList = 1;
  if (_internal_has_getlist()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::getlist(this), target, stream);
  }

  // .IvionOnline.FilterDistance FilterDistance = 2;
  if (_internal_has_filterdistance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::filterdistance(this), target, stream);
  }

  // .IvionOnline.SelectMultiple SelectMultiple = 3;
  if (_internal_has_selectmultiple()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::selectmultiple(this), target, stream);
  }

  // .IvionOnline.SelectExactlyOne SelectExactlyOne = 4;
  if (_internal_has_selectexactlyone()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::selectexactlyone(this), target, stream);
  }

  // .IvionOnline.AssertControlOrHeroic AssertControlOrHeroic = 5;
  if (_internal_has_assertcontrolorheroic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::assertcontrolorheroic(this), target, stream);
  }

  // .IvionOnline.AssertControllerHasPriority AssertControllerHasPriority = 6;
  if (_internal_has_assertcontrollerhaspriority()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::assertcontrollerhaspriority(this), target, stream);
  }

  // .IvionOnline.AssertStackEmptyOrInstant AssertStackEmptyOrInstant = 7;
  if (_internal_has_assertstackemptyorinstant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::assertstackemptyorinstant(this), target, stream);
  }

  // .IvionOnline.ReduceCost ReduceCost = 8;
  if (_internal_has_reducecost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::reducecost(this), target, stream);
  }

  // .IvionOnline.PayCost PayCost = 9;
  if (_internal_has_paycost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::paycost(this), target, stream);
  }

  // .IvionOnline.PlayGainResources PlayGainResources = 10;
  if (_internal_has_playgainresources()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::playgainresources(this), target, stream);
  }

  // .IvionOnline.RefundCost RefundCost = 11;
  if (_internal_has_refundcost()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::refundcost(this), target, stream);
  }

  // .IvionOnline.GainActions GainActions = 12;
  if (_internal_has_gainactions()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::gainactions(this), target, stream);
  }

  // .IvionOnline.GainPower GainPower = 13;
  if (_internal_has_gainpower()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::gainpower(this), target, stream);
  }

  // .IvionOnline.Move Move = 14;
  if (_internal_has_move()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::move(this), target, stream);
  }

  // .IvionOnline.Travel Travel = 15;
  if (_internal_has_travel()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::travel(this), target, stream);
  }

  // .IvionOnline.Damage Damage = 16;
  if (_internal_has_damage()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::damage(this), target, stream);
  }

  // .IvionOnline.Boolean_Constant Boolean_Constant = 17;
  if (_internal_has_boolean_constant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        17, _Internal::boolean_constant(this), target, stream);
  }

  // .IvionOnline.Integer_Constant Integer_Constant = 18;
  if (_internal_has_integer_constant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        18, _Internal::integer_constant(this), target, stream);
  }

  // .IvionOnline.Vec2i_Constant Vec2i_Constant = 19;
  if (_internal_has_vec2i_constant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        19, _Internal::vec2i_constant(this), target, stream);
  }

  // .IvionOnline.Terrain_Constant Terrain_Constant = 20;
  if (_internal_has_terrain_constant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        20, _Internal::terrain_constant(this), target, stream);
  }

  // .IvionOnline.Color_Constant Color_Constant = 21;
  if (_internal_has_color_constant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        21, _Internal::color_constant(this), target, stream);
  }

  // .IvionOnline.ObjectPath_Constant ObjectPath_Constant = 22;
  if (_internal_has_objectpath_constant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        22, _Internal::objectpath_constant(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.Method)
  return target;
}

size_t Method::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.Method)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (methods_case()) {
    // .IvionOnline.GetList GetList = 1;
    case kGetList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.getlist_);
      break;
    }
    // .IvionOnline.FilterDistance FilterDistance = 2;
    case kFilterDistance: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.filterdistance_);
      break;
    }
    // .IvionOnline.SelectMultiple SelectMultiple = 3;
    case kSelectMultiple: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.selectmultiple_);
      break;
    }
    // .IvionOnline.SelectExactlyOne SelectExactlyOne = 4;
    case kSelectExactlyOne: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.selectexactlyone_);
      break;
    }
    // .IvionOnline.AssertControlOrHeroic AssertControlOrHeroic = 5;
    case kAssertControlOrHeroic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.assertcontrolorheroic_);
      break;
    }
    // .IvionOnline.AssertControllerHasPriority AssertControllerHasPriority = 6;
    case kAssertControllerHasPriority: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.assertcontrollerhaspriority_);
      break;
    }
    // .IvionOnline.AssertStackEmptyOrInstant AssertStackEmptyOrInstant = 7;
    case kAssertStackEmptyOrInstant: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.assertstackemptyorinstant_);
      break;
    }
    // .IvionOnline.ReduceCost ReduceCost = 8;
    case kReduceCost: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.reducecost_);
      break;
    }
    // .IvionOnline.PayCost PayCost = 9;
    case kPayCost: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.paycost_);
      break;
    }
    // .IvionOnline.PlayGainResources PlayGainResources = 10;
    case kPlayGainResources: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.playgainresources_);
      break;
    }
    // .IvionOnline.RefundCost RefundCost = 11;
    case kRefundCost: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.refundcost_);
      break;
    }
    // .IvionOnline.GainActions GainActions = 12;
    case kGainActions: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.gainactions_);
      break;
    }
    // .IvionOnline.GainPower GainPower = 13;
    case kGainPower: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.gainpower_);
      break;
    }
    // .IvionOnline.Move Move = 14;
    case kMove: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.move_);
      break;
    }
    // .IvionOnline.Travel Travel = 15;
    case kTravel: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.travel_);
      break;
    }
    // .IvionOnline.Damage Damage = 16;
    case kDamage: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.damage_);
      break;
    }
    // .IvionOnline.Boolean_Constant Boolean_Constant = 17;
    case kBooleanConstant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.boolean_constant_);
      break;
    }
    // .IvionOnline.Integer_Constant Integer_Constant = 18;
    case kIntegerConstant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.integer_constant_);
      break;
    }
    // .IvionOnline.Vec2i_Constant Vec2i_Constant = 19;
    case kVec2IConstant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.vec2i_constant_);
      break;
    }
    // .IvionOnline.Terrain_Constant Terrain_Constant = 20;
    case kTerrainConstant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.terrain_constant_);
      break;
    }
    // .IvionOnline.Color_Constant Color_Constant = 21;
    case kColorConstant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.color_constant_);
      break;
    }
    // .IvionOnline.ObjectPath_Constant ObjectPath_Constant = 22;
    case kObjectPathConstant: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *methods_.objectpath_constant_);
      break;
    }
    case METHODS_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Method::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.Method)
  GOOGLE_DCHECK_NE(&from, this);
  const Method* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Method>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.Method)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.Method)
    MergeFrom(*source);
  }
}

void Method::MergeFrom(const Method& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.Method)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.methods_case()) {
    case kGetList: {
      _internal_mutable_getlist()->::IvionOnline::GetList::MergeFrom(from._internal_getlist());
      break;
    }
    case kFilterDistance: {
      _internal_mutable_filterdistance()->::IvionOnline::FilterDistance::MergeFrom(from._internal_filterdistance());
      break;
    }
    case kSelectMultiple: {
      _internal_mutable_selectmultiple()->::IvionOnline::SelectMultiple::MergeFrom(from._internal_selectmultiple());
      break;
    }
    case kSelectExactlyOne: {
      _internal_mutable_selectexactlyone()->::IvionOnline::SelectExactlyOne::MergeFrom(from._internal_selectexactlyone());
      break;
    }
    case kAssertControlOrHeroic: {
      _internal_mutable_assertcontrolorheroic()->::IvionOnline::AssertControlOrHeroic::MergeFrom(from._internal_assertcontrolorheroic());
      break;
    }
    case kAssertControllerHasPriority: {
      _internal_mutable_assertcontrollerhaspriority()->::IvionOnline::AssertControllerHasPriority::MergeFrom(from._internal_assertcontrollerhaspriority());
      break;
    }
    case kAssertStackEmptyOrInstant: {
      _internal_mutable_assertstackemptyorinstant()->::IvionOnline::AssertStackEmptyOrInstant::MergeFrom(from._internal_assertstackemptyorinstant());
      break;
    }
    case kReduceCost: {
      _internal_mutable_reducecost()->::IvionOnline::ReduceCost::MergeFrom(from._internal_reducecost());
      break;
    }
    case kPayCost: {
      _internal_mutable_paycost()->::IvionOnline::PayCost::MergeFrom(from._internal_paycost());
      break;
    }
    case kPlayGainResources: {
      _internal_mutable_playgainresources()->::IvionOnline::PlayGainResources::MergeFrom(from._internal_playgainresources());
      break;
    }
    case kRefundCost: {
      _internal_mutable_refundcost()->::IvionOnline::RefundCost::MergeFrom(from._internal_refundcost());
      break;
    }
    case kGainActions: {
      _internal_mutable_gainactions()->::IvionOnline::GainActions::MergeFrom(from._internal_gainactions());
      break;
    }
    case kGainPower: {
      _internal_mutable_gainpower()->::IvionOnline::GainPower::MergeFrom(from._internal_gainpower());
      break;
    }
    case kMove: {
      _internal_mutable_move()->::IvionOnline::Move::MergeFrom(from._internal_move());
      break;
    }
    case kTravel: {
      _internal_mutable_travel()->::IvionOnline::Travel::MergeFrom(from._internal_travel());
      break;
    }
    case kDamage: {
      _internal_mutable_damage()->::IvionOnline::Damage::MergeFrom(from._internal_damage());
      break;
    }
    case kBooleanConstant: {
      _internal_mutable_boolean_constant()->::IvionOnline::Boolean_Constant::MergeFrom(from._internal_boolean_constant());
      break;
    }
    case kIntegerConstant: {
      _internal_mutable_integer_constant()->::IvionOnline::Integer_Constant::MergeFrom(from._internal_integer_constant());
      break;
    }
    case kVec2IConstant: {
      _internal_mutable_vec2i_constant()->::IvionOnline::Vec2i_Constant::MergeFrom(from._internal_vec2i_constant());
      break;
    }
    case kTerrainConstant: {
      _internal_mutable_terrain_constant()->::IvionOnline::Terrain_Constant::MergeFrom(from._internal_terrain_constant());
      break;
    }
    case kColorConstant: {
      _internal_mutable_color_constant()->::IvionOnline::Color_Constant::MergeFrom(from._internal_color_constant());
      break;
    }
    case kObjectPathConstant: {
      _internal_mutable_objectpath_constant()->::IvionOnline::ObjectPath_Constant::MergeFrom(from._internal_objectpath_constant());
      break;
    }
    case METHODS_NOT_SET: {
      break;
    }
  }
}

void Method::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.Method)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Method::CopyFrom(const Method& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.Method)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Method::IsInitialized() const {
  return true;
}

void Method::InternalSwap(Method* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(methods_, other->methods_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Method::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class List_Method::_Internal {
 public:
  static const ::IvionOnline::ObjectPath& abspath(const List_Method* msg);
};

const ::IvionOnline::ObjectPath&
List_Method::_Internal::abspath(const List_Method* msg) {
  return *msg->abspath_;
}
List_Method::List_Method(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  element_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:IvionOnline.List_Method)
}
List_Method::List_Method(const List_Method& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      element_(from.element_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_abspath()) {
    abspath_ = new ::IvionOnline::ObjectPath(*from.abspath_);
  } else {
    abspath_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:IvionOnline.List_Method)
}

void List_Method::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_List_Method_GameState_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  abspath_ = nullptr;
}

List_Method::~List_Method() {
  // @@protoc_insertion_point(destructor:IvionOnline.List_Method)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void List_Method::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abspath_;
}

void List_Method::ArenaDtor(void* object) {
  List_Method* _this = reinterpret_cast< List_Method* >(object);
  (void)_this;
}
void List_Method::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void List_Method::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const List_Method& List_Method::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_List_Method_GameState_2eproto.base);
  return *internal_default_instance();
}


void List_Method::Clear() {
// @@protoc_insertion_point(message_clear_start:IvionOnline.List_Method)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  element_.Clear();
  name_.ClearToEmpty();
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* List_Method::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .IvionOnline.Method element = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_element(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "IvionOnline.List_Method.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .IvionOnline.ObjectPath AbsPath = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_abspath(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* List_Method::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:IvionOnline.List_Method)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .IvionOnline.Method element = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_element_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_element(i), target, stream);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "IvionOnline.List_Method.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::abspath(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IvionOnline.List_Method)
  return target;
}

size_t List_Method::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:IvionOnline.List_Method)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .IvionOnline.Method element = 1;
  total_size += 1UL * this->_internal_element_size();
  for (const auto& msg : this->element_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .IvionOnline.ObjectPath AbsPath = 3;
  if (this->has_abspath()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *abspath_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void List_Method::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IvionOnline.List_Method)
  GOOGLE_DCHECK_NE(&from, this);
  const List_Method* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<List_Method>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IvionOnline.List_Method)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IvionOnline.List_Method)
    MergeFrom(*source);
  }
}

void List_Method::MergeFrom(const List_Method& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IvionOnline.List_Method)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_abspath()) {
    _internal_mutable_abspath()->::IvionOnline::ObjectPath::MergeFrom(from._internal_abspath());
  }
}

void List_Method::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IvionOnline.List_Method)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void List_Method::CopyFrom(const List_Method& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IvionOnline.List_Method)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool List_Method::IsInitialized() const {
  return true;
}

void List_Method::InternalSwap(List_Method* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  element_.InternalSwap(&other->element_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(abspath_, other->abspath_);
}

::PROTOBUF_NAMESPACE_ID::Metadata List_Method::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace IvionOnline
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::IvionOnline::History* Arena::CreateMaybeMessage< ::IvionOnline::History >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::History >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Boolean* Arena::CreateMaybeMessage< ::IvionOnline::Boolean >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Boolean >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Boolean* Arena::CreateMaybeMessage< ::IvionOnline::List_Boolean >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Boolean >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Integer* Arena::CreateMaybeMessage< ::IvionOnline::Integer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Integer >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Integer* Arena::CreateMaybeMessage< ::IvionOnline::List_Integer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Integer >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Vec2i* Arena::CreateMaybeMessage< ::IvionOnline::Vec2i >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Vec2i >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Vec2i* Arena::CreateMaybeMessage< ::IvionOnline::List_Vec2i >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Vec2i >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Terrain* Arena::CreateMaybeMessage< ::IvionOnline::Terrain >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Terrain >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Terrain* Arena::CreateMaybeMessage< ::IvionOnline::List_Terrain >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Terrain >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Color* Arena::CreateMaybeMessage< ::IvionOnline::Color >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Color >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Color* Arena::CreateMaybeMessage< ::IvionOnline::List_Color >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Color >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::ObjectPath* Arena::CreateMaybeMessage< ::IvionOnline::ObjectPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::ObjectPath >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_ObjectPath* Arena::CreateMaybeMessage< ::IvionOnline::List_ObjectPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_ObjectPath >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Player* Arena::CreateMaybeMessage< ::IvionOnline::Player >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Player >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Player* Arena::CreateMaybeMessage< ::IvionOnline::List_Player >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Player >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Card* Arena::CreateMaybeMessage< ::IvionOnline::Card >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Card >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Card* Arena::CreateMaybeMessage< ::IvionOnline::List_Card >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Card >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::CardData* Arena::CreateMaybeMessage< ::IvionOnline::CardData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::CardData >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_CardData* Arena::CreateMaybeMessage< ::IvionOnline::List_CardData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_CardData >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Tile* Arena::CreateMaybeMessage< ::IvionOnline::Tile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Tile >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Tile* Arena::CreateMaybeMessage< ::IvionOnline::List_Tile >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Tile >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::GameState* Arena::CreateMaybeMessage< ::IvionOnline::GameState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::GameState >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_GameState* Arena::CreateMaybeMessage< ::IvionOnline::List_GameState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_GameState >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Boolean_Set_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::Boolean_Set_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Boolean_Set_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Boolean_Insert_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Boolean_Insert_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Boolean_Insert_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Boolean_Remove_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Boolean_Remove_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Boolean_Remove_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Integer_Set_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::Integer_Set_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Integer_Set_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Integer_Insert_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Integer_Insert_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Integer_Insert_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Integer_Remove_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Integer_Remove_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Integer_Remove_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Vec2i_Set_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::Vec2i_Set_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Vec2i_Set_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Vec2i_Insert_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Vec2i_Insert_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Vec2i_Insert_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Vec2i_Remove_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Vec2i_Remove_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Vec2i_Remove_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Terrain_Set_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::Terrain_Set_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Terrain_Set_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Terrain_Insert_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Terrain_Insert_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Terrain_Insert_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Terrain_Remove_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Terrain_Remove_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Terrain_Remove_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Color_Set_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::Color_Set_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Color_Set_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Color_Insert_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Color_Insert_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Color_Insert_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Color_Remove_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_Color_Remove_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Color_Remove_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::ObjectPath_Set_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::ObjectPath_Set_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::ObjectPath_Set_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_ObjectPath_Insert_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_ObjectPath_Insert_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_ObjectPath_Insert_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_ObjectPath_Remove_Mutation* Arena::CreateMaybeMessage< ::IvionOnline::List_ObjectPath_Remove_Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_ObjectPath_Remove_Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Mutation* Arena::CreateMaybeMessage< ::IvionOnline::Mutation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Mutation >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::GetList* Arena::CreateMaybeMessage< ::IvionOnline::GetList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::GetList >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::FilterDistance* Arena::CreateMaybeMessage< ::IvionOnline::FilterDistance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::FilterDistance >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::SelectMultiple* Arena::CreateMaybeMessage< ::IvionOnline::SelectMultiple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::SelectMultiple >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::SelectExactlyOne* Arena::CreateMaybeMessage< ::IvionOnline::SelectExactlyOne >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::SelectExactlyOne >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::AssertControlOrHeroic* Arena::CreateMaybeMessage< ::IvionOnline::AssertControlOrHeroic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::AssertControlOrHeroic >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::AssertControllerHasPriority* Arena::CreateMaybeMessage< ::IvionOnline::AssertControllerHasPriority >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::AssertControllerHasPriority >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::AssertStackEmptyOrInstant* Arena::CreateMaybeMessage< ::IvionOnline::AssertStackEmptyOrInstant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::AssertStackEmptyOrInstant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::ReduceCost* Arena::CreateMaybeMessage< ::IvionOnline::ReduceCost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::ReduceCost >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::PayCost* Arena::CreateMaybeMessage< ::IvionOnline::PayCost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::PayCost >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::PlayGainResources* Arena::CreateMaybeMessage< ::IvionOnline::PlayGainResources >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::PlayGainResources >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::RefundCost* Arena::CreateMaybeMessage< ::IvionOnline::RefundCost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::RefundCost >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::GainActions* Arena::CreateMaybeMessage< ::IvionOnline::GainActions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::GainActions >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::GainPower* Arena::CreateMaybeMessage< ::IvionOnline::GainPower >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::GainPower >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Move* Arena::CreateMaybeMessage< ::IvionOnline::Move >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Move >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Travel* Arena::CreateMaybeMessage< ::IvionOnline::Travel >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Travel >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Damage* Arena::CreateMaybeMessage< ::IvionOnline::Damage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Damage >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Boolean_Constant* Arena::CreateMaybeMessage< ::IvionOnline::Boolean_Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Boolean_Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Integer_Constant* Arena::CreateMaybeMessage< ::IvionOnline::Integer_Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Integer_Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Vec2i_Constant* Arena::CreateMaybeMessage< ::IvionOnline::Vec2i_Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Vec2i_Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Terrain_Constant* Arena::CreateMaybeMessage< ::IvionOnline::Terrain_Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Terrain_Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Color_Constant* Arena::CreateMaybeMessage< ::IvionOnline::Color_Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Color_Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::ObjectPath_Constant* Arena::CreateMaybeMessage< ::IvionOnline::ObjectPath_Constant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::ObjectPath_Constant >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::Method* Arena::CreateMaybeMessage< ::IvionOnline::Method >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::Method >(arena);
}
template<> PROTOBUF_NOINLINE ::IvionOnline::List_Method* Arena::CreateMaybeMessage< ::IvionOnline::List_Method >(Arena* arena) {
  return Arena::CreateMessageInternal< ::IvionOnline::List_Method >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
