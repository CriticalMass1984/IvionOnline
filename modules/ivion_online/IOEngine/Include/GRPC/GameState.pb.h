// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameState.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_GameState_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_GameState_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_GameState_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_GameState_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[64]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_GameState_2eproto;
namespace IvionOnline {
class AssertControlOrHeroic;
class AssertControlOrHeroicDefaultTypeInternal;
extern AssertControlOrHeroicDefaultTypeInternal _AssertControlOrHeroic_default_instance_;
class AssertControllerHasPriority;
class AssertControllerHasPriorityDefaultTypeInternal;
extern AssertControllerHasPriorityDefaultTypeInternal _AssertControllerHasPriority_default_instance_;
class AssertStackEmptyOrInstant;
class AssertStackEmptyOrInstantDefaultTypeInternal;
extern AssertStackEmptyOrInstantDefaultTypeInternal _AssertStackEmptyOrInstant_default_instance_;
class Boolean;
class BooleanDefaultTypeInternal;
extern BooleanDefaultTypeInternal _Boolean_default_instance_;
class Boolean_Constant;
class Boolean_ConstantDefaultTypeInternal;
extern Boolean_ConstantDefaultTypeInternal _Boolean_Constant_default_instance_;
class Boolean_Set_Mutation;
class Boolean_Set_MutationDefaultTypeInternal;
extern Boolean_Set_MutationDefaultTypeInternal _Boolean_Set_Mutation_default_instance_;
class Card;
class CardDefaultTypeInternal;
extern CardDefaultTypeInternal _Card_default_instance_;
class CardData;
class CardDataDefaultTypeInternal;
extern CardDataDefaultTypeInternal _CardData_default_instance_;
class Color;
class ColorDefaultTypeInternal;
extern ColorDefaultTypeInternal _Color_default_instance_;
class Color_Constant;
class Color_ConstantDefaultTypeInternal;
extern Color_ConstantDefaultTypeInternal _Color_Constant_default_instance_;
class Color_Set_Mutation;
class Color_Set_MutationDefaultTypeInternal;
extern Color_Set_MutationDefaultTypeInternal _Color_Set_Mutation_default_instance_;
class Damage;
class DamageDefaultTypeInternal;
extern DamageDefaultTypeInternal _Damage_default_instance_;
class GainActions;
class GainActionsDefaultTypeInternal;
extern GainActionsDefaultTypeInternal _GainActions_default_instance_;
class GainPower;
class GainPowerDefaultTypeInternal;
extern GainPowerDefaultTypeInternal _GainPower_default_instance_;
class GameState;
class GameStateDefaultTypeInternal;
extern GameStateDefaultTypeInternal _GameState_default_instance_;
class GetList;
class GetListDefaultTypeInternal;
extern GetListDefaultTypeInternal _GetList_default_instance_;
class History;
class HistoryDefaultTypeInternal;
extern HistoryDefaultTypeInternal _History_default_instance_;
class Integer;
class IntegerDefaultTypeInternal;
extern IntegerDefaultTypeInternal _Integer_default_instance_;
class Integer_Constant;
class Integer_ConstantDefaultTypeInternal;
extern Integer_ConstantDefaultTypeInternal _Integer_Constant_default_instance_;
class Integer_Set_Mutation;
class Integer_Set_MutationDefaultTypeInternal;
extern Integer_Set_MutationDefaultTypeInternal _Integer_Set_Mutation_default_instance_;
class List_Boolean;
class List_BooleanDefaultTypeInternal;
extern List_BooleanDefaultTypeInternal _List_Boolean_default_instance_;
class List_Boolean_Insert_Mutation;
class List_Boolean_Insert_MutationDefaultTypeInternal;
extern List_Boolean_Insert_MutationDefaultTypeInternal _List_Boolean_Insert_Mutation_default_instance_;
class List_Boolean_Remove_Mutation;
class List_Boolean_Remove_MutationDefaultTypeInternal;
extern List_Boolean_Remove_MutationDefaultTypeInternal _List_Boolean_Remove_Mutation_default_instance_;
class List_Card;
class List_CardDefaultTypeInternal;
extern List_CardDefaultTypeInternal _List_Card_default_instance_;
class List_CardData;
class List_CardDataDefaultTypeInternal;
extern List_CardDataDefaultTypeInternal _List_CardData_default_instance_;
class List_Color;
class List_ColorDefaultTypeInternal;
extern List_ColorDefaultTypeInternal _List_Color_default_instance_;
class List_Color_Insert_Mutation;
class List_Color_Insert_MutationDefaultTypeInternal;
extern List_Color_Insert_MutationDefaultTypeInternal _List_Color_Insert_Mutation_default_instance_;
class List_Color_Remove_Mutation;
class List_Color_Remove_MutationDefaultTypeInternal;
extern List_Color_Remove_MutationDefaultTypeInternal _List_Color_Remove_Mutation_default_instance_;
class List_GameState;
class List_GameStateDefaultTypeInternal;
extern List_GameStateDefaultTypeInternal _List_GameState_default_instance_;
class List_Integer;
class List_IntegerDefaultTypeInternal;
extern List_IntegerDefaultTypeInternal _List_Integer_default_instance_;
class List_Integer_Insert_Mutation;
class List_Integer_Insert_MutationDefaultTypeInternal;
extern List_Integer_Insert_MutationDefaultTypeInternal _List_Integer_Insert_Mutation_default_instance_;
class List_Integer_Remove_Mutation;
class List_Integer_Remove_MutationDefaultTypeInternal;
extern List_Integer_Remove_MutationDefaultTypeInternal _List_Integer_Remove_Mutation_default_instance_;
class List_Method;
class List_MethodDefaultTypeInternal;
extern List_MethodDefaultTypeInternal _List_Method_default_instance_;
class List_ObjectPath;
class List_ObjectPathDefaultTypeInternal;
extern List_ObjectPathDefaultTypeInternal _List_ObjectPath_default_instance_;
class List_ObjectPath_Insert_Mutation;
class List_ObjectPath_Insert_MutationDefaultTypeInternal;
extern List_ObjectPath_Insert_MutationDefaultTypeInternal _List_ObjectPath_Insert_Mutation_default_instance_;
class List_ObjectPath_Remove_Mutation;
class List_ObjectPath_Remove_MutationDefaultTypeInternal;
extern List_ObjectPath_Remove_MutationDefaultTypeInternal _List_ObjectPath_Remove_Mutation_default_instance_;
class List_Player;
class List_PlayerDefaultTypeInternal;
extern List_PlayerDefaultTypeInternal _List_Player_default_instance_;
class List_Terrain;
class List_TerrainDefaultTypeInternal;
extern List_TerrainDefaultTypeInternal _List_Terrain_default_instance_;
class List_Terrain_Insert_Mutation;
class List_Terrain_Insert_MutationDefaultTypeInternal;
extern List_Terrain_Insert_MutationDefaultTypeInternal _List_Terrain_Insert_Mutation_default_instance_;
class List_Terrain_Remove_Mutation;
class List_Terrain_Remove_MutationDefaultTypeInternal;
extern List_Terrain_Remove_MutationDefaultTypeInternal _List_Terrain_Remove_Mutation_default_instance_;
class List_Tile;
class List_TileDefaultTypeInternal;
extern List_TileDefaultTypeInternal _List_Tile_default_instance_;
class List_Vec2i;
class List_Vec2iDefaultTypeInternal;
extern List_Vec2iDefaultTypeInternal _List_Vec2i_default_instance_;
class List_Vec2i_Insert_Mutation;
class List_Vec2i_Insert_MutationDefaultTypeInternal;
extern List_Vec2i_Insert_MutationDefaultTypeInternal _List_Vec2i_Insert_Mutation_default_instance_;
class List_Vec2i_Remove_Mutation;
class List_Vec2i_Remove_MutationDefaultTypeInternal;
extern List_Vec2i_Remove_MutationDefaultTypeInternal _List_Vec2i_Remove_Mutation_default_instance_;
class Method;
class MethodDefaultTypeInternal;
extern MethodDefaultTypeInternal _Method_default_instance_;
class Move;
class MoveDefaultTypeInternal;
extern MoveDefaultTypeInternal _Move_default_instance_;
class Mutation;
class MutationDefaultTypeInternal;
extern MutationDefaultTypeInternal _Mutation_default_instance_;
class ObjectPath;
class ObjectPathDefaultTypeInternal;
extern ObjectPathDefaultTypeInternal _ObjectPath_default_instance_;
class ObjectPath_Constant;
class ObjectPath_ConstantDefaultTypeInternal;
extern ObjectPath_ConstantDefaultTypeInternal _ObjectPath_Constant_default_instance_;
class ObjectPath_Set_Mutation;
class ObjectPath_Set_MutationDefaultTypeInternal;
extern ObjectPath_Set_MutationDefaultTypeInternal _ObjectPath_Set_Mutation_default_instance_;
class PayCost;
class PayCostDefaultTypeInternal;
extern PayCostDefaultTypeInternal _PayCost_default_instance_;
class PlayGainResources;
class PlayGainResourcesDefaultTypeInternal;
extern PlayGainResourcesDefaultTypeInternal _PlayGainResources_default_instance_;
class Player;
class PlayerDefaultTypeInternal;
extern PlayerDefaultTypeInternal _Player_default_instance_;
class RefundCost;
class RefundCostDefaultTypeInternal;
extern RefundCostDefaultTypeInternal _RefundCost_default_instance_;
class SelectExactlyOne;
class SelectExactlyOneDefaultTypeInternal;
extern SelectExactlyOneDefaultTypeInternal _SelectExactlyOne_default_instance_;
class SelectMultiple;
class SelectMultipleDefaultTypeInternal;
extern SelectMultipleDefaultTypeInternal _SelectMultiple_default_instance_;
class Terrain;
class TerrainDefaultTypeInternal;
extern TerrainDefaultTypeInternal _Terrain_default_instance_;
class Terrain_Constant;
class Terrain_ConstantDefaultTypeInternal;
extern Terrain_ConstantDefaultTypeInternal _Terrain_Constant_default_instance_;
class Terrain_Set_Mutation;
class Terrain_Set_MutationDefaultTypeInternal;
extern Terrain_Set_MutationDefaultTypeInternal _Terrain_Set_Mutation_default_instance_;
class Tile;
class TileDefaultTypeInternal;
extern TileDefaultTypeInternal _Tile_default_instance_;
class Travel;
class TravelDefaultTypeInternal;
extern TravelDefaultTypeInternal _Travel_default_instance_;
class Vec2i;
class Vec2iDefaultTypeInternal;
extern Vec2iDefaultTypeInternal _Vec2i_default_instance_;
class Vec2i_Constant;
class Vec2i_ConstantDefaultTypeInternal;
extern Vec2i_ConstantDefaultTypeInternal _Vec2i_Constant_default_instance_;
class Vec2i_Set_Mutation;
class Vec2i_Set_MutationDefaultTypeInternal;
extern Vec2i_Set_MutationDefaultTypeInternal _Vec2i_Set_Mutation_default_instance_;
}  // namespace IvionOnline
PROTOBUF_NAMESPACE_OPEN
template<> ::IvionOnline::AssertControlOrHeroic* Arena::CreateMaybeMessage<::IvionOnline::AssertControlOrHeroic>(Arena*);
template<> ::IvionOnline::AssertControllerHasPriority* Arena::CreateMaybeMessage<::IvionOnline::AssertControllerHasPriority>(Arena*);
template<> ::IvionOnline::AssertStackEmptyOrInstant* Arena::CreateMaybeMessage<::IvionOnline::AssertStackEmptyOrInstant>(Arena*);
template<> ::IvionOnline::Boolean* Arena::CreateMaybeMessage<::IvionOnline::Boolean>(Arena*);
template<> ::IvionOnline::Boolean_Constant* Arena::CreateMaybeMessage<::IvionOnline::Boolean_Constant>(Arena*);
template<> ::IvionOnline::Boolean_Set_Mutation* Arena::CreateMaybeMessage<::IvionOnline::Boolean_Set_Mutation>(Arena*);
template<> ::IvionOnline::Card* Arena::CreateMaybeMessage<::IvionOnline::Card>(Arena*);
template<> ::IvionOnline::CardData* Arena::CreateMaybeMessage<::IvionOnline::CardData>(Arena*);
template<> ::IvionOnline::Color* Arena::CreateMaybeMessage<::IvionOnline::Color>(Arena*);
template<> ::IvionOnline::Color_Constant* Arena::CreateMaybeMessage<::IvionOnline::Color_Constant>(Arena*);
template<> ::IvionOnline::Color_Set_Mutation* Arena::CreateMaybeMessage<::IvionOnline::Color_Set_Mutation>(Arena*);
template<> ::IvionOnline::Damage* Arena::CreateMaybeMessage<::IvionOnline::Damage>(Arena*);
template<> ::IvionOnline::GainActions* Arena::CreateMaybeMessage<::IvionOnline::GainActions>(Arena*);
template<> ::IvionOnline::GainPower* Arena::CreateMaybeMessage<::IvionOnline::GainPower>(Arena*);
template<> ::IvionOnline::GameState* Arena::CreateMaybeMessage<::IvionOnline::GameState>(Arena*);
template<> ::IvionOnline::GetList* Arena::CreateMaybeMessage<::IvionOnline::GetList>(Arena*);
template<> ::IvionOnline::History* Arena::CreateMaybeMessage<::IvionOnline::History>(Arena*);
template<> ::IvionOnline::Integer* Arena::CreateMaybeMessage<::IvionOnline::Integer>(Arena*);
template<> ::IvionOnline::Integer_Constant* Arena::CreateMaybeMessage<::IvionOnline::Integer_Constant>(Arena*);
template<> ::IvionOnline::Integer_Set_Mutation* Arena::CreateMaybeMessage<::IvionOnline::Integer_Set_Mutation>(Arena*);
template<> ::IvionOnline::List_Boolean* Arena::CreateMaybeMessage<::IvionOnline::List_Boolean>(Arena*);
template<> ::IvionOnline::List_Boolean_Insert_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Boolean_Insert_Mutation>(Arena*);
template<> ::IvionOnline::List_Boolean_Remove_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Boolean_Remove_Mutation>(Arena*);
template<> ::IvionOnline::List_Card* Arena::CreateMaybeMessage<::IvionOnline::List_Card>(Arena*);
template<> ::IvionOnline::List_CardData* Arena::CreateMaybeMessage<::IvionOnline::List_CardData>(Arena*);
template<> ::IvionOnline::List_Color* Arena::CreateMaybeMessage<::IvionOnline::List_Color>(Arena*);
template<> ::IvionOnline::List_Color_Insert_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Color_Insert_Mutation>(Arena*);
template<> ::IvionOnline::List_Color_Remove_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Color_Remove_Mutation>(Arena*);
template<> ::IvionOnline::List_GameState* Arena::CreateMaybeMessage<::IvionOnline::List_GameState>(Arena*);
template<> ::IvionOnline::List_Integer* Arena::CreateMaybeMessage<::IvionOnline::List_Integer>(Arena*);
template<> ::IvionOnline::List_Integer_Insert_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Integer_Insert_Mutation>(Arena*);
template<> ::IvionOnline::List_Integer_Remove_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Integer_Remove_Mutation>(Arena*);
template<> ::IvionOnline::List_Method* Arena::CreateMaybeMessage<::IvionOnline::List_Method>(Arena*);
template<> ::IvionOnline::List_ObjectPath* Arena::CreateMaybeMessage<::IvionOnline::List_ObjectPath>(Arena*);
template<> ::IvionOnline::List_ObjectPath_Insert_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_ObjectPath_Insert_Mutation>(Arena*);
template<> ::IvionOnline::List_ObjectPath_Remove_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_ObjectPath_Remove_Mutation>(Arena*);
template<> ::IvionOnline::List_Player* Arena::CreateMaybeMessage<::IvionOnline::List_Player>(Arena*);
template<> ::IvionOnline::List_Terrain* Arena::CreateMaybeMessage<::IvionOnline::List_Terrain>(Arena*);
template<> ::IvionOnline::List_Terrain_Insert_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Terrain_Insert_Mutation>(Arena*);
template<> ::IvionOnline::List_Terrain_Remove_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Terrain_Remove_Mutation>(Arena*);
template<> ::IvionOnline::List_Tile* Arena::CreateMaybeMessage<::IvionOnline::List_Tile>(Arena*);
template<> ::IvionOnline::List_Vec2i* Arena::CreateMaybeMessage<::IvionOnline::List_Vec2i>(Arena*);
template<> ::IvionOnline::List_Vec2i_Insert_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Vec2i_Insert_Mutation>(Arena*);
template<> ::IvionOnline::List_Vec2i_Remove_Mutation* Arena::CreateMaybeMessage<::IvionOnline::List_Vec2i_Remove_Mutation>(Arena*);
template<> ::IvionOnline::Method* Arena::CreateMaybeMessage<::IvionOnline::Method>(Arena*);
template<> ::IvionOnline::Move* Arena::CreateMaybeMessage<::IvionOnline::Move>(Arena*);
template<> ::IvionOnline::Mutation* Arena::CreateMaybeMessage<::IvionOnline::Mutation>(Arena*);
template<> ::IvionOnline::ObjectPath* Arena::CreateMaybeMessage<::IvionOnline::ObjectPath>(Arena*);
template<> ::IvionOnline::ObjectPath_Constant* Arena::CreateMaybeMessage<::IvionOnline::ObjectPath_Constant>(Arena*);
template<> ::IvionOnline::ObjectPath_Set_Mutation* Arena::CreateMaybeMessage<::IvionOnline::ObjectPath_Set_Mutation>(Arena*);
template<> ::IvionOnline::PayCost* Arena::CreateMaybeMessage<::IvionOnline::PayCost>(Arena*);
template<> ::IvionOnline::PlayGainResources* Arena::CreateMaybeMessage<::IvionOnline::PlayGainResources>(Arena*);
template<> ::IvionOnline::Player* Arena::CreateMaybeMessage<::IvionOnline::Player>(Arena*);
template<> ::IvionOnline::RefundCost* Arena::CreateMaybeMessage<::IvionOnline::RefundCost>(Arena*);
template<> ::IvionOnline::SelectExactlyOne* Arena::CreateMaybeMessage<::IvionOnline::SelectExactlyOne>(Arena*);
template<> ::IvionOnline::SelectMultiple* Arena::CreateMaybeMessage<::IvionOnline::SelectMultiple>(Arena*);
template<> ::IvionOnline::Terrain* Arena::CreateMaybeMessage<::IvionOnline::Terrain>(Arena*);
template<> ::IvionOnline::Terrain_Constant* Arena::CreateMaybeMessage<::IvionOnline::Terrain_Constant>(Arena*);
template<> ::IvionOnline::Terrain_Set_Mutation* Arena::CreateMaybeMessage<::IvionOnline::Terrain_Set_Mutation>(Arena*);
template<> ::IvionOnline::Tile* Arena::CreateMaybeMessage<::IvionOnline::Tile>(Arena*);
template<> ::IvionOnline::Travel* Arena::CreateMaybeMessage<::IvionOnline::Travel>(Arena*);
template<> ::IvionOnline::Vec2i* Arena::CreateMaybeMessage<::IvionOnline::Vec2i>(Arena*);
template<> ::IvionOnline::Vec2i_Constant* Arena::CreateMaybeMessage<::IvionOnline::Vec2i_Constant>(Arena*);
template<> ::IvionOnline::Vec2i_Set_Mutation* Arena::CreateMaybeMessage<::IvionOnline::Vec2i_Set_Mutation>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace IvionOnline {

enum Terrain_Terrain_Type : int {
  Terrain_Terrain_Type_TERRAIN_TYPE_NONE = 0,
  Terrain_Terrain_Type_TERRAIN_TYPE_DIFFICULT = 1,
  Terrain_Terrain_Type_TERRAIN_TYPE_ENCHANTED = 2,
  Terrain_Terrain_Type_Terrain_Terrain_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Terrain_Terrain_Type_Terrain_Terrain_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Terrain_Terrain_Type_IsValid(int value);
constexpr Terrain_Terrain_Type Terrain_Terrain_Type_Terrain_Type_MIN = Terrain_Terrain_Type_TERRAIN_TYPE_NONE;
constexpr Terrain_Terrain_Type Terrain_Terrain_Type_Terrain_Type_MAX = Terrain_Terrain_Type_TERRAIN_TYPE_ENCHANTED;
constexpr int Terrain_Terrain_Type_Terrain_Type_ARRAYSIZE = Terrain_Terrain_Type_Terrain_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Terrain_Terrain_Type_descriptor();
template<typename T>
inline const std::string& Terrain_Terrain_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Terrain_Terrain_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Terrain_Terrain_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Terrain_Terrain_Type_descriptor(), enum_t_value);
}
inline bool Terrain_Terrain_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Terrain_Terrain_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Terrain_Terrain_Type>(
    Terrain_Terrain_Type_descriptor(), name, value);
}
enum Color_Color_Type : int {
  Color_Color_Type_COLOR_NONE = 0,
  Color_Color_Type_COLOR_GRAY = 1,
  Color_Color_Type_COLOR_BLACK = 2,
  Color_Color_Type_COLOR_RED = 3,
  Color_Color_Type_COLOR_GREEN = 4,
  Color_Color_Type_COLOR_BLUE = 5,
  Color_Color_Type_COLOR_WHITE = 6,
  Color_Color_Type_Color_Color_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Color_Color_Type_Color_Color_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool Color_Color_Type_IsValid(int value);
constexpr Color_Color_Type Color_Color_Type_Color_Type_MIN = Color_Color_Type_COLOR_NONE;
constexpr Color_Color_Type Color_Color_Type_Color_Type_MAX = Color_Color_Type_COLOR_WHITE;
constexpr int Color_Color_Type_Color_Type_ARRAYSIZE = Color_Color_Type_Color_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Color_Color_Type_descriptor();
template<typename T>
inline const std::string& Color_Color_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Color_Color_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Color_Color_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Color_Color_Type_descriptor(), enum_t_value);
}
inline bool Color_Color_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Color_Color_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Color_Color_Type>(
    Color_Color_Type_descriptor(), name, value);
}
enum ObjectType : int {
  TYPE_BOOLEAN = 0,
  TYPE_LIST_BOOLEAN = 1,
  TYPE_LIST_REF_BOOLEAN = 2,
  TYPE_INTEGER = 3,
  TYPE_LIST_INTEGER = 4,
  TYPE_LIST_REF_INTEGER = 5,
  TYPE_VEC2I = 6,
  TYPE_LIST_VEC2I = 7,
  TYPE_LIST_REF_VEC2I = 8,
  TYPE_TERRAIN = 9,
  TYPE_LIST_TERRAIN = 10,
  TYPE_LIST_REF_TERRAIN = 11,
  TYPE_COLOR = 12,
  TYPE_LIST_COLOR = 13,
  TYPE_LIST_REF_COLOR = 14,
  TYPE_OBJECTPATH = 15,
  TYPE_LIST_OBJECTPATH = 16,
  TYPE_LIST_REF_OBJECTPATH = 17,
  TYPE_PLAYER = 18,
  TYPE_LIST_PLAYER = 19,
  TYPE_LIST_REF_PLAYER = 20,
  TYPE_CARD = 21,
  TYPE_LIST_CARD = 22,
  TYPE_LIST_REF_CARD = 23,
  TYPE_CARDDATA = 24,
  TYPE_LIST_CARDDATA = 25,
  TYPE_LIST_REF_CARDDATA = 26,
  TYPE_TILE = 27,
  TYPE_LIST_TILE = 28,
  TYPE_LIST_REF_TILE = 29,
  TYPE_GAMESTATE = 30,
  TYPE_LIST_GAMESTATE = 31,
  TYPE_LIST_REF_GAMESTATE = 32,
  ObjectType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ObjectType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool ObjectType_IsValid(int value);
constexpr ObjectType ObjectType_MIN = TYPE_BOOLEAN;
constexpr ObjectType ObjectType_MAX = TYPE_LIST_REF_GAMESTATE;
constexpr int ObjectType_ARRAYSIZE = ObjectType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectType_descriptor();
template<typename T>
inline const std::string& ObjectType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ObjectType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ObjectType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ObjectType_descriptor(), enum_t_value);
}
inline bool ObjectType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ObjectType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ObjectType>(
    ObjectType_descriptor(), name, value);
}
// ===================================================================

class History PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.History) */ {
 public:
  inline History() : History(nullptr) {}
  virtual ~History();

  History(const History& from);
  History(History&& from) noexcept
    : History() {
    *this = ::std::move(from);
  }

  inline History& operator=(const History& from) {
    CopyFrom(from);
    return *this;
  }
  inline History& operator=(History&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const History& default_instance();

  static inline const History* internal_default_instance() {
    return reinterpret_cast<const History*>(
               &_History_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(History& a, History& b) {
    a.Swap(&b);
  }
  inline void Swap(History* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(History* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline History* New() const final {
    return CreateMaybeMessage<History>(nullptr);
  }

  History* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<History>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const History& from);
  void MergeFrom(const History& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(History* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.History";
  }
  protected:
  explicit History(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMutationsFieldNumber = 1,
    kBranchesFieldNumber = 2,
    kIsGoodFieldNumber = 3,
  };
  // repeated .IvionOnline.Mutation Mutations = 1;
  int mutations_size() const;
  private:
  int _internal_mutations_size() const;
  public:
  void clear_mutations();
  ::IvionOnline::Mutation* mutable_mutations(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Mutation >*
      mutable_mutations();
  private:
  const ::IvionOnline::Mutation& _internal_mutations(int index) const;
  ::IvionOnline::Mutation* _internal_add_mutations();
  public:
  const ::IvionOnline::Mutation& mutations(int index) const;
  ::IvionOnline::Mutation* add_mutations();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Mutation >&
      mutations() const;

  // repeated .IvionOnline.History Branches = 2;
  int branches_size() const;
  private:
  int _internal_branches_size() const;
  public:
  void clear_branches();
  ::IvionOnline::History* mutable_branches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::History >*
      mutable_branches();
  private:
  const ::IvionOnline::History& _internal_branches(int index) const;
  ::IvionOnline::History* _internal_add_branches();
  public:
  const ::IvionOnline::History& branches(int index) const;
  ::IvionOnline::History* add_branches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::History >&
      branches() const;

  // bool Is_Good = 3;
  void clear_is_good();
  bool is_good() const;
  void set_is_good(bool value);
  private:
  bool _internal_is_good() const;
  void _internal_set_is_good(bool value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.History)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Mutation > mutations_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::History > branches_;
  bool is_good_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Boolean PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Boolean) */ {
 public:
  inline Boolean() : Boolean(nullptr) {}
  virtual ~Boolean();

  Boolean(const Boolean& from);
  Boolean(Boolean&& from) noexcept
    : Boolean() {
    *this = ::std::move(from);
  }

  inline Boolean& operator=(const Boolean& from) {
    CopyFrom(from);
    return *this;
  }
  inline Boolean& operator=(Boolean&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Boolean& default_instance();

  static inline const Boolean* internal_default_instance() {
    return reinterpret_cast<const Boolean*>(
               &_Boolean_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Boolean& a, Boolean& b) {
    a.Swap(&b);
  }
  inline void Swap(Boolean* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Boolean* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Boolean* New() const final {
    return CreateMaybeMessage<Boolean>(nullptr);
  }

  Boolean* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Boolean>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Boolean& from);
  void MergeFrom(const Boolean& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Boolean* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Boolean";
  }
  protected:
  explicit Boolean(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // bool Value = 1;
  void clear_value();
  bool value() const;
  void set_value(bool value);
  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Boolean)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  bool value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Boolean PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Boolean) */ {
 public:
  inline List_Boolean() : List_Boolean(nullptr) {}
  virtual ~List_Boolean();

  List_Boolean(const List_Boolean& from);
  List_Boolean(List_Boolean&& from) noexcept
    : List_Boolean() {
    *this = ::std::move(from);
  }

  inline List_Boolean& operator=(const List_Boolean& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Boolean& operator=(List_Boolean&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Boolean& default_instance();

  static inline const List_Boolean* internal_default_instance() {
    return reinterpret_cast<const List_Boolean*>(
               &_List_Boolean_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(List_Boolean& a, List_Boolean& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Boolean* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Boolean* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Boolean* New() const final {
    return CreateMaybeMessage<List_Boolean>(nullptr);
  }

  List_Boolean* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Boolean>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Boolean& from);
  void MergeFrom(const List_Boolean& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Boolean* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Boolean";
  }
  protected:
  explicit List_Boolean(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Boolean element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Boolean* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Boolean >*
      mutable_element();
  private:
  const ::IvionOnline::Boolean& _internal_element(int index) const;
  ::IvionOnline::Boolean* _internal_add_element();
  public:
  const ::IvionOnline::Boolean& element(int index) const;
  ::IvionOnline::Boolean* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Boolean >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Boolean)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Boolean > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Integer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Integer) */ {
 public:
  inline Integer() : Integer(nullptr) {}
  virtual ~Integer();

  Integer(const Integer& from);
  Integer(Integer&& from) noexcept
    : Integer() {
    *this = ::std::move(from);
  }

  inline Integer& operator=(const Integer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Integer& operator=(Integer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Integer& default_instance();

  static inline const Integer* internal_default_instance() {
    return reinterpret_cast<const Integer*>(
               &_Integer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Integer& a, Integer& b) {
    a.Swap(&b);
  }
  inline void Swap(Integer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Integer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Integer* New() const final {
    return CreateMaybeMessage<Integer>(nullptr);
  }

  Integer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Integer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Integer& from);
  void MergeFrom(const Integer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Integer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Integer";
  }
  protected:
  explicit Integer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
    kValueFieldNumber = 1,
  };
  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // int32 Value = 1;
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Integer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Integer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Integer) */ {
 public:
  inline List_Integer() : List_Integer(nullptr) {}
  virtual ~List_Integer();

  List_Integer(const List_Integer& from);
  List_Integer(List_Integer&& from) noexcept
    : List_Integer() {
    *this = ::std::move(from);
  }

  inline List_Integer& operator=(const List_Integer& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Integer& operator=(List_Integer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Integer& default_instance();

  static inline const List_Integer* internal_default_instance() {
    return reinterpret_cast<const List_Integer*>(
               &_List_Integer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(List_Integer& a, List_Integer& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Integer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Integer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Integer* New() const final {
    return CreateMaybeMessage<List_Integer>(nullptr);
  }

  List_Integer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Integer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Integer& from);
  void MergeFrom(const List_Integer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Integer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Integer";
  }
  protected:
  explicit List_Integer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Integer element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Integer* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Integer >*
      mutable_element();
  private:
  const ::IvionOnline::Integer& _internal_element(int index) const;
  ::IvionOnline::Integer* _internal_add_element();
  public:
  const ::IvionOnline::Integer& element(int index) const;
  ::IvionOnline::Integer* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Integer >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Integer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Integer > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Vec2i PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Vec2i) */ {
 public:
  inline Vec2i() : Vec2i(nullptr) {}
  virtual ~Vec2i();

  Vec2i(const Vec2i& from);
  Vec2i(Vec2i&& from) noexcept
    : Vec2i() {
    *this = ::std::move(from);
  }

  inline Vec2i& operator=(const Vec2i& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec2i& operator=(Vec2i&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vec2i& default_instance();

  static inline const Vec2i* internal_default_instance() {
    return reinterpret_cast<const Vec2i*>(
               &_Vec2i_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(Vec2i& a, Vec2i& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec2i* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec2i* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vec2i* New() const final {
    return CreateMaybeMessage<Vec2i>(nullptr);
  }

  Vec2i* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vec2i>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vec2i& from);
  void MergeFrom(const Vec2i& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec2i* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Vec2i";
  }
  protected:
  explicit Vec2i(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kAbsPathFieldNumber = 3,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // string Name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 3;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // int32 x = 1;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 y = 2;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Vec2i)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Vec2i PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Vec2i) */ {
 public:
  inline List_Vec2i() : List_Vec2i(nullptr) {}
  virtual ~List_Vec2i();

  List_Vec2i(const List_Vec2i& from);
  List_Vec2i(List_Vec2i&& from) noexcept
    : List_Vec2i() {
    *this = ::std::move(from);
  }

  inline List_Vec2i& operator=(const List_Vec2i& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Vec2i& operator=(List_Vec2i&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Vec2i& default_instance();

  static inline const List_Vec2i* internal_default_instance() {
    return reinterpret_cast<const List_Vec2i*>(
               &_List_Vec2i_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(List_Vec2i& a, List_Vec2i& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Vec2i* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Vec2i* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Vec2i* New() const final {
    return CreateMaybeMessage<List_Vec2i>(nullptr);
  }

  List_Vec2i* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Vec2i>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Vec2i& from);
  void MergeFrom(const List_Vec2i& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Vec2i* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Vec2i";
  }
  protected:
  explicit List_Vec2i(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Vec2i element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Vec2i* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Vec2i >*
      mutable_element();
  private:
  const ::IvionOnline::Vec2i& _internal_element(int index) const;
  ::IvionOnline::Vec2i* _internal_add_element();
  public:
  const ::IvionOnline::Vec2i& element(int index) const;
  ::IvionOnline::Vec2i* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Vec2i >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Vec2i)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Vec2i > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Terrain PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Terrain) */ {
 public:
  inline Terrain() : Terrain(nullptr) {}
  virtual ~Terrain();

  Terrain(const Terrain& from);
  Terrain(Terrain&& from) noexcept
    : Terrain() {
    *this = ::std::move(from);
  }

  inline Terrain& operator=(const Terrain& from) {
    CopyFrom(from);
    return *this;
  }
  inline Terrain& operator=(Terrain&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Terrain& default_instance();

  static inline const Terrain* internal_default_instance() {
    return reinterpret_cast<const Terrain*>(
               &_Terrain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(Terrain& a, Terrain& b) {
    a.Swap(&b);
  }
  inline void Swap(Terrain* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Terrain* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Terrain* New() const final {
    return CreateMaybeMessage<Terrain>(nullptr);
  }

  Terrain* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Terrain>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Terrain& from);
  void MergeFrom(const Terrain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Terrain* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Terrain";
  }
  protected:
  explicit Terrain(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Terrain_Terrain_Type Terrain_Type;
  static constexpr Terrain_Type TERRAIN_TYPE_NONE =
    Terrain_Terrain_Type_TERRAIN_TYPE_NONE;
  static constexpr Terrain_Type TERRAIN_TYPE_DIFFICULT =
    Terrain_Terrain_Type_TERRAIN_TYPE_DIFFICULT;
  static constexpr Terrain_Type TERRAIN_TYPE_ENCHANTED =
    Terrain_Terrain_Type_TERRAIN_TYPE_ENCHANTED;
  static inline bool Terrain_Type_IsValid(int value) {
    return Terrain_Terrain_Type_IsValid(value);
  }
  static constexpr Terrain_Type Terrain_Type_MIN =
    Terrain_Terrain_Type_Terrain_Type_MIN;
  static constexpr Terrain_Type Terrain_Type_MAX =
    Terrain_Terrain_Type_Terrain_Type_MAX;
  static constexpr int Terrain_Type_ARRAYSIZE =
    Terrain_Terrain_Type_Terrain_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Terrain_Type_descriptor() {
    return Terrain_Terrain_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Terrain_Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Terrain_Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Terrain_Type_Name.");
    return Terrain_Terrain_Type_Name(enum_t_value);
  }
  static inline bool Terrain_Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Terrain_Type* value) {
    return Terrain_Terrain_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kAbsPathFieldNumber = 3,
    kValueFieldNumber = 1,
  };
  // string Name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 3;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // .IvionOnline.Terrain.Terrain_Type Value = 1;
  void clear_value();
  ::IvionOnline::Terrain_Terrain_Type value() const;
  void set_value(::IvionOnline::Terrain_Terrain_Type value);
  private:
  ::IvionOnline::Terrain_Terrain_Type _internal_value() const;
  void _internal_set_value(::IvionOnline::Terrain_Terrain_Type value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Terrain)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  int value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Terrain PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Terrain) */ {
 public:
  inline List_Terrain() : List_Terrain(nullptr) {}
  virtual ~List_Terrain();

  List_Terrain(const List_Terrain& from);
  List_Terrain(List_Terrain&& from) noexcept
    : List_Terrain() {
    *this = ::std::move(from);
  }

  inline List_Terrain& operator=(const List_Terrain& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Terrain& operator=(List_Terrain&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Terrain& default_instance();

  static inline const List_Terrain* internal_default_instance() {
    return reinterpret_cast<const List_Terrain*>(
               &_List_Terrain_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(List_Terrain& a, List_Terrain& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Terrain* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Terrain* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Terrain* New() const final {
    return CreateMaybeMessage<List_Terrain>(nullptr);
  }

  List_Terrain* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Terrain>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Terrain& from);
  void MergeFrom(const List_Terrain& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Terrain* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Terrain";
  }
  protected:
  explicit List_Terrain(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Terrain element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Terrain* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Terrain >*
      mutable_element();
  private:
  const ::IvionOnline::Terrain& _internal_element(int index) const;
  ::IvionOnline::Terrain* _internal_add_element();
  public:
  const ::IvionOnline::Terrain& element(int index) const;
  ::IvionOnline::Terrain* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Terrain >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Terrain)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Terrain > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Color PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Color) */ {
 public:
  inline Color() : Color(nullptr) {}
  virtual ~Color();

  Color(const Color& from);
  Color(Color&& from) noexcept
    : Color() {
    *this = ::std::move(from);
  }

  inline Color& operator=(const Color& from) {
    CopyFrom(from);
    return *this;
  }
  inline Color& operator=(Color&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Color& default_instance();

  static inline const Color* internal_default_instance() {
    return reinterpret_cast<const Color*>(
               &_Color_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(Color& a, Color& b) {
    a.Swap(&b);
  }
  inline void Swap(Color* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Color* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Color* New() const final {
    return CreateMaybeMessage<Color>(nullptr);
  }

  Color* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Color>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Color& from);
  void MergeFrom(const Color& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Color* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Color";
  }
  protected:
  explicit Color(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef Color_Color_Type Color_Type;
  static constexpr Color_Type COLOR_NONE =
    Color_Color_Type_COLOR_NONE;
  static constexpr Color_Type COLOR_GRAY =
    Color_Color_Type_COLOR_GRAY;
  static constexpr Color_Type COLOR_BLACK =
    Color_Color_Type_COLOR_BLACK;
  static constexpr Color_Type COLOR_RED =
    Color_Color_Type_COLOR_RED;
  static constexpr Color_Type COLOR_GREEN =
    Color_Color_Type_COLOR_GREEN;
  static constexpr Color_Type COLOR_BLUE =
    Color_Color_Type_COLOR_BLUE;
  static constexpr Color_Type COLOR_WHITE =
    Color_Color_Type_COLOR_WHITE;
  static inline bool Color_Type_IsValid(int value) {
    return Color_Color_Type_IsValid(value);
  }
  static constexpr Color_Type Color_Type_MIN =
    Color_Color_Type_Color_Type_MIN;
  static constexpr Color_Type Color_Type_MAX =
    Color_Color_Type_Color_Type_MAX;
  static constexpr int Color_Type_ARRAYSIZE =
    Color_Color_Type_Color_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Color_Type_descriptor() {
    return Color_Color_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Color_Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Color_Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Color_Type_Name.");
    return Color_Color_Type_Name(enum_t_value);
  }
  static inline bool Color_Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Color_Type* value) {
    return Color_Color_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kAbsPathFieldNumber = 3,
    kValueFieldNumber = 1,
  };
  // string Name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 3;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // .IvionOnline.Color.Color_Type Value = 1;
  void clear_value();
  ::IvionOnline::Color_Color_Type value() const;
  void set_value(::IvionOnline::Color_Color_Type value);
  private:
  ::IvionOnline::Color_Color_Type _internal_value() const;
  void _internal_set_value(::IvionOnline::Color_Color_Type value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Color)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  int value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Color PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Color) */ {
 public:
  inline List_Color() : List_Color(nullptr) {}
  virtual ~List_Color();

  List_Color(const List_Color& from);
  List_Color(List_Color&& from) noexcept
    : List_Color() {
    *this = ::std::move(from);
  }

  inline List_Color& operator=(const List_Color& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Color& operator=(List_Color&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Color& default_instance();

  static inline const List_Color* internal_default_instance() {
    return reinterpret_cast<const List_Color*>(
               &_List_Color_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(List_Color& a, List_Color& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Color* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Color* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Color* New() const final {
    return CreateMaybeMessage<List_Color>(nullptr);
  }

  List_Color* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Color>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Color& from);
  void MergeFrom(const List_Color& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Color* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Color";
  }
  protected:
  explicit List_Color(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Color element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Color* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Color >*
      mutable_element();
  private:
  const ::IvionOnline::Color& _internal_element(int index) const;
  ::IvionOnline::Color* _internal_add_element();
  public:
  const ::IvionOnline::Color& element(int index) const;
  ::IvionOnline::Color* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Color >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Color)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Color > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class ObjectPath PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.ObjectPath) */ {
 public:
  inline ObjectPath() : ObjectPath(nullptr) {}
  virtual ~ObjectPath();

  ObjectPath(const ObjectPath& from);
  ObjectPath(ObjectPath&& from) noexcept
    : ObjectPath() {
    *this = ::std::move(from);
  }

  inline ObjectPath& operator=(const ObjectPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectPath& operator=(ObjectPath&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectPath& default_instance();

  static inline const ObjectPath* internal_default_instance() {
    return reinterpret_cast<const ObjectPath*>(
               &_ObjectPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ObjectPath& a, ObjectPath& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectPath* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectPath* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectPath* New() const final {
    return CreateMaybeMessage<ObjectPath>(nullptr);
  }

  ObjectPath* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectPath>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectPath& from);
  void MergeFrom(const ObjectPath& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectPath* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.ObjectPath";
  }
  protected:
  explicit ObjectPath(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kObjectTypeFieldNumber = 2,
  };
  // repeated string Path = 1;
  int path_size() const;
  private:
  int _internal_path_size() const;
  public:
  void clear_path();
  const std::string& path(int index) const;
  std::string* mutable_path(int index);
  void set_path(int index, const std::string& value);
  void set_path(int index, std::string&& value);
  void set_path(int index, const char* value);
  void set_path(int index, const char* value, size_t size);
  std::string* add_path();
  void add_path(const std::string& value);
  void add_path(std::string&& value);
  void add_path(const char* value);
  void add_path(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& path() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_path();
  private:
  const std::string& _internal_path(int index) const;
  std::string* _internal_add_path();
  public:

  // .IvionOnline.ObjectType Object_Type = 2;
  void clear_object_type();
  ::IvionOnline::ObjectType object_type() const;
  void set_object_type(::IvionOnline::ObjectType value);
  private:
  ::IvionOnline::ObjectType _internal_object_type() const;
  void _internal_set_object_type(::IvionOnline::ObjectType value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.ObjectPath)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> path_;
  int object_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_ObjectPath PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_ObjectPath) */ {
 public:
  inline List_ObjectPath() : List_ObjectPath(nullptr) {}
  virtual ~List_ObjectPath();

  List_ObjectPath(const List_ObjectPath& from);
  List_ObjectPath(List_ObjectPath&& from) noexcept
    : List_ObjectPath() {
    *this = ::std::move(from);
  }

  inline List_ObjectPath& operator=(const List_ObjectPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_ObjectPath& operator=(List_ObjectPath&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_ObjectPath& default_instance();

  static inline const List_ObjectPath* internal_default_instance() {
    return reinterpret_cast<const List_ObjectPath*>(
               &_List_ObjectPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(List_ObjectPath& a, List_ObjectPath& b) {
    a.Swap(&b);
  }
  inline void Swap(List_ObjectPath* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_ObjectPath* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_ObjectPath* New() const final {
    return CreateMaybeMessage<List_ObjectPath>(nullptr);
  }

  List_ObjectPath* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_ObjectPath>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_ObjectPath& from);
  void MergeFrom(const List_ObjectPath& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_ObjectPath* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_ObjectPath";
  }
  protected:
  explicit List_ObjectPath(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.ObjectPath element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::ObjectPath* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::ObjectPath >*
      mutable_element();
  private:
  const ::IvionOnline::ObjectPath& _internal_element(int index) const;
  ::IvionOnline::ObjectPath* _internal_add_element();
  public:
  const ::IvionOnline::ObjectPath& element(int index) const;
  ::IvionOnline::ObjectPath* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::ObjectPath >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_ObjectPath)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::ObjectPath > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Player PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Player) */ {
 public:
  inline Player() : Player(nullptr) {}
  virtual ~Player();

  Player(const Player& from);
  Player(Player&& from) noexcept
    : Player() {
    *this = ::std::move(from);
  }

  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player& operator=(Player&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Player& default_instance();

  static inline const Player* internal_default_instance() {
    return reinterpret_cast<const Player*>(
               &_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(Player& a, Player& b) {
    a.Swap(&b);
  }
  inline void Swap(Player* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Player* New() const final {
    return CreateMaybeMessage<Player>(nullptr);
  }

  Player* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Player>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Player& from);
  void MergeFrom(const Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Player* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Player";
  }
  protected:
  explicit Player(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUIDFieldNumber = 1,
    kIndexStrFieldNumber = 3,
    kDisplayNameFieldNumber = 4,
    kNameFieldNumber = 24,
    kHealthFieldNumber = 5,
    kActionsFieldNumber = 6,
    kPowerFieldNumber = 7,
    kInitiativeFieldNumber = 8,
    kSlowFieldNumber = 9,
    kSilenceFieldNumber = 10,
    kDisarmFieldNumber = 11,
    kPositionFieldNumber = 12,
    kHandFieldNumber = 13,
    kDeckFieldNumber = 14,
    kDiscardFieldNumber = 15,
    kFeatsFieldNumber = 16,
    kMaxHealthFieldNumber = 17,
    kMaxActionsFieldNumber = 18,
    kMaxPowerFieldNumber = 19,
    kMaxSlowFieldNumber = 20,
    kMaxSilenceFieldNumber = 21,
    kMaxDisarmFieldNumber = 22,
    kAbsPathFieldNumber = 23,
    kIndexFieldNumber = 2,
  };
  // string UID = 1;
  void clear_uid();
  const std::string& uid() const;
  void set_uid(const std::string& value);
  void set_uid(std::string&& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  std::string* mutable_uid();
  std::string* release_uid();
  void set_allocated_uid(std::string* uid);
  private:
  const std::string& _internal_uid() const;
  void _internal_set_uid(const std::string& value);
  std::string* _internal_mutable_uid();
  public:

  // string IndexStr = 3;
  void clear_indexstr();
  const std::string& indexstr() const;
  void set_indexstr(const std::string& value);
  void set_indexstr(std::string&& value);
  void set_indexstr(const char* value);
  void set_indexstr(const char* value, size_t size);
  std::string* mutable_indexstr();
  std::string* release_indexstr();
  void set_allocated_indexstr(std::string* indexstr);
  private:
  const std::string& _internal_indexstr() const;
  void _internal_set_indexstr(const std::string& value);
  std::string* _internal_mutable_indexstr();
  public:

  // string DisplayName = 4;
  void clear_displayname();
  const std::string& displayname() const;
  void set_displayname(const std::string& value);
  void set_displayname(std::string&& value);
  void set_displayname(const char* value);
  void set_displayname(const char* value, size_t size);
  std::string* mutable_displayname();
  std::string* release_displayname();
  void set_allocated_displayname(std::string* displayname);
  private:
  const std::string& _internal_displayname() const;
  void _internal_set_displayname(const std::string& value);
  std::string* _internal_mutable_displayname();
  public:

  // string Name = 24;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.Integer Health = 5;
  bool has_health() const;
  private:
  bool _internal_has_health() const;
  public:
  void clear_health();
  const ::IvionOnline::Integer& health() const;
  ::IvionOnline::Integer* release_health();
  ::IvionOnline::Integer* mutable_health();
  void set_allocated_health(::IvionOnline::Integer* health);
  private:
  const ::IvionOnline::Integer& _internal_health() const;
  ::IvionOnline::Integer* _internal_mutable_health();
  public:
  void unsafe_arena_set_allocated_health(
      ::IvionOnline::Integer* health);
  ::IvionOnline::Integer* unsafe_arena_release_health();

  // .IvionOnline.Integer Actions = 6;
  bool has_actions() const;
  private:
  bool _internal_has_actions() const;
  public:
  void clear_actions();
  const ::IvionOnline::Integer& actions() const;
  ::IvionOnline::Integer* release_actions();
  ::IvionOnline::Integer* mutable_actions();
  void set_allocated_actions(::IvionOnline::Integer* actions);
  private:
  const ::IvionOnline::Integer& _internal_actions() const;
  ::IvionOnline::Integer* _internal_mutable_actions();
  public:
  void unsafe_arena_set_allocated_actions(
      ::IvionOnline::Integer* actions);
  ::IvionOnline::Integer* unsafe_arena_release_actions();

  // .IvionOnline.Integer Power = 7;
  bool has_power() const;
  private:
  bool _internal_has_power() const;
  public:
  void clear_power();
  const ::IvionOnline::Integer& power() const;
  ::IvionOnline::Integer* release_power();
  ::IvionOnline::Integer* mutable_power();
  void set_allocated_power(::IvionOnline::Integer* power);
  private:
  const ::IvionOnline::Integer& _internal_power() const;
  ::IvionOnline::Integer* _internal_mutable_power();
  public:
  void unsafe_arena_set_allocated_power(
      ::IvionOnline::Integer* power);
  ::IvionOnline::Integer* unsafe_arena_release_power();

  // .IvionOnline.Integer Initiative = 8;
  bool has_initiative() const;
  private:
  bool _internal_has_initiative() const;
  public:
  void clear_initiative();
  const ::IvionOnline::Integer& initiative() const;
  ::IvionOnline::Integer* release_initiative();
  ::IvionOnline::Integer* mutable_initiative();
  void set_allocated_initiative(::IvionOnline::Integer* initiative);
  private:
  const ::IvionOnline::Integer& _internal_initiative() const;
  ::IvionOnline::Integer* _internal_mutable_initiative();
  public:
  void unsafe_arena_set_allocated_initiative(
      ::IvionOnline::Integer* initiative);
  ::IvionOnline::Integer* unsafe_arena_release_initiative();

  // .IvionOnline.Integer Slow = 9;
  bool has_slow() const;
  private:
  bool _internal_has_slow() const;
  public:
  void clear_slow();
  const ::IvionOnline::Integer& slow() const;
  ::IvionOnline::Integer* release_slow();
  ::IvionOnline::Integer* mutable_slow();
  void set_allocated_slow(::IvionOnline::Integer* slow);
  private:
  const ::IvionOnline::Integer& _internal_slow() const;
  ::IvionOnline::Integer* _internal_mutable_slow();
  public:
  void unsafe_arena_set_allocated_slow(
      ::IvionOnline::Integer* slow);
  ::IvionOnline::Integer* unsafe_arena_release_slow();

  // .IvionOnline.Integer Silence = 10;
  bool has_silence() const;
  private:
  bool _internal_has_silence() const;
  public:
  void clear_silence();
  const ::IvionOnline::Integer& silence() const;
  ::IvionOnline::Integer* release_silence();
  ::IvionOnline::Integer* mutable_silence();
  void set_allocated_silence(::IvionOnline::Integer* silence);
  private:
  const ::IvionOnline::Integer& _internal_silence() const;
  ::IvionOnline::Integer* _internal_mutable_silence();
  public:
  void unsafe_arena_set_allocated_silence(
      ::IvionOnline::Integer* silence);
  ::IvionOnline::Integer* unsafe_arena_release_silence();

  // .IvionOnline.Integer Disarm = 11;
  bool has_disarm() const;
  private:
  bool _internal_has_disarm() const;
  public:
  void clear_disarm();
  const ::IvionOnline::Integer& disarm() const;
  ::IvionOnline::Integer* release_disarm();
  ::IvionOnline::Integer* mutable_disarm();
  void set_allocated_disarm(::IvionOnline::Integer* disarm);
  private:
  const ::IvionOnline::Integer& _internal_disarm() const;
  ::IvionOnline::Integer* _internal_mutable_disarm();
  public:
  void unsafe_arena_set_allocated_disarm(
      ::IvionOnline::Integer* disarm);
  ::IvionOnline::Integer* unsafe_arena_release_disarm();

  // .IvionOnline.Vec2i Position = 12;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::IvionOnline::Vec2i& position() const;
  ::IvionOnline::Vec2i* release_position();
  ::IvionOnline::Vec2i* mutable_position();
  void set_allocated_position(::IvionOnline::Vec2i* position);
  private:
  const ::IvionOnline::Vec2i& _internal_position() const;
  ::IvionOnline::Vec2i* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::IvionOnline::Vec2i* position);
  ::IvionOnline::Vec2i* unsafe_arena_release_position();

  // .IvionOnline.List_ObjectPath Hand = 13;
  bool has_hand() const;
  private:
  bool _internal_has_hand() const;
  public:
  void clear_hand();
  const ::IvionOnline::List_ObjectPath& hand() const;
  ::IvionOnline::List_ObjectPath* release_hand();
  ::IvionOnline::List_ObjectPath* mutable_hand();
  void set_allocated_hand(::IvionOnline::List_ObjectPath* hand);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_hand() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_hand();
  public:
  void unsafe_arena_set_allocated_hand(
      ::IvionOnline::List_ObjectPath* hand);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_hand();

  // .IvionOnline.List_ObjectPath Deck = 14;
  bool has_deck() const;
  private:
  bool _internal_has_deck() const;
  public:
  void clear_deck();
  const ::IvionOnline::List_ObjectPath& deck() const;
  ::IvionOnline::List_ObjectPath* release_deck();
  ::IvionOnline::List_ObjectPath* mutable_deck();
  void set_allocated_deck(::IvionOnline::List_ObjectPath* deck);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_deck() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_deck();
  public:
  void unsafe_arena_set_allocated_deck(
      ::IvionOnline::List_ObjectPath* deck);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_deck();

  // .IvionOnline.List_ObjectPath Discard = 15;
  bool has_discard() const;
  private:
  bool _internal_has_discard() const;
  public:
  void clear_discard();
  const ::IvionOnline::List_ObjectPath& discard() const;
  ::IvionOnline::List_ObjectPath* release_discard();
  ::IvionOnline::List_ObjectPath* mutable_discard();
  void set_allocated_discard(::IvionOnline::List_ObjectPath* discard);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_discard() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_discard();
  public:
  void unsafe_arena_set_allocated_discard(
      ::IvionOnline::List_ObjectPath* discard);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_discard();

  // .IvionOnline.List_ObjectPath Feats = 16;
  bool has_feats() const;
  private:
  bool _internal_has_feats() const;
  public:
  void clear_feats();
  const ::IvionOnline::List_ObjectPath& feats() const;
  ::IvionOnline::List_ObjectPath* release_feats();
  ::IvionOnline::List_ObjectPath* mutable_feats();
  void set_allocated_feats(::IvionOnline::List_ObjectPath* feats);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_feats() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_feats();
  public:
  void unsafe_arena_set_allocated_feats(
      ::IvionOnline::List_ObjectPath* feats);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_feats();

  // .IvionOnline.Integer MaxHealth = 17;
  bool has_maxhealth() const;
  private:
  bool _internal_has_maxhealth() const;
  public:
  void clear_maxhealth();
  const ::IvionOnline::Integer& maxhealth() const;
  ::IvionOnline::Integer* release_maxhealth();
  ::IvionOnline::Integer* mutable_maxhealth();
  void set_allocated_maxhealth(::IvionOnline::Integer* maxhealth);
  private:
  const ::IvionOnline::Integer& _internal_maxhealth() const;
  ::IvionOnline::Integer* _internal_mutable_maxhealth();
  public:
  void unsafe_arena_set_allocated_maxhealth(
      ::IvionOnline::Integer* maxhealth);
  ::IvionOnline::Integer* unsafe_arena_release_maxhealth();

  // .IvionOnline.Integer MaxActions = 18;
  bool has_maxactions() const;
  private:
  bool _internal_has_maxactions() const;
  public:
  void clear_maxactions();
  const ::IvionOnline::Integer& maxactions() const;
  ::IvionOnline::Integer* release_maxactions();
  ::IvionOnline::Integer* mutable_maxactions();
  void set_allocated_maxactions(::IvionOnline::Integer* maxactions);
  private:
  const ::IvionOnline::Integer& _internal_maxactions() const;
  ::IvionOnline::Integer* _internal_mutable_maxactions();
  public:
  void unsafe_arena_set_allocated_maxactions(
      ::IvionOnline::Integer* maxactions);
  ::IvionOnline::Integer* unsafe_arena_release_maxactions();

  // .IvionOnline.Integer MaxPower = 19;
  bool has_maxpower() const;
  private:
  bool _internal_has_maxpower() const;
  public:
  void clear_maxpower();
  const ::IvionOnline::Integer& maxpower() const;
  ::IvionOnline::Integer* release_maxpower();
  ::IvionOnline::Integer* mutable_maxpower();
  void set_allocated_maxpower(::IvionOnline::Integer* maxpower);
  private:
  const ::IvionOnline::Integer& _internal_maxpower() const;
  ::IvionOnline::Integer* _internal_mutable_maxpower();
  public:
  void unsafe_arena_set_allocated_maxpower(
      ::IvionOnline::Integer* maxpower);
  ::IvionOnline::Integer* unsafe_arena_release_maxpower();

  // .IvionOnline.Integer MaxSlow = 20;
  bool has_maxslow() const;
  private:
  bool _internal_has_maxslow() const;
  public:
  void clear_maxslow();
  const ::IvionOnline::Integer& maxslow() const;
  ::IvionOnline::Integer* release_maxslow();
  ::IvionOnline::Integer* mutable_maxslow();
  void set_allocated_maxslow(::IvionOnline::Integer* maxslow);
  private:
  const ::IvionOnline::Integer& _internal_maxslow() const;
  ::IvionOnline::Integer* _internal_mutable_maxslow();
  public:
  void unsafe_arena_set_allocated_maxslow(
      ::IvionOnline::Integer* maxslow);
  ::IvionOnline::Integer* unsafe_arena_release_maxslow();

  // .IvionOnline.Integer MaxSilence = 21;
  bool has_maxsilence() const;
  private:
  bool _internal_has_maxsilence() const;
  public:
  void clear_maxsilence();
  const ::IvionOnline::Integer& maxsilence() const;
  ::IvionOnline::Integer* release_maxsilence();
  ::IvionOnline::Integer* mutable_maxsilence();
  void set_allocated_maxsilence(::IvionOnline::Integer* maxsilence);
  private:
  const ::IvionOnline::Integer& _internal_maxsilence() const;
  ::IvionOnline::Integer* _internal_mutable_maxsilence();
  public:
  void unsafe_arena_set_allocated_maxsilence(
      ::IvionOnline::Integer* maxsilence);
  ::IvionOnline::Integer* unsafe_arena_release_maxsilence();

  // .IvionOnline.Integer MaxDisarm = 22;
  bool has_maxdisarm() const;
  private:
  bool _internal_has_maxdisarm() const;
  public:
  void clear_maxdisarm();
  const ::IvionOnline::Integer& maxdisarm() const;
  ::IvionOnline::Integer* release_maxdisarm();
  ::IvionOnline::Integer* mutable_maxdisarm();
  void set_allocated_maxdisarm(::IvionOnline::Integer* maxdisarm);
  private:
  const ::IvionOnline::Integer& _internal_maxdisarm() const;
  ::IvionOnline::Integer* _internal_mutable_maxdisarm();
  public:
  void unsafe_arena_set_allocated_maxdisarm(
      ::IvionOnline::Integer* maxdisarm);
  ::IvionOnline::Integer* unsafe_arena_release_maxdisarm();

  // .IvionOnline.ObjectPath AbsPath = 23;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // int32 Index = 2;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Player)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr uid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr indexstr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr displayname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::Integer* health_;
  ::IvionOnline::Integer* actions_;
  ::IvionOnline::Integer* power_;
  ::IvionOnline::Integer* initiative_;
  ::IvionOnline::Integer* slow_;
  ::IvionOnline::Integer* silence_;
  ::IvionOnline::Integer* disarm_;
  ::IvionOnline::Vec2i* position_;
  ::IvionOnline::List_ObjectPath* hand_;
  ::IvionOnline::List_ObjectPath* deck_;
  ::IvionOnline::List_ObjectPath* discard_;
  ::IvionOnline::List_ObjectPath* feats_;
  ::IvionOnline::Integer* maxhealth_;
  ::IvionOnline::Integer* maxactions_;
  ::IvionOnline::Integer* maxpower_;
  ::IvionOnline::Integer* maxslow_;
  ::IvionOnline::Integer* maxsilence_;
  ::IvionOnline::Integer* maxdisarm_;
  ::IvionOnline::ObjectPath* abspath_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Player PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Player) */ {
 public:
  inline List_Player() : List_Player(nullptr) {}
  virtual ~List_Player();

  List_Player(const List_Player& from);
  List_Player(List_Player&& from) noexcept
    : List_Player() {
    *this = ::std::move(from);
  }

  inline List_Player& operator=(const List_Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Player& operator=(List_Player&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Player& default_instance();

  static inline const List_Player* internal_default_instance() {
    return reinterpret_cast<const List_Player*>(
               &_List_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(List_Player& a, List_Player& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Player* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Player* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Player* New() const final {
    return CreateMaybeMessage<List_Player>(nullptr);
  }

  List_Player* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Player>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Player& from);
  void MergeFrom(const List_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Player* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Player";
  }
  protected:
  explicit List_Player(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Player element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Player* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Player >*
      mutable_element();
  private:
  const ::IvionOnline::Player& _internal_element(int index) const;
  ::IvionOnline::Player* _internal_add_element();
  public:
  const ::IvionOnline::Player& element(int index) const;
  ::IvionOnline::Player* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Player >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Player)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Player > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Card PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Card) */ {
 public:
  inline Card() : Card(nullptr) {}
  virtual ~Card();

  Card(const Card& from);
  Card(Card&& from) noexcept
    : Card() {
    *this = ::std::move(from);
  }

  inline Card& operator=(const Card& from) {
    CopyFrom(from);
    return *this;
  }
  inline Card& operator=(Card&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Card& default_instance();

  static inline const Card* internal_default_instance() {
    return reinterpret_cast<const Card*>(
               &_Card_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(Card& a, Card& b) {
    a.Swap(&b);
  }
  inline void Swap(Card* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Card* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Card* New() const final {
    return CreateMaybeMessage<Card>(nullptr);
  }

  Card* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Card>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Card& from);
  void MergeFrom(const Card& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Card* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Card";
  }
  protected:
  explicit Card(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexStrFieldNumber = 3,
    kNameFieldNumber = 5,
    kCardStatsFieldNumber = 1,
    kAbsPathFieldNumber = 4,
    kIndexFieldNumber = 2,
  };
  // string IndexStr = 3;
  void clear_indexstr();
  const std::string& indexstr() const;
  void set_indexstr(const std::string& value);
  void set_indexstr(std::string&& value);
  void set_indexstr(const char* value);
  void set_indexstr(const char* value, size_t size);
  std::string* mutable_indexstr();
  std::string* release_indexstr();
  void set_allocated_indexstr(std::string* indexstr);
  private:
  const std::string& _internal_indexstr() const;
  void _internal_set_indexstr(const std::string& value);
  std::string* _internal_mutable_indexstr();
  public:

  // string Name = 5;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath CardStats = 1;
  bool has_cardstats() const;
  private:
  bool _internal_has_cardstats() const;
  public:
  void clear_cardstats();
  const ::IvionOnline::ObjectPath& cardstats() const;
  ::IvionOnline::ObjectPath* release_cardstats();
  ::IvionOnline::ObjectPath* mutable_cardstats();
  void set_allocated_cardstats(::IvionOnline::ObjectPath* cardstats);
  private:
  const ::IvionOnline::ObjectPath& _internal_cardstats() const;
  ::IvionOnline::ObjectPath* _internal_mutable_cardstats();
  public:
  void unsafe_arena_set_allocated_cardstats(
      ::IvionOnline::ObjectPath* cardstats);
  ::IvionOnline::ObjectPath* unsafe_arena_release_cardstats();

  // .IvionOnline.ObjectPath AbsPath = 4;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // int32 Index = 2;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Card)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr indexstr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* cardstats_;
  ::IvionOnline::ObjectPath* abspath_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Card PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Card) */ {
 public:
  inline List_Card() : List_Card(nullptr) {}
  virtual ~List_Card();

  List_Card(const List_Card& from);
  List_Card(List_Card&& from) noexcept
    : List_Card() {
    *this = ::std::move(from);
  }

  inline List_Card& operator=(const List_Card& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Card& operator=(List_Card&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Card& default_instance();

  static inline const List_Card* internal_default_instance() {
    return reinterpret_cast<const List_Card*>(
               &_List_Card_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(List_Card& a, List_Card& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Card* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Card* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Card* New() const final {
    return CreateMaybeMessage<List_Card>(nullptr);
  }

  List_Card* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Card>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Card& from);
  void MergeFrom(const List_Card& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Card* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Card";
  }
  protected:
  explicit List_Card(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Card element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Card* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Card >*
      mutable_element();
  private:
  const ::IvionOnline::Card& _internal_element(int index) const;
  ::IvionOnline::Card* _internal_add_element();
  public:
  const ::IvionOnline::Card& element(int index) const;
  ::IvionOnline::Card* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Card >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Card)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Card > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class CardData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.CardData) */ {
 public:
  inline CardData() : CardData(nullptr) {}
  virtual ~CardData();

  CardData(const CardData& from);
  CardData(CardData&& from) noexcept
    : CardData() {
    *this = ::std::move(from);
  }

  inline CardData& operator=(const CardData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CardData& operator=(CardData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CardData& default_instance();

  static inline const CardData* internal_default_instance() {
    return reinterpret_cast<const CardData*>(
               &_CardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CardData& a, CardData& b) {
    a.Swap(&b);
  }
  inline void Swap(CardData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CardData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CardData* New() const final {
    return CreateMaybeMessage<CardData>(nullptr);
  }

  CardData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CardData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CardData& from);
  void MergeFrom(const CardData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CardData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.CardData";
  }
  protected:
  explicit CardData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 15,
    kOwnerFieldNumber = 1,
    kControllerFieldNumber = 2,
    kActionCostFieldNumber = 3,
    kPowerCostFieldNumber = 4,
    kRangeFieldNumber = 5,
    kAffectedBySlowFieldNumber = 6,
    kAffectedBySilenceFieldNumber = 7,
    kAffectedByDisarmFieldNumber = 8,
    kOmniPresentEffectFieldNumber = 9,
    kPassiveEffectFieldNumber = 10,
    kFeatEffectFieldNumber = 11,
    kPlayEffectFieldNumber = 12,
    kResolveEffectFieldNumber = 13,
    kAbsPathFieldNumber = 14,
  };
  // string Name = 15;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath Owner = 1;
  bool has_owner() const;
  private:
  bool _internal_has_owner() const;
  public:
  void clear_owner();
  const ::IvionOnline::ObjectPath& owner() const;
  ::IvionOnline::ObjectPath* release_owner();
  ::IvionOnline::ObjectPath* mutable_owner();
  void set_allocated_owner(::IvionOnline::ObjectPath* owner);
  private:
  const ::IvionOnline::ObjectPath& _internal_owner() const;
  ::IvionOnline::ObjectPath* _internal_mutable_owner();
  public:
  void unsafe_arena_set_allocated_owner(
      ::IvionOnline::ObjectPath* owner);
  ::IvionOnline::ObjectPath* unsafe_arena_release_owner();

  // .IvionOnline.ObjectPath Controller = 2;
  bool has_controller() const;
  private:
  bool _internal_has_controller() const;
  public:
  void clear_controller();
  const ::IvionOnline::ObjectPath& controller() const;
  ::IvionOnline::ObjectPath* release_controller();
  ::IvionOnline::ObjectPath* mutable_controller();
  void set_allocated_controller(::IvionOnline::ObjectPath* controller);
  private:
  const ::IvionOnline::ObjectPath& _internal_controller() const;
  ::IvionOnline::ObjectPath* _internal_mutable_controller();
  public:
  void unsafe_arena_set_allocated_controller(
      ::IvionOnline::ObjectPath* controller);
  ::IvionOnline::ObjectPath* unsafe_arena_release_controller();

  // .IvionOnline.Integer ActionCost = 3;
  bool has_actioncost() const;
  private:
  bool _internal_has_actioncost() const;
  public:
  void clear_actioncost();
  const ::IvionOnline::Integer& actioncost() const;
  ::IvionOnline::Integer* release_actioncost();
  ::IvionOnline::Integer* mutable_actioncost();
  void set_allocated_actioncost(::IvionOnline::Integer* actioncost);
  private:
  const ::IvionOnline::Integer& _internal_actioncost() const;
  ::IvionOnline::Integer* _internal_mutable_actioncost();
  public:
  void unsafe_arena_set_allocated_actioncost(
      ::IvionOnline::Integer* actioncost);
  ::IvionOnline::Integer* unsafe_arena_release_actioncost();

  // .IvionOnline.Integer PowerCost = 4;
  bool has_powercost() const;
  private:
  bool _internal_has_powercost() const;
  public:
  void clear_powercost();
  const ::IvionOnline::Integer& powercost() const;
  ::IvionOnline::Integer* release_powercost();
  ::IvionOnline::Integer* mutable_powercost();
  void set_allocated_powercost(::IvionOnline::Integer* powercost);
  private:
  const ::IvionOnline::Integer& _internal_powercost() const;
  ::IvionOnline::Integer* _internal_mutable_powercost();
  public:
  void unsafe_arena_set_allocated_powercost(
      ::IvionOnline::Integer* powercost);
  ::IvionOnline::Integer* unsafe_arena_release_powercost();

  // .IvionOnline.Integer Range = 5;
  bool has_range() const;
  private:
  bool _internal_has_range() const;
  public:
  void clear_range();
  const ::IvionOnline::Integer& range() const;
  ::IvionOnline::Integer* release_range();
  ::IvionOnline::Integer* mutable_range();
  void set_allocated_range(::IvionOnline::Integer* range);
  private:
  const ::IvionOnline::Integer& _internal_range() const;
  ::IvionOnline::Integer* _internal_mutable_range();
  public:
  void unsafe_arena_set_allocated_range(
      ::IvionOnline::Integer* range);
  ::IvionOnline::Integer* unsafe_arena_release_range();

  // .IvionOnline.Boolean AffectedBySlow = 6;
  bool has_affectedbyslow() const;
  private:
  bool _internal_has_affectedbyslow() const;
  public:
  void clear_affectedbyslow();
  const ::IvionOnline::Boolean& affectedbyslow() const;
  ::IvionOnline::Boolean* release_affectedbyslow();
  ::IvionOnline::Boolean* mutable_affectedbyslow();
  void set_allocated_affectedbyslow(::IvionOnline::Boolean* affectedbyslow);
  private:
  const ::IvionOnline::Boolean& _internal_affectedbyslow() const;
  ::IvionOnline::Boolean* _internal_mutable_affectedbyslow();
  public:
  void unsafe_arena_set_allocated_affectedbyslow(
      ::IvionOnline::Boolean* affectedbyslow);
  ::IvionOnline::Boolean* unsafe_arena_release_affectedbyslow();

  // .IvionOnline.Boolean AffectedBySilence = 7;
  bool has_affectedbysilence() const;
  private:
  bool _internal_has_affectedbysilence() const;
  public:
  void clear_affectedbysilence();
  const ::IvionOnline::Boolean& affectedbysilence() const;
  ::IvionOnline::Boolean* release_affectedbysilence();
  ::IvionOnline::Boolean* mutable_affectedbysilence();
  void set_allocated_affectedbysilence(::IvionOnline::Boolean* affectedbysilence);
  private:
  const ::IvionOnline::Boolean& _internal_affectedbysilence() const;
  ::IvionOnline::Boolean* _internal_mutable_affectedbysilence();
  public:
  void unsafe_arena_set_allocated_affectedbysilence(
      ::IvionOnline::Boolean* affectedbysilence);
  ::IvionOnline::Boolean* unsafe_arena_release_affectedbysilence();

  // .IvionOnline.Boolean AffectedByDisarm = 8;
  bool has_affectedbydisarm() const;
  private:
  bool _internal_has_affectedbydisarm() const;
  public:
  void clear_affectedbydisarm();
  const ::IvionOnline::Boolean& affectedbydisarm() const;
  ::IvionOnline::Boolean* release_affectedbydisarm();
  ::IvionOnline::Boolean* mutable_affectedbydisarm();
  void set_allocated_affectedbydisarm(::IvionOnline::Boolean* affectedbydisarm);
  private:
  const ::IvionOnline::Boolean& _internal_affectedbydisarm() const;
  ::IvionOnline::Boolean* _internal_mutable_affectedbydisarm();
  public:
  void unsafe_arena_set_allocated_affectedbydisarm(
      ::IvionOnline::Boolean* affectedbydisarm);
  ::IvionOnline::Boolean* unsafe_arena_release_affectedbydisarm();

  // .IvionOnline.List_Method OmniPresentEffect = 9;
  bool has_omnipresenteffect() const;
  private:
  bool _internal_has_omnipresenteffect() const;
  public:
  void clear_omnipresenteffect();
  const ::IvionOnline::List_Method& omnipresenteffect() const;
  ::IvionOnline::List_Method* release_omnipresenteffect();
  ::IvionOnline::List_Method* mutable_omnipresenteffect();
  void set_allocated_omnipresenteffect(::IvionOnline::List_Method* omnipresenteffect);
  private:
  const ::IvionOnline::List_Method& _internal_omnipresenteffect() const;
  ::IvionOnline::List_Method* _internal_mutable_omnipresenteffect();
  public:
  void unsafe_arena_set_allocated_omnipresenteffect(
      ::IvionOnline::List_Method* omnipresenteffect);
  ::IvionOnline::List_Method* unsafe_arena_release_omnipresenteffect();

  // .IvionOnline.List_Method PassiveEffect = 10;
  bool has_passiveeffect() const;
  private:
  bool _internal_has_passiveeffect() const;
  public:
  void clear_passiveeffect();
  const ::IvionOnline::List_Method& passiveeffect() const;
  ::IvionOnline::List_Method* release_passiveeffect();
  ::IvionOnline::List_Method* mutable_passiveeffect();
  void set_allocated_passiveeffect(::IvionOnline::List_Method* passiveeffect);
  private:
  const ::IvionOnline::List_Method& _internal_passiveeffect() const;
  ::IvionOnline::List_Method* _internal_mutable_passiveeffect();
  public:
  void unsafe_arena_set_allocated_passiveeffect(
      ::IvionOnline::List_Method* passiveeffect);
  ::IvionOnline::List_Method* unsafe_arena_release_passiveeffect();

  // .IvionOnline.List_Method FeatEffect = 11;
  bool has_feateffect() const;
  private:
  bool _internal_has_feateffect() const;
  public:
  void clear_feateffect();
  const ::IvionOnline::List_Method& feateffect() const;
  ::IvionOnline::List_Method* release_feateffect();
  ::IvionOnline::List_Method* mutable_feateffect();
  void set_allocated_feateffect(::IvionOnline::List_Method* feateffect);
  private:
  const ::IvionOnline::List_Method& _internal_feateffect() const;
  ::IvionOnline::List_Method* _internal_mutable_feateffect();
  public:
  void unsafe_arena_set_allocated_feateffect(
      ::IvionOnline::List_Method* feateffect);
  ::IvionOnline::List_Method* unsafe_arena_release_feateffect();

  // .IvionOnline.List_Method PlayEffect = 12;
  bool has_playeffect() const;
  private:
  bool _internal_has_playeffect() const;
  public:
  void clear_playeffect();
  const ::IvionOnline::List_Method& playeffect() const;
  ::IvionOnline::List_Method* release_playeffect();
  ::IvionOnline::List_Method* mutable_playeffect();
  void set_allocated_playeffect(::IvionOnline::List_Method* playeffect);
  private:
  const ::IvionOnline::List_Method& _internal_playeffect() const;
  ::IvionOnline::List_Method* _internal_mutable_playeffect();
  public:
  void unsafe_arena_set_allocated_playeffect(
      ::IvionOnline::List_Method* playeffect);
  ::IvionOnline::List_Method* unsafe_arena_release_playeffect();

  // .IvionOnline.List_Method ResolveEffect = 13;
  bool has_resolveeffect() const;
  private:
  bool _internal_has_resolveeffect() const;
  public:
  void clear_resolveeffect();
  const ::IvionOnline::List_Method& resolveeffect() const;
  ::IvionOnline::List_Method* release_resolveeffect();
  ::IvionOnline::List_Method* mutable_resolveeffect();
  void set_allocated_resolveeffect(::IvionOnline::List_Method* resolveeffect);
  private:
  const ::IvionOnline::List_Method& _internal_resolveeffect() const;
  ::IvionOnline::List_Method* _internal_mutable_resolveeffect();
  public:
  void unsafe_arena_set_allocated_resolveeffect(
      ::IvionOnline::List_Method* resolveeffect);
  ::IvionOnline::List_Method* unsafe_arena_release_resolveeffect();

  // .IvionOnline.ObjectPath AbsPath = 14;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.CardData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* owner_;
  ::IvionOnline::ObjectPath* controller_;
  ::IvionOnline::Integer* actioncost_;
  ::IvionOnline::Integer* powercost_;
  ::IvionOnline::Integer* range_;
  ::IvionOnline::Boolean* affectedbyslow_;
  ::IvionOnline::Boolean* affectedbysilence_;
  ::IvionOnline::Boolean* affectedbydisarm_;
  ::IvionOnline::List_Method* omnipresenteffect_;
  ::IvionOnline::List_Method* passiveeffect_;
  ::IvionOnline::List_Method* feateffect_;
  ::IvionOnline::List_Method* playeffect_;
  ::IvionOnline::List_Method* resolveeffect_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_CardData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_CardData) */ {
 public:
  inline List_CardData() : List_CardData(nullptr) {}
  virtual ~List_CardData();

  List_CardData(const List_CardData& from);
  List_CardData(List_CardData&& from) noexcept
    : List_CardData() {
    *this = ::std::move(from);
  }

  inline List_CardData& operator=(const List_CardData& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_CardData& operator=(List_CardData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_CardData& default_instance();

  static inline const List_CardData* internal_default_instance() {
    return reinterpret_cast<const List_CardData*>(
               &_List_CardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(List_CardData& a, List_CardData& b) {
    a.Swap(&b);
  }
  inline void Swap(List_CardData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_CardData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_CardData* New() const final {
    return CreateMaybeMessage<List_CardData>(nullptr);
  }

  List_CardData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_CardData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_CardData& from);
  void MergeFrom(const List_CardData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_CardData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_CardData";
  }
  protected:
  explicit List_CardData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.CardData element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::CardData* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::CardData >*
      mutable_element();
  private:
  const ::IvionOnline::CardData& _internal_element(int index) const;
  ::IvionOnline::CardData* _internal_add_element();
  public:
  const ::IvionOnline::CardData& element(int index) const;
  ::IvionOnline::CardData* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::CardData >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_CardData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::CardData > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Tile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Tile) */ {
 public:
  inline Tile() : Tile(nullptr) {}
  virtual ~Tile();

  Tile(const Tile& from);
  Tile(Tile&& from) noexcept
    : Tile() {
    *this = ::std::move(from);
  }

  inline Tile& operator=(const Tile& from) {
    CopyFrom(from);
    return *this;
  }
  inline Tile& operator=(Tile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Tile& default_instance();

  static inline const Tile* internal_default_instance() {
    return reinterpret_cast<const Tile*>(
               &_Tile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(Tile& a, Tile& b) {
    a.Swap(&b);
  }
  inline void Swap(Tile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Tile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Tile* New() const final {
    return CreateMaybeMessage<Tile>(nullptr);
  }

  Tile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Tile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Tile& from);
  void MergeFrom(const Tile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Tile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Tile";
  }
  protected:
  explicit Tile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexStrFieldNumber = 3,
    kNameFieldNumber = 8,
    kPositionFieldNumber = 1,
    kTerrainFieldNumber = 4,
    kPlayersFieldNumber = 5,
    kCardsFieldNumber = 6,
    kAbsPathFieldNumber = 7,
    kIndexFieldNumber = 2,
  };
  // string IndexStr = 3;
  void clear_indexstr();
  const std::string& indexstr() const;
  void set_indexstr(const std::string& value);
  void set_indexstr(std::string&& value);
  void set_indexstr(const char* value);
  void set_indexstr(const char* value, size_t size);
  std::string* mutable_indexstr();
  std::string* release_indexstr();
  void set_allocated_indexstr(std::string* indexstr);
  private:
  const std::string& _internal_indexstr() const;
  void _internal_set_indexstr(const std::string& value);
  std::string* _internal_mutable_indexstr();
  public:

  // string Name = 8;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.Vec2i Position = 1;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::IvionOnline::Vec2i& position() const;
  ::IvionOnline::Vec2i* release_position();
  ::IvionOnline::Vec2i* mutable_position();
  void set_allocated_position(::IvionOnline::Vec2i* position);
  private:
  const ::IvionOnline::Vec2i& _internal_position() const;
  ::IvionOnline::Vec2i* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::IvionOnline::Vec2i* position);
  ::IvionOnline::Vec2i* unsafe_arena_release_position();

  // .IvionOnline.Terrain Terrain = 4;
  bool has_terrain() const;
  private:
  bool _internal_has_terrain() const;
  public:
  void clear_terrain();
  const ::IvionOnline::Terrain& terrain() const;
  ::IvionOnline::Terrain* release_terrain();
  ::IvionOnline::Terrain* mutable_terrain();
  void set_allocated_terrain(::IvionOnline::Terrain* terrain);
  private:
  const ::IvionOnline::Terrain& _internal_terrain() const;
  ::IvionOnline::Terrain* _internal_mutable_terrain();
  public:
  void unsafe_arena_set_allocated_terrain(
      ::IvionOnline::Terrain* terrain);
  ::IvionOnline::Terrain* unsafe_arena_release_terrain();

  // .IvionOnline.List_ObjectPath Players = 5;
  bool has_players() const;
  private:
  bool _internal_has_players() const;
  public:
  void clear_players();
  const ::IvionOnline::List_ObjectPath& players() const;
  ::IvionOnline::List_ObjectPath* release_players();
  ::IvionOnline::List_ObjectPath* mutable_players();
  void set_allocated_players(::IvionOnline::List_ObjectPath* players);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_players() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_players();
  public:
  void unsafe_arena_set_allocated_players(
      ::IvionOnline::List_ObjectPath* players);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_players();

  // .IvionOnline.List_ObjectPath Cards = 6;
  bool has_cards() const;
  private:
  bool _internal_has_cards() const;
  public:
  void clear_cards();
  const ::IvionOnline::List_ObjectPath& cards() const;
  ::IvionOnline::List_ObjectPath* release_cards();
  ::IvionOnline::List_ObjectPath* mutable_cards();
  void set_allocated_cards(::IvionOnline::List_ObjectPath* cards);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_cards() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_cards();
  public:
  void unsafe_arena_set_allocated_cards(
      ::IvionOnline::List_ObjectPath* cards);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_cards();

  // .IvionOnline.ObjectPath AbsPath = 7;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // int32 Index = 2;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.Tile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr indexstr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::Vec2i* position_;
  ::IvionOnline::Terrain* terrain_;
  ::IvionOnline::List_ObjectPath* players_;
  ::IvionOnline::List_ObjectPath* cards_;
  ::IvionOnline::ObjectPath* abspath_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Tile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Tile) */ {
 public:
  inline List_Tile() : List_Tile(nullptr) {}
  virtual ~List_Tile();

  List_Tile(const List_Tile& from);
  List_Tile(List_Tile&& from) noexcept
    : List_Tile() {
    *this = ::std::move(from);
  }

  inline List_Tile& operator=(const List_Tile& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Tile& operator=(List_Tile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Tile& default_instance();

  static inline const List_Tile* internal_default_instance() {
    return reinterpret_cast<const List_Tile*>(
               &_List_Tile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(List_Tile& a, List_Tile& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Tile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Tile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Tile* New() const final {
    return CreateMaybeMessage<List_Tile>(nullptr);
  }

  List_Tile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Tile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Tile& from);
  void MergeFrom(const List_Tile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Tile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Tile";
  }
  protected:
  explicit List_Tile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.Tile element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Tile* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Tile >*
      mutable_element();
  private:
  const ::IvionOnline::Tile& _internal_element(int index) const;
  ::IvionOnline::Tile* _internal_add_element();
  public:
  const ::IvionOnline::Tile& element(int index) const;
  ::IvionOnline::Tile* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Tile >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Tile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Tile > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class GameState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.GameState) */ {
 public:
  inline GameState() : GameState(nullptr) {}
  virtual ~GameState();

  GameState(const GameState& from);
  GameState(GameState&& from) noexcept
    : GameState() {
    *this = ::std::move(from);
  }

  inline GameState& operator=(const GameState& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameState& operator=(GameState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GameState& default_instance();

  static inline const GameState* internal_default_instance() {
    return reinterpret_cast<const GameState*>(
               &_GameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(GameState& a, GameState& b) {
    a.Swap(&b);
  }
  inline void Swap(GameState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GameState* New() const final {
    return CreateMaybeMessage<GameState>(nullptr);
  }

  GameState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GameState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GameState& from);
  void MergeFrom(const GameState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.GameState";
  }
  protected:
  explicit GameState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 8,
    kPlayersFieldNumber = 1,
    kCardsFieldNumber = 2,
    kCardDataFieldNumber = 3,
    kTilesFieldNumber = 4,
    kFieldFieldNumber = 5,
    kTurnNumberFieldNumber = 6,
    kAbsPathFieldNumber = 7,
  };
  // string Name = 8;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.List_Player Players = 1;
  bool has_players() const;
  private:
  bool _internal_has_players() const;
  public:
  void clear_players();
  const ::IvionOnline::List_Player& players() const;
  ::IvionOnline::List_Player* release_players();
  ::IvionOnline::List_Player* mutable_players();
  void set_allocated_players(::IvionOnline::List_Player* players);
  private:
  const ::IvionOnline::List_Player& _internal_players() const;
  ::IvionOnline::List_Player* _internal_mutable_players();
  public:
  void unsafe_arena_set_allocated_players(
      ::IvionOnline::List_Player* players);
  ::IvionOnline::List_Player* unsafe_arena_release_players();

  // .IvionOnline.List_Card Cards = 2;
  bool has_cards() const;
  private:
  bool _internal_has_cards() const;
  public:
  void clear_cards();
  const ::IvionOnline::List_Card& cards() const;
  ::IvionOnline::List_Card* release_cards();
  ::IvionOnline::List_Card* mutable_cards();
  void set_allocated_cards(::IvionOnline::List_Card* cards);
  private:
  const ::IvionOnline::List_Card& _internal_cards() const;
  ::IvionOnline::List_Card* _internal_mutable_cards();
  public:
  void unsafe_arena_set_allocated_cards(
      ::IvionOnline::List_Card* cards);
  ::IvionOnline::List_Card* unsafe_arena_release_cards();

  // .IvionOnline.List_CardData CardData = 3;
  bool has_carddata() const;
  private:
  bool _internal_has_carddata() const;
  public:
  void clear_carddata();
  const ::IvionOnline::List_CardData& carddata() const;
  ::IvionOnline::List_CardData* release_carddata();
  ::IvionOnline::List_CardData* mutable_carddata();
  void set_allocated_carddata(::IvionOnline::List_CardData* carddata);
  private:
  const ::IvionOnline::List_CardData& _internal_carddata() const;
  ::IvionOnline::List_CardData* _internal_mutable_carddata();
  public:
  void unsafe_arena_set_allocated_carddata(
      ::IvionOnline::List_CardData* carddata);
  ::IvionOnline::List_CardData* unsafe_arena_release_carddata();

  // .IvionOnline.List_Tile Tiles = 4;
  bool has_tiles() const;
  private:
  bool _internal_has_tiles() const;
  public:
  void clear_tiles();
  const ::IvionOnline::List_Tile& tiles() const;
  ::IvionOnline::List_Tile* release_tiles();
  ::IvionOnline::List_Tile* mutable_tiles();
  void set_allocated_tiles(::IvionOnline::List_Tile* tiles);
  private:
  const ::IvionOnline::List_Tile& _internal_tiles() const;
  ::IvionOnline::List_Tile* _internal_mutable_tiles();
  public:
  void unsafe_arena_set_allocated_tiles(
      ::IvionOnline::List_Tile* tiles);
  ::IvionOnline::List_Tile* unsafe_arena_release_tiles();

  // .IvionOnline.List_ObjectPath Field = 5;
  bool has_field() const;
  private:
  bool _internal_has_field() const;
  public:
  void clear_field();
  const ::IvionOnline::List_ObjectPath& field() const;
  ::IvionOnline::List_ObjectPath* release_field();
  ::IvionOnline::List_ObjectPath* mutable_field();
  void set_allocated_field(::IvionOnline::List_ObjectPath* field);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_field() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_field();
  public:
  void unsafe_arena_set_allocated_field(
      ::IvionOnline::List_ObjectPath* field);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_field();

  // .IvionOnline.Integer TurnNumber = 6;
  bool has_turnnumber() const;
  private:
  bool _internal_has_turnnumber() const;
  public:
  void clear_turnnumber();
  const ::IvionOnline::Integer& turnnumber() const;
  ::IvionOnline::Integer* release_turnnumber();
  ::IvionOnline::Integer* mutable_turnnumber();
  void set_allocated_turnnumber(::IvionOnline::Integer* turnnumber);
  private:
  const ::IvionOnline::Integer& _internal_turnnumber() const;
  ::IvionOnline::Integer* _internal_mutable_turnnumber();
  public:
  void unsafe_arena_set_allocated_turnnumber(
      ::IvionOnline::Integer* turnnumber);
  ::IvionOnline::Integer* unsafe_arena_release_turnnumber();

  // .IvionOnline.ObjectPath AbsPath = 7;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.GameState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::List_Player* players_;
  ::IvionOnline::List_Card* cards_;
  ::IvionOnline::List_CardData* carddata_;
  ::IvionOnline::List_Tile* tiles_;
  ::IvionOnline::List_ObjectPath* field_;
  ::IvionOnline::Integer* turnnumber_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_GameState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_GameState) */ {
 public:
  inline List_GameState() : List_GameState(nullptr) {}
  virtual ~List_GameState();

  List_GameState(const List_GameState& from);
  List_GameState(List_GameState&& from) noexcept
    : List_GameState() {
    *this = ::std::move(from);
  }

  inline List_GameState& operator=(const List_GameState& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_GameState& operator=(List_GameState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_GameState& default_instance();

  static inline const List_GameState* internal_default_instance() {
    return reinterpret_cast<const List_GameState*>(
               &_List_GameState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(List_GameState& a, List_GameState& b) {
    a.Swap(&b);
  }
  inline void Swap(List_GameState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_GameState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_GameState* New() const final {
    return CreateMaybeMessage<List_GameState>(nullptr);
  }

  List_GameState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_GameState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_GameState& from);
  void MergeFrom(const List_GameState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_GameState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_GameState";
  }
  protected:
  explicit List_GameState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
    kNameFieldNumber = 3,
    kAbsPathFieldNumber = 2,
  };
  // repeated .IvionOnline.GameState element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::GameState* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::GameState >*
      mutable_element();
  private:
  const ::IvionOnline::GameState& _internal_element(int index) const;
  ::IvionOnline::GameState* _internal_add_element();
  public:
  const ::IvionOnline::GameState& element(int index) const;
  ::IvionOnline::GameState* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::GameState >&
      element() const;

  // string Name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .IvionOnline.ObjectPath AbsPath = 2;
  bool has_abspath() const;
  private:
  bool _internal_has_abspath() const;
  public:
  void clear_abspath();
  const ::IvionOnline::ObjectPath& abspath() const;
  ::IvionOnline::ObjectPath* release_abspath();
  ::IvionOnline::ObjectPath* mutable_abspath();
  void set_allocated_abspath(::IvionOnline::ObjectPath* abspath);
  private:
  const ::IvionOnline::ObjectPath& _internal_abspath() const;
  ::IvionOnline::ObjectPath* _internal_mutable_abspath();
  public:
  void unsafe_arena_set_allocated_abspath(
      ::IvionOnline::ObjectPath* abspath);
  ::IvionOnline::ObjectPath* unsafe_arena_release_abspath();

  // @@protoc_insertion_point(class_scope:IvionOnline.List_GameState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::GameState > element_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::IvionOnline::ObjectPath* abspath_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Boolean_Set_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Boolean_Set_Mutation) */ {
 public:
  inline Boolean_Set_Mutation() : Boolean_Set_Mutation(nullptr) {}
  virtual ~Boolean_Set_Mutation();

  Boolean_Set_Mutation(const Boolean_Set_Mutation& from);
  Boolean_Set_Mutation(Boolean_Set_Mutation&& from) noexcept
    : Boolean_Set_Mutation() {
    *this = ::std::move(from);
  }

  inline Boolean_Set_Mutation& operator=(const Boolean_Set_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Boolean_Set_Mutation& operator=(Boolean_Set_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Boolean_Set_Mutation& default_instance();

  static inline const Boolean_Set_Mutation* internal_default_instance() {
    return reinterpret_cast<const Boolean_Set_Mutation*>(
               &_Boolean_Set_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(Boolean_Set_Mutation& a, Boolean_Set_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(Boolean_Set_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Boolean_Set_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Boolean_Set_Mutation* New() const final {
    return CreateMaybeMessage<Boolean_Set_Mutation>(nullptr);
  }

  Boolean_Set_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Boolean_Set_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Boolean_Set_Mutation& from);
  void MergeFrom(const Boolean_Set_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Boolean_Set_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Boolean_Set_Mutation";
  }
  protected:
  explicit Boolean_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kOldValueFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Boolean NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Boolean& newvalue() const;
  ::IvionOnline::Boolean* release_newvalue();
  ::IvionOnline::Boolean* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Boolean* newvalue);
  private:
  const ::IvionOnline::Boolean& _internal_newvalue() const;
  ::IvionOnline::Boolean* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Boolean* newvalue);
  ::IvionOnline::Boolean* unsafe_arena_release_newvalue();

  // .IvionOnline.Boolean OldValue = 3;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Boolean& oldvalue() const;
  ::IvionOnline::Boolean* release_oldvalue();
  ::IvionOnline::Boolean* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Boolean* oldvalue);
  private:
  const ::IvionOnline::Boolean& _internal_oldvalue() const;
  ::IvionOnline::Boolean* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Boolean* oldvalue);
  ::IvionOnline::Boolean* unsafe_arena_release_oldvalue();

  // @@protoc_insertion_point(class_scope:IvionOnline.Boolean_Set_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Boolean* newvalue_;
  ::IvionOnline::Boolean* oldvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Boolean_Insert_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Boolean_Insert_Mutation) */ {
 public:
  inline List_Boolean_Insert_Mutation() : List_Boolean_Insert_Mutation(nullptr) {}
  virtual ~List_Boolean_Insert_Mutation();

  List_Boolean_Insert_Mutation(const List_Boolean_Insert_Mutation& from);
  List_Boolean_Insert_Mutation(List_Boolean_Insert_Mutation&& from) noexcept
    : List_Boolean_Insert_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Boolean_Insert_Mutation& operator=(const List_Boolean_Insert_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Boolean_Insert_Mutation& operator=(List_Boolean_Insert_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Boolean_Insert_Mutation& default_instance();

  static inline const List_Boolean_Insert_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Boolean_Insert_Mutation*>(
               &_List_Boolean_Insert_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(List_Boolean_Insert_Mutation& a, List_Boolean_Insert_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Boolean_Insert_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Boolean_Insert_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Boolean_Insert_Mutation* New() const final {
    return CreateMaybeMessage<List_Boolean_Insert_Mutation>(nullptr);
  }

  List_Boolean_Insert_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Boolean_Insert_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Boolean_Insert_Mutation& from);
  void MergeFrom(const List_Boolean_Insert_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Boolean_Insert_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Boolean_Insert_Mutation";
  }
  protected:
  explicit List_Boolean_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Boolean NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Boolean& newvalue() const;
  ::IvionOnline::Boolean* release_newvalue();
  ::IvionOnline::Boolean* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Boolean* newvalue);
  private:
  const ::IvionOnline::Boolean& _internal_newvalue() const;
  ::IvionOnline::Boolean* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Boolean* newvalue);
  ::IvionOnline::Boolean* unsafe_arena_release_newvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Boolean_Insert_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Boolean* newvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Boolean_Remove_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Boolean_Remove_Mutation) */ {
 public:
  inline List_Boolean_Remove_Mutation() : List_Boolean_Remove_Mutation(nullptr) {}
  virtual ~List_Boolean_Remove_Mutation();

  List_Boolean_Remove_Mutation(const List_Boolean_Remove_Mutation& from);
  List_Boolean_Remove_Mutation(List_Boolean_Remove_Mutation&& from) noexcept
    : List_Boolean_Remove_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Boolean_Remove_Mutation& operator=(const List_Boolean_Remove_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Boolean_Remove_Mutation& operator=(List_Boolean_Remove_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Boolean_Remove_Mutation& default_instance();

  static inline const List_Boolean_Remove_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Boolean_Remove_Mutation*>(
               &_List_Boolean_Remove_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(List_Boolean_Remove_Mutation& a, List_Boolean_Remove_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Boolean_Remove_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Boolean_Remove_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Boolean_Remove_Mutation* New() const final {
    return CreateMaybeMessage<List_Boolean_Remove_Mutation>(nullptr);
  }

  List_Boolean_Remove_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Boolean_Remove_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Boolean_Remove_Mutation& from);
  void MergeFrom(const List_Boolean_Remove_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Boolean_Remove_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Boolean_Remove_Mutation";
  }
  protected:
  explicit List_Boolean_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kOldValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Boolean OldValue = 2;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Boolean& oldvalue() const;
  ::IvionOnline::Boolean* release_oldvalue();
  ::IvionOnline::Boolean* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Boolean* oldvalue);
  private:
  const ::IvionOnline::Boolean& _internal_oldvalue() const;
  ::IvionOnline::Boolean* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Boolean* oldvalue);
  ::IvionOnline::Boolean* unsafe_arena_release_oldvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Boolean_Remove_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Boolean* oldvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Integer_Set_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Integer_Set_Mutation) */ {
 public:
  inline Integer_Set_Mutation() : Integer_Set_Mutation(nullptr) {}
  virtual ~Integer_Set_Mutation();

  Integer_Set_Mutation(const Integer_Set_Mutation& from);
  Integer_Set_Mutation(Integer_Set_Mutation&& from) noexcept
    : Integer_Set_Mutation() {
    *this = ::std::move(from);
  }

  inline Integer_Set_Mutation& operator=(const Integer_Set_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Integer_Set_Mutation& operator=(Integer_Set_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Integer_Set_Mutation& default_instance();

  static inline const Integer_Set_Mutation* internal_default_instance() {
    return reinterpret_cast<const Integer_Set_Mutation*>(
               &_Integer_Set_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(Integer_Set_Mutation& a, Integer_Set_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(Integer_Set_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Integer_Set_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Integer_Set_Mutation* New() const final {
    return CreateMaybeMessage<Integer_Set_Mutation>(nullptr);
  }

  Integer_Set_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Integer_Set_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Integer_Set_Mutation& from);
  void MergeFrom(const Integer_Set_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Integer_Set_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Integer_Set_Mutation";
  }
  protected:
  explicit Integer_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kOldValueFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Integer NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Integer& newvalue() const;
  ::IvionOnline::Integer* release_newvalue();
  ::IvionOnline::Integer* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Integer* newvalue);
  private:
  const ::IvionOnline::Integer& _internal_newvalue() const;
  ::IvionOnline::Integer* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Integer* newvalue);
  ::IvionOnline::Integer* unsafe_arena_release_newvalue();

  // .IvionOnline.Integer OldValue = 3;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Integer& oldvalue() const;
  ::IvionOnline::Integer* release_oldvalue();
  ::IvionOnline::Integer* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Integer* oldvalue);
  private:
  const ::IvionOnline::Integer& _internal_oldvalue() const;
  ::IvionOnline::Integer* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Integer* oldvalue);
  ::IvionOnline::Integer* unsafe_arena_release_oldvalue();

  // @@protoc_insertion_point(class_scope:IvionOnline.Integer_Set_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Integer* newvalue_;
  ::IvionOnline::Integer* oldvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Integer_Insert_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Integer_Insert_Mutation) */ {
 public:
  inline List_Integer_Insert_Mutation() : List_Integer_Insert_Mutation(nullptr) {}
  virtual ~List_Integer_Insert_Mutation();

  List_Integer_Insert_Mutation(const List_Integer_Insert_Mutation& from);
  List_Integer_Insert_Mutation(List_Integer_Insert_Mutation&& from) noexcept
    : List_Integer_Insert_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Integer_Insert_Mutation& operator=(const List_Integer_Insert_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Integer_Insert_Mutation& operator=(List_Integer_Insert_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Integer_Insert_Mutation& default_instance();

  static inline const List_Integer_Insert_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Integer_Insert_Mutation*>(
               &_List_Integer_Insert_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(List_Integer_Insert_Mutation& a, List_Integer_Insert_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Integer_Insert_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Integer_Insert_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Integer_Insert_Mutation* New() const final {
    return CreateMaybeMessage<List_Integer_Insert_Mutation>(nullptr);
  }

  List_Integer_Insert_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Integer_Insert_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Integer_Insert_Mutation& from);
  void MergeFrom(const List_Integer_Insert_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Integer_Insert_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Integer_Insert_Mutation";
  }
  protected:
  explicit List_Integer_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Integer NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Integer& newvalue() const;
  ::IvionOnline::Integer* release_newvalue();
  ::IvionOnline::Integer* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Integer* newvalue);
  private:
  const ::IvionOnline::Integer& _internal_newvalue() const;
  ::IvionOnline::Integer* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Integer* newvalue);
  ::IvionOnline::Integer* unsafe_arena_release_newvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Integer_Insert_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Integer* newvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Integer_Remove_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Integer_Remove_Mutation) */ {
 public:
  inline List_Integer_Remove_Mutation() : List_Integer_Remove_Mutation(nullptr) {}
  virtual ~List_Integer_Remove_Mutation();

  List_Integer_Remove_Mutation(const List_Integer_Remove_Mutation& from);
  List_Integer_Remove_Mutation(List_Integer_Remove_Mutation&& from) noexcept
    : List_Integer_Remove_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Integer_Remove_Mutation& operator=(const List_Integer_Remove_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Integer_Remove_Mutation& operator=(List_Integer_Remove_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Integer_Remove_Mutation& default_instance();

  static inline const List_Integer_Remove_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Integer_Remove_Mutation*>(
               &_List_Integer_Remove_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(List_Integer_Remove_Mutation& a, List_Integer_Remove_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Integer_Remove_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Integer_Remove_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Integer_Remove_Mutation* New() const final {
    return CreateMaybeMessage<List_Integer_Remove_Mutation>(nullptr);
  }

  List_Integer_Remove_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Integer_Remove_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Integer_Remove_Mutation& from);
  void MergeFrom(const List_Integer_Remove_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Integer_Remove_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Integer_Remove_Mutation";
  }
  protected:
  explicit List_Integer_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kOldValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Integer OldValue = 2;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Integer& oldvalue() const;
  ::IvionOnline::Integer* release_oldvalue();
  ::IvionOnline::Integer* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Integer* oldvalue);
  private:
  const ::IvionOnline::Integer& _internal_oldvalue() const;
  ::IvionOnline::Integer* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Integer* oldvalue);
  ::IvionOnline::Integer* unsafe_arena_release_oldvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Integer_Remove_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Integer* oldvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Vec2i_Set_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Vec2i_Set_Mutation) */ {
 public:
  inline Vec2i_Set_Mutation() : Vec2i_Set_Mutation(nullptr) {}
  virtual ~Vec2i_Set_Mutation();

  Vec2i_Set_Mutation(const Vec2i_Set_Mutation& from);
  Vec2i_Set_Mutation(Vec2i_Set_Mutation&& from) noexcept
    : Vec2i_Set_Mutation() {
    *this = ::std::move(from);
  }

  inline Vec2i_Set_Mutation& operator=(const Vec2i_Set_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec2i_Set_Mutation& operator=(Vec2i_Set_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vec2i_Set_Mutation& default_instance();

  static inline const Vec2i_Set_Mutation* internal_default_instance() {
    return reinterpret_cast<const Vec2i_Set_Mutation*>(
               &_Vec2i_Set_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(Vec2i_Set_Mutation& a, Vec2i_Set_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec2i_Set_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec2i_Set_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vec2i_Set_Mutation* New() const final {
    return CreateMaybeMessage<Vec2i_Set_Mutation>(nullptr);
  }

  Vec2i_Set_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vec2i_Set_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vec2i_Set_Mutation& from);
  void MergeFrom(const Vec2i_Set_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec2i_Set_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Vec2i_Set_Mutation";
  }
  protected:
  explicit Vec2i_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kOldValueFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Vec2i NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Vec2i& newvalue() const;
  ::IvionOnline::Vec2i* release_newvalue();
  ::IvionOnline::Vec2i* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Vec2i* newvalue);
  private:
  const ::IvionOnline::Vec2i& _internal_newvalue() const;
  ::IvionOnline::Vec2i* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Vec2i* newvalue);
  ::IvionOnline::Vec2i* unsafe_arena_release_newvalue();

  // .IvionOnline.Vec2i OldValue = 3;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Vec2i& oldvalue() const;
  ::IvionOnline::Vec2i* release_oldvalue();
  ::IvionOnline::Vec2i* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Vec2i* oldvalue);
  private:
  const ::IvionOnline::Vec2i& _internal_oldvalue() const;
  ::IvionOnline::Vec2i* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Vec2i* oldvalue);
  ::IvionOnline::Vec2i* unsafe_arena_release_oldvalue();

  // @@protoc_insertion_point(class_scope:IvionOnline.Vec2i_Set_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Vec2i* newvalue_;
  ::IvionOnline::Vec2i* oldvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Vec2i_Insert_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Vec2i_Insert_Mutation) */ {
 public:
  inline List_Vec2i_Insert_Mutation() : List_Vec2i_Insert_Mutation(nullptr) {}
  virtual ~List_Vec2i_Insert_Mutation();

  List_Vec2i_Insert_Mutation(const List_Vec2i_Insert_Mutation& from);
  List_Vec2i_Insert_Mutation(List_Vec2i_Insert_Mutation&& from) noexcept
    : List_Vec2i_Insert_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Vec2i_Insert_Mutation& operator=(const List_Vec2i_Insert_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Vec2i_Insert_Mutation& operator=(List_Vec2i_Insert_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Vec2i_Insert_Mutation& default_instance();

  static inline const List_Vec2i_Insert_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Vec2i_Insert_Mutation*>(
               &_List_Vec2i_Insert_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(List_Vec2i_Insert_Mutation& a, List_Vec2i_Insert_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Vec2i_Insert_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Vec2i_Insert_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Vec2i_Insert_Mutation* New() const final {
    return CreateMaybeMessage<List_Vec2i_Insert_Mutation>(nullptr);
  }

  List_Vec2i_Insert_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Vec2i_Insert_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Vec2i_Insert_Mutation& from);
  void MergeFrom(const List_Vec2i_Insert_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Vec2i_Insert_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Vec2i_Insert_Mutation";
  }
  protected:
  explicit List_Vec2i_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Vec2i NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Vec2i& newvalue() const;
  ::IvionOnline::Vec2i* release_newvalue();
  ::IvionOnline::Vec2i* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Vec2i* newvalue);
  private:
  const ::IvionOnline::Vec2i& _internal_newvalue() const;
  ::IvionOnline::Vec2i* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Vec2i* newvalue);
  ::IvionOnline::Vec2i* unsafe_arena_release_newvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Vec2i_Insert_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Vec2i* newvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Vec2i_Remove_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Vec2i_Remove_Mutation) */ {
 public:
  inline List_Vec2i_Remove_Mutation() : List_Vec2i_Remove_Mutation(nullptr) {}
  virtual ~List_Vec2i_Remove_Mutation();

  List_Vec2i_Remove_Mutation(const List_Vec2i_Remove_Mutation& from);
  List_Vec2i_Remove_Mutation(List_Vec2i_Remove_Mutation&& from) noexcept
    : List_Vec2i_Remove_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Vec2i_Remove_Mutation& operator=(const List_Vec2i_Remove_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Vec2i_Remove_Mutation& operator=(List_Vec2i_Remove_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Vec2i_Remove_Mutation& default_instance();

  static inline const List_Vec2i_Remove_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Vec2i_Remove_Mutation*>(
               &_List_Vec2i_Remove_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(List_Vec2i_Remove_Mutation& a, List_Vec2i_Remove_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Vec2i_Remove_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Vec2i_Remove_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Vec2i_Remove_Mutation* New() const final {
    return CreateMaybeMessage<List_Vec2i_Remove_Mutation>(nullptr);
  }

  List_Vec2i_Remove_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Vec2i_Remove_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Vec2i_Remove_Mutation& from);
  void MergeFrom(const List_Vec2i_Remove_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Vec2i_Remove_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Vec2i_Remove_Mutation";
  }
  protected:
  explicit List_Vec2i_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kOldValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Vec2i OldValue = 2;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Vec2i& oldvalue() const;
  ::IvionOnline::Vec2i* release_oldvalue();
  ::IvionOnline::Vec2i* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Vec2i* oldvalue);
  private:
  const ::IvionOnline::Vec2i& _internal_oldvalue() const;
  ::IvionOnline::Vec2i* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Vec2i* oldvalue);
  ::IvionOnline::Vec2i* unsafe_arena_release_oldvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Vec2i_Remove_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Vec2i* oldvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Terrain_Set_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Terrain_Set_Mutation) */ {
 public:
  inline Terrain_Set_Mutation() : Terrain_Set_Mutation(nullptr) {}
  virtual ~Terrain_Set_Mutation();

  Terrain_Set_Mutation(const Terrain_Set_Mutation& from);
  Terrain_Set_Mutation(Terrain_Set_Mutation&& from) noexcept
    : Terrain_Set_Mutation() {
    *this = ::std::move(from);
  }

  inline Terrain_Set_Mutation& operator=(const Terrain_Set_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Terrain_Set_Mutation& operator=(Terrain_Set_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Terrain_Set_Mutation& default_instance();

  static inline const Terrain_Set_Mutation* internal_default_instance() {
    return reinterpret_cast<const Terrain_Set_Mutation*>(
               &_Terrain_Set_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(Terrain_Set_Mutation& a, Terrain_Set_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(Terrain_Set_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Terrain_Set_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Terrain_Set_Mutation* New() const final {
    return CreateMaybeMessage<Terrain_Set_Mutation>(nullptr);
  }

  Terrain_Set_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Terrain_Set_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Terrain_Set_Mutation& from);
  void MergeFrom(const Terrain_Set_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Terrain_Set_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Terrain_Set_Mutation";
  }
  protected:
  explicit Terrain_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kOldValueFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Terrain NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Terrain& newvalue() const;
  ::IvionOnline::Terrain* release_newvalue();
  ::IvionOnline::Terrain* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Terrain* newvalue);
  private:
  const ::IvionOnline::Terrain& _internal_newvalue() const;
  ::IvionOnline::Terrain* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Terrain* newvalue);
  ::IvionOnline::Terrain* unsafe_arena_release_newvalue();

  // .IvionOnline.Terrain OldValue = 3;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Terrain& oldvalue() const;
  ::IvionOnline::Terrain* release_oldvalue();
  ::IvionOnline::Terrain* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Terrain* oldvalue);
  private:
  const ::IvionOnline::Terrain& _internal_oldvalue() const;
  ::IvionOnline::Terrain* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Terrain* oldvalue);
  ::IvionOnline::Terrain* unsafe_arena_release_oldvalue();

  // @@protoc_insertion_point(class_scope:IvionOnline.Terrain_Set_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Terrain* newvalue_;
  ::IvionOnline::Terrain* oldvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Terrain_Insert_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Terrain_Insert_Mutation) */ {
 public:
  inline List_Terrain_Insert_Mutation() : List_Terrain_Insert_Mutation(nullptr) {}
  virtual ~List_Terrain_Insert_Mutation();

  List_Terrain_Insert_Mutation(const List_Terrain_Insert_Mutation& from);
  List_Terrain_Insert_Mutation(List_Terrain_Insert_Mutation&& from) noexcept
    : List_Terrain_Insert_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Terrain_Insert_Mutation& operator=(const List_Terrain_Insert_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Terrain_Insert_Mutation& operator=(List_Terrain_Insert_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Terrain_Insert_Mutation& default_instance();

  static inline const List_Terrain_Insert_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Terrain_Insert_Mutation*>(
               &_List_Terrain_Insert_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(List_Terrain_Insert_Mutation& a, List_Terrain_Insert_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Terrain_Insert_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Terrain_Insert_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Terrain_Insert_Mutation* New() const final {
    return CreateMaybeMessage<List_Terrain_Insert_Mutation>(nullptr);
  }

  List_Terrain_Insert_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Terrain_Insert_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Terrain_Insert_Mutation& from);
  void MergeFrom(const List_Terrain_Insert_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Terrain_Insert_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Terrain_Insert_Mutation";
  }
  protected:
  explicit List_Terrain_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Terrain NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Terrain& newvalue() const;
  ::IvionOnline::Terrain* release_newvalue();
  ::IvionOnline::Terrain* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Terrain* newvalue);
  private:
  const ::IvionOnline::Terrain& _internal_newvalue() const;
  ::IvionOnline::Terrain* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Terrain* newvalue);
  ::IvionOnline::Terrain* unsafe_arena_release_newvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Terrain_Insert_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Terrain* newvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Terrain_Remove_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Terrain_Remove_Mutation) */ {
 public:
  inline List_Terrain_Remove_Mutation() : List_Terrain_Remove_Mutation(nullptr) {}
  virtual ~List_Terrain_Remove_Mutation();

  List_Terrain_Remove_Mutation(const List_Terrain_Remove_Mutation& from);
  List_Terrain_Remove_Mutation(List_Terrain_Remove_Mutation&& from) noexcept
    : List_Terrain_Remove_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Terrain_Remove_Mutation& operator=(const List_Terrain_Remove_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Terrain_Remove_Mutation& operator=(List_Terrain_Remove_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Terrain_Remove_Mutation& default_instance();

  static inline const List_Terrain_Remove_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Terrain_Remove_Mutation*>(
               &_List_Terrain_Remove_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(List_Terrain_Remove_Mutation& a, List_Terrain_Remove_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Terrain_Remove_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Terrain_Remove_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Terrain_Remove_Mutation* New() const final {
    return CreateMaybeMessage<List_Terrain_Remove_Mutation>(nullptr);
  }

  List_Terrain_Remove_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Terrain_Remove_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Terrain_Remove_Mutation& from);
  void MergeFrom(const List_Terrain_Remove_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Terrain_Remove_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Terrain_Remove_Mutation";
  }
  protected:
  explicit List_Terrain_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kOldValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Terrain OldValue = 2;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Terrain& oldvalue() const;
  ::IvionOnline::Terrain* release_oldvalue();
  ::IvionOnline::Terrain* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Terrain* oldvalue);
  private:
  const ::IvionOnline::Terrain& _internal_oldvalue() const;
  ::IvionOnline::Terrain* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Terrain* oldvalue);
  ::IvionOnline::Terrain* unsafe_arena_release_oldvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Terrain_Remove_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Terrain* oldvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Color_Set_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Color_Set_Mutation) */ {
 public:
  inline Color_Set_Mutation() : Color_Set_Mutation(nullptr) {}
  virtual ~Color_Set_Mutation();

  Color_Set_Mutation(const Color_Set_Mutation& from);
  Color_Set_Mutation(Color_Set_Mutation&& from) noexcept
    : Color_Set_Mutation() {
    *this = ::std::move(from);
  }

  inline Color_Set_Mutation& operator=(const Color_Set_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Color_Set_Mutation& operator=(Color_Set_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Color_Set_Mutation& default_instance();

  static inline const Color_Set_Mutation* internal_default_instance() {
    return reinterpret_cast<const Color_Set_Mutation*>(
               &_Color_Set_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(Color_Set_Mutation& a, Color_Set_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(Color_Set_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Color_Set_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Color_Set_Mutation* New() const final {
    return CreateMaybeMessage<Color_Set_Mutation>(nullptr);
  }

  Color_Set_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Color_Set_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Color_Set_Mutation& from);
  void MergeFrom(const Color_Set_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Color_Set_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Color_Set_Mutation";
  }
  protected:
  explicit Color_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kOldValueFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Color NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Color& newvalue() const;
  ::IvionOnline::Color* release_newvalue();
  ::IvionOnline::Color* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Color* newvalue);
  private:
  const ::IvionOnline::Color& _internal_newvalue() const;
  ::IvionOnline::Color* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Color* newvalue);
  ::IvionOnline::Color* unsafe_arena_release_newvalue();

  // .IvionOnline.Color OldValue = 3;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Color& oldvalue() const;
  ::IvionOnline::Color* release_oldvalue();
  ::IvionOnline::Color* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Color* oldvalue);
  private:
  const ::IvionOnline::Color& _internal_oldvalue() const;
  ::IvionOnline::Color* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Color* oldvalue);
  ::IvionOnline::Color* unsafe_arena_release_oldvalue();

  // @@protoc_insertion_point(class_scope:IvionOnline.Color_Set_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Color* newvalue_;
  ::IvionOnline::Color* oldvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Color_Insert_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Color_Insert_Mutation) */ {
 public:
  inline List_Color_Insert_Mutation() : List_Color_Insert_Mutation(nullptr) {}
  virtual ~List_Color_Insert_Mutation();

  List_Color_Insert_Mutation(const List_Color_Insert_Mutation& from);
  List_Color_Insert_Mutation(List_Color_Insert_Mutation&& from) noexcept
    : List_Color_Insert_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Color_Insert_Mutation& operator=(const List_Color_Insert_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Color_Insert_Mutation& operator=(List_Color_Insert_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Color_Insert_Mutation& default_instance();

  static inline const List_Color_Insert_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Color_Insert_Mutation*>(
               &_List_Color_Insert_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(List_Color_Insert_Mutation& a, List_Color_Insert_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Color_Insert_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Color_Insert_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Color_Insert_Mutation* New() const final {
    return CreateMaybeMessage<List_Color_Insert_Mutation>(nullptr);
  }

  List_Color_Insert_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Color_Insert_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Color_Insert_Mutation& from);
  void MergeFrom(const List_Color_Insert_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Color_Insert_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Color_Insert_Mutation";
  }
  protected:
  explicit List_Color_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Color NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::Color& newvalue() const;
  ::IvionOnline::Color* release_newvalue();
  ::IvionOnline::Color* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::Color* newvalue);
  private:
  const ::IvionOnline::Color& _internal_newvalue() const;
  ::IvionOnline::Color* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::Color* newvalue);
  ::IvionOnline::Color* unsafe_arena_release_newvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Color_Insert_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Color* newvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Color_Remove_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Color_Remove_Mutation) */ {
 public:
  inline List_Color_Remove_Mutation() : List_Color_Remove_Mutation(nullptr) {}
  virtual ~List_Color_Remove_Mutation();

  List_Color_Remove_Mutation(const List_Color_Remove_Mutation& from);
  List_Color_Remove_Mutation(List_Color_Remove_Mutation&& from) noexcept
    : List_Color_Remove_Mutation() {
    *this = ::std::move(from);
  }

  inline List_Color_Remove_Mutation& operator=(const List_Color_Remove_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Color_Remove_Mutation& operator=(List_Color_Remove_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Color_Remove_Mutation& default_instance();

  static inline const List_Color_Remove_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_Color_Remove_Mutation*>(
               &_List_Color_Remove_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(List_Color_Remove_Mutation& a, List_Color_Remove_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Color_Remove_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Color_Remove_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Color_Remove_Mutation* New() const final {
    return CreateMaybeMessage<List_Color_Remove_Mutation>(nullptr);
  }

  List_Color_Remove_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Color_Remove_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Color_Remove_Mutation& from);
  void MergeFrom(const List_Color_Remove_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Color_Remove_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Color_Remove_Mutation";
  }
  protected:
  explicit List_Color_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kOldValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.Color OldValue = 2;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::Color& oldvalue() const;
  ::IvionOnline::Color* release_oldvalue();
  ::IvionOnline::Color* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::Color* oldvalue);
  private:
  const ::IvionOnline::Color& _internal_oldvalue() const;
  ::IvionOnline::Color* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::Color* oldvalue);
  ::IvionOnline::Color* unsafe_arena_release_oldvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Color_Remove_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::Color* oldvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class ObjectPath_Set_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.ObjectPath_Set_Mutation) */ {
 public:
  inline ObjectPath_Set_Mutation() : ObjectPath_Set_Mutation(nullptr) {}
  virtual ~ObjectPath_Set_Mutation();

  ObjectPath_Set_Mutation(const ObjectPath_Set_Mutation& from);
  ObjectPath_Set_Mutation(ObjectPath_Set_Mutation&& from) noexcept
    : ObjectPath_Set_Mutation() {
    *this = ::std::move(from);
  }

  inline ObjectPath_Set_Mutation& operator=(const ObjectPath_Set_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectPath_Set_Mutation& operator=(ObjectPath_Set_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectPath_Set_Mutation& default_instance();

  static inline const ObjectPath_Set_Mutation* internal_default_instance() {
    return reinterpret_cast<const ObjectPath_Set_Mutation*>(
               &_ObjectPath_Set_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(ObjectPath_Set_Mutation& a, ObjectPath_Set_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectPath_Set_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectPath_Set_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectPath_Set_Mutation* New() const final {
    return CreateMaybeMessage<ObjectPath_Set_Mutation>(nullptr);
  }

  ObjectPath_Set_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectPath_Set_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectPath_Set_Mutation& from);
  void MergeFrom(const ObjectPath_Set_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectPath_Set_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.ObjectPath_Set_Mutation";
  }
  protected:
  explicit ObjectPath_Set_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kOldValueFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.ObjectPath NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::ObjectPath& newvalue() const;
  ::IvionOnline::ObjectPath* release_newvalue();
  ::IvionOnline::ObjectPath* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::ObjectPath* newvalue);
  private:
  const ::IvionOnline::ObjectPath& _internal_newvalue() const;
  ::IvionOnline::ObjectPath* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::ObjectPath* newvalue);
  ::IvionOnline::ObjectPath* unsafe_arena_release_newvalue();

  // .IvionOnline.ObjectPath OldValue = 3;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::ObjectPath& oldvalue() const;
  ::IvionOnline::ObjectPath* release_oldvalue();
  ::IvionOnline::ObjectPath* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::ObjectPath* oldvalue);
  private:
  const ::IvionOnline::ObjectPath& _internal_oldvalue() const;
  ::IvionOnline::ObjectPath* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::ObjectPath* oldvalue);
  ::IvionOnline::ObjectPath* unsafe_arena_release_oldvalue();

  // @@protoc_insertion_point(class_scope:IvionOnline.ObjectPath_Set_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::ObjectPath* newvalue_;
  ::IvionOnline::ObjectPath* oldvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_ObjectPath_Insert_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_ObjectPath_Insert_Mutation) */ {
 public:
  inline List_ObjectPath_Insert_Mutation() : List_ObjectPath_Insert_Mutation(nullptr) {}
  virtual ~List_ObjectPath_Insert_Mutation();

  List_ObjectPath_Insert_Mutation(const List_ObjectPath_Insert_Mutation& from);
  List_ObjectPath_Insert_Mutation(List_ObjectPath_Insert_Mutation&& from) noexcept
    : List_ObjectPath_Insert_Mutation() {
    *this = ::std::move(from);
  }

  inline List_ObjectPath_Insert_Mutation& operator=(const List_ObjectPath_Insert_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_ObjectPath_Insert_Mutation& operator=(List_ObjectPath_Insert_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_ObjectPath_Insert_Mutation& default_instance();

  static inline const List_ObjectPath_Insert_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_ObjectPath_Insert_Mutation*>(
               &_List_ObjectPath_Insert_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(List_ObjectPath_Insert_Mutation& a, List_ObjectPath_Insert_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_ObjectPath_Insert_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_ObjectPath_Insert_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_ObjectPath_Insert_Mutation* New() const final {
    return CreateMaybeMessage<List_ObjectPath_Insert_Mutation>(nullptr);
  }

  List_ObjectPath_Insert_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_ObjectPath_Insert_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_ObjectPath_Insert_Mutation& from);
  void MergeFrom(const List_ObjectPath_Insert_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_ObjectPath_Insert_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_ObjectPath_Insert_Mutation";
  }
  protected:
  explicit List_ObjectPath_Insert_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kNewValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.ObjectPath NewValue = 2;
  bool has_newvalue() const;
  private:
  bool _internal_has_newvalue() const;
  public:
  void clear_newvalue();
  const ::IvionOnline::ObjectPath& newvalue() const;
  ::IvionOnline::ObjectPath* release_newvalue();
  ::IvionOnline::ObjectPath* mutable_newvalue();
  void set_allocated_newvalue(::IvionOnline::ObjectPath* newvalue);
  private:
  const ::IvionOnline::ObjectPath& _internal_newvalue() const;
  ::IvionOnline::ObjectPath* _internal_mutable_newvalue();
  public:
  void unsafe_arena_set_allocated_newvalue(
      ::IvionOnline::ObjectPath* newvalue);
  ::IvionOnline::ObjectPath* unsafe_arena_release_newvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_ObjectPath_Insert_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::ObjectPath* newvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_ObjectPath_Remove_Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_ObjectPath_Remove_Mutation) */ {
 public:
  inline List_ObjectPath_Remove_Mutation() : List_ObjectPath_Remove_Mutation(nullptr) {}
  virtual ~List_ObjectPath_Remove_Mutation();

  List_ObjectPath_Remove_Mutation(const List_ObjectPath_Remove_Mutation& from);
  List_ObjectPath_Remove_Mutation(List_ObjectPath_Remove_Mutation&& from) noexcept
    : List_ObjectPath_Remove_Mutation() {
    *this = ::std::move(from);
  }

  inline List_ObjectPath_Remove_Mutation& operator=(const List_ObjectPath_Remove_Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_ObjectPath_Remove_Mutation& operator=(List_ObjectPath_Remove_Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_ObjectPath_Remove_Mutation& default_instance();

  static inline const List_ObjectPath_Remove_Mutation* internal_default_instance() {
    return reinterpret_cast<const List_ObjectPath_Remove_Mutation*>(
               &_List_ObjectPath_Remove_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(List_ObjectPath_Remove_Mutation& a, List_ObjectPath_Remove_Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(List_ObjectPath_Remove_Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_ObjectPath_Remove_Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_ObjectPath_Remove_Mutation* New() const final {
    return CreateMaybeMessage<List_ObjectPath_Remove_Mutation>(nullptr);
  }

  List_ObjectPath_Remove_Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_ObjectPath_Remove_Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_ObjectPath_Remove_Mutation& from);
  void MergeFrom(const List_ObjectPath_Remove_Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_ObjectPath_Remove_Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_ObjectPath_Remove_Mutation";
  }
  protected:
  explicit List_ObjectPath_Remove_Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kOldValueFieldNumber = 2,
    kIndexFieldNumber = 3,
  };
  // .IvionOnline.ObjectPath Path = 1;
  bool has_path() const;
  private:
  bool _internal_has_path() const;
  public:
  void clear_path();
  const ::IvionOnline::ObjectPath& path() const;
  ::IvionOnline::ObjectPath* release_path();
  ::IvionOnline::ObjectPath* mutable_path();
  void set_allocated_path(::IvionOnline::ObjectPath* path);
  private:
  const ::IvionOnline::ObjectPath& _internal_path() const;
  ::IvionOnline::ObjectPath* _internal_mutable_path();
  public:
  void unsafe_arena_set_allocated_path(
      ::IvionOnline::ObjectPath* path);
  ::IvionOnline::ObjectPath* unsafe_arena_release_path();

  // .IvionOnline.ObjectPath OldValue = 2;
  bool has_oldvalue() const;
  private:
  bool _internal_has_oldvalue() const;
  public:
  void clear_oldvalue();
  const ::IvionOnline::ObjectPath& oldvalue() const;
  ::IvionOnline::ObjectPath* release_oldvalue();
  ::IvionOnline::ObjectPath* mutable_oldvalue();
  void set_allocated_oldvalue(::IvionOnline::ObjectPath* oldvalue);
  private:
  const ::IvionOnline::ObjectPath& _internal_oldvalue() const;
  ::IvionOnline::ObjectPath* _internal_mutable_oldvalue();
  public:
  void unsafe_arena_set_allocated_oldvalue(
      ::IvionOnline::ObjectPath* oldvalue);
  ::IvionOnline::ObjectPath* unsafe_arena_release_oldvalue();

  // int32 Index = 3;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IvionOnline.List_ObjectPath_Remove_Mutation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* path_;
  ::IvionOnline::ObjectPath* oldvalue_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Mutation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Mutation) */ {
 public:
  inline Mutation() : Mutation(nullptr) {}
  virtual ~Mutation();

  Mutation(const Mutation& from);
  Mutation(Mutation&& from) noexcept
    : Mutation() {
    *this = ::std::move(from);
  }

  inline Mutation& operator=(const Mutation& from) {
    CopyFrom(from);
    return *this;
  }
  inline Mutation& operator=(Mutation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Mutation& default_instance();

  enum MutCase {
    kBooleanSetMutation = 1,
    kListBooleanInsertMutation = 2,
    kListBooleanRemoveMutation = 3,
    kIntegerSetMutation = 4,
    kListIntegerInsertMutation = 5,
    kListIntegerRemoveMutation = 6,
    kVec2ISetMutation = 7,
    kListVec2IInsertMutation = 8,
    kListVec2IRemoveMutation = 9,
    kTerrainSetMutation = 10,
    kListTerrainInsertMutation = 11,
    kListTerrainRemoveMutation = 12,
    kColorSetMutation = 13,
    kListColorInsertMutation = 14,
    kListColorRemoveMutation = 15,
    kObjectPathSetMutation = 16,
    kListObjectPathInsertMutation = 17,
    kListObjectPathRemoveMutation = 18,
    MUT_NOT_SET = 0,
  };

  static inline const Mutation* internal_default_instance() {
    return reinterpret_cast<const Mutation*>(
               &_Mutation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(Mutation& a, Mutation& b) {
    a.Swap(&b);
  }
  inline void Swap(Mutation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Mutation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Mutation* New() const final {
    return CreateMaybeMessage<Mutation>(nullptr);
  }

  Mutation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Mutation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Mutation& from);
  void MergeFrom(const Mutation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Mutation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Mutation";
  }
  protected:
  explicit Mutation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBooleanSetMutationFieldNumber = 1,
    kListBooleanInsertMutationFieldNumber = 2,
    kListBooleanRemoveMutationFieldNumber = 3,
    kIntegerSetMutationFieldNumber = 4,
    kListIntegerInsertMutationFieldNumber = 5,
    kListIntegerRemoveMutationFieldNumber = 6,
    kVec2ISetMutationFieldNumber = 7,
    kListVec2IInsertMutationFieldNumber = 8,
    kListVec2IRemoveMutationFieldNumber = 9,
    kTerrainSetMutationFieldNumber = 10,
    kListTerrainInsertMutationFieldNumber = 11,
    kListTerrainRemoveMutationFieldNumber = 12,
    kColorSetMutationFieldNumber = 13,
    kListColorInsertMutationFieldNumber = 14,
    kListColorRemoveMutationFieldNumber = 15,
    kObjectPathSetMutationFieldNumber = 16,
    kListObjectPathInsertMutationFieldNumber = 17,
    kListObjectPathRemoveMutationFieldNumber = 18,
  };
  // .IvionOnline.Boolean_Set_Mutation Boolean_Set_Mutation = 1;
  bool has_boolean_set_mutation() const;
  private:
  bool _internal_has_boolean_set_mutation() const;
  public:
  void clear_boolean_set_mutation();
  const ::IvionOnline::Boolean_Set_Mutation& boolean_set_mutation() const;
  ::IvionOnline::Boolean_Set_Mutation* release_boolean_set_mutation();
  ::IvionOnline::Boolean_Set_Mutation* mutable_boolean_set_mutation();
  void set_allocated_boolean_set_mutation(::IvionOnline::Boolean_Set_Mutation* boolean_set_mutation);
  private:
  const ::IvionOnline::Boolean_Set_Mutation& _internal_boolean_set_mutation() const;
  ::IvionOnline::Boolean_Set_Mutation* _internal_mutable_boolean_set_mutation();
  public:
  void unsafe_arena_set_allocated_boolean_set_mutation(
      ::IvionOnline::Boolean_Set_Mutation* boolean_set_mutation);
  ::IvionOnline::Boolean_Set_Mutation* unsafe_arena_release_boolean_set_mutation();

  // .IvionOnline.List_Boolean_Insert_Mutation List_Boolean_Insert_Mutation = 2;
  bool has_list_boolean_insert_mutation() const;
  private:
  bool _internal_has_list_boolean_insert_mutation() const;
  public:
  void clear_list_boolean_insert_mutation();
  const ::IvionOnline::List_Boolean_Insert_Mutation& list_boolean_insert_mutation() const;
  ::IvionOnline::List_Boolean_Insert_Mutation* release_list_boolean_insert_mutation();
  ::IvionOnline::List_Boolean_Insert_Mutation* mutable_list_boolean_insert_mutation();
  void set_allocated_list_boolean_insert_mutation(::IvionOnline::List_Boolean_Insert_Mutation* list_boolean_insert_mutation);
  private:
  const ::IvionOnline::List_Boolean_Insert_Mutation& _internal_list_boolean_insert_mutation() const;
  ::IvionOnline::List_Boolean_Insert_Mutation* _internal_mutable_list_boolean_insert_mutation();
  public:
  void unsafe_arena_set_allocated_list_boolean_insert_mutation(
      ::IvionOnline::List_Boolean_Insert_Mutation* list_boolean_insert_mutation);
  ::IvionOnline::List_Boolean_Insert_Mutation* unsafe_arena_release_list_boolean_insert_mutation();

  // .IvionOnline.List_Boolean_Remove_Mutation List_Boolean_Remove_Mutation = 3;
  bool has_list_boolean_remove_mutation() const;
  private:
  bool _internal_has_list_boolean_remove_mutation() const;
  public:
  void clear_list_boolean_remove_mutation();
  const ::IvionOnline::List_Boolean_Remove_Mutation& list_boolean_remove_mutation() const;
  ::IvionOnline::List_Boolean_Remove_Mutation* release_list_boolean_remove_mutation();
  ::IvionOnline::List_Boolean_Remove_Mutation* mutable_list_boolean_remove_mutation();
  void set_allocated_list_boolean_remove_mutation(::IvionOnline::List_Boolean_Remove_Mutation* list_boolean_remove_mutation);
  private:
  const ::IvionOnline::List_Boolean_Remove_Mutation& _internal_list_boolean_remove_mutation() const;
  ::IvionOnline::List_Boolean_Remove_Mutation* _internal_mutable_list_boolean_remove_mutation();
  public:
  void unsafe_arena_set_allocated_list_boolean_remove_mutation(
      ::IvionOnline::List_Boolean_Remove_Mutation* list_boolean_remove_mutation);
  ::IvionOnline::List_Boolean_Remove_Mutation* unsafe_arena_release_list_boolean_remove_mutation();

  // .IvionOnline.Integer_Set_Mutation Integer_Set_Mutation = 4;
  bool has_integer_set_mutation() const;
  private:
  bool _internal_has_integer_set_mutation() const;
  public:
  void clear_integer_set_mutation();
  const ::IvionOnline::Integer_Set_Mutation& integer_set_mutation() const;
  ::IvionOnline::Integer_Set_Mutation* release_integer_set_mutation();
  ::IvionOnline::Integer_Set_Mutation* mutable_integer_set_mutation();
  void set_allocated_integer_set_mutation(::IvionOnline::Integer_Set_Mutation* integer_set_mutation);
  private:
  const ::IvionOnline::Integer_Set_Mutation& _internal_integer_set_mutation() const;
  ::IvionOnline::Integer_Set_Mutation* _internal_mutable_integer_set_mutation();
  public:
  void unsafe_arena_set_allocated_integer_set_mutation(
      ::IvionOnline::Integer_Set_Mutation* integer_set_mutation);
  ::IvionOnline::Integer_Set_Mutation* unsafe_arena_release_integer_set_mutation();

  // .IvionOnline.List_Integer_Insert_Mutation List_Integer_Insert_Mutation = 5;
  bool has_list_integer_insert_mutation() const;
  private:
  bool _internal_has_list_integer_insert_mutation() const;
  public:
  void clear_list_integer_insert_mutation();
  const ::IvionOnline::List_Integer_Insert_Mutation& list_integer_insert_mutation() const;
  ::IvionOnline::List_Integer_Insert_Mutation* release_list_integer_insert_mutation();
  ::IvionOnline::List_Integer_Insert_Mutation* mutable_list_integer_insert_mutation();
  void set_allocated_list_integer_insert_mutation(::IvionOnline::List_Integer_Insert_Mutation* list_integer_insert_mutation);
  private:
  const ::IvionOnline::List_Integer_Insert_Mutation& _internal_list_integer_insert_mutation() const;
  ::IvionOnline::List_Integer_Insert_Mutation* _internal_mutable_list_integer_insert_mutation();
  public:
  void unsafe_arena_set_allocated_list_integer_insert_mutation(
      ::IvionOnline::List_Integer_Insert_Mutation* list_integer_insert_mutation);
  ::IvionOnline::List_Integer_Insert_Mutation* unsafe_arena_release_list_integer_insert_mutation();

  // .IvionOnline.List_Integer_Remove_Mutation List_Integer_Remove_Mutation = 6;
  bool has_list_integer_remove_mutation() const;
  private:
  bool _internal_has_list_integer_remove_mutation() const;
  public:
  void clear_list_integer_remove_mutation();
  const ::IvionOnline::List_Integer_Remove_Mutation& list_integer_remove_mutation() const;
  ::IvionOnline::List_Integer_Remove_Mutation* release_list_integer_remove_mutation();
  ::IvionOnline::List_Integer_Remove_Mutation* mutable_list_integer_remove_mutation();
  void set_allocated_list_integer_remove_mutation(::IvionOnline::List_Integer_Remove_Mutation* list_integer_remove_mutation);
  private:
  const ::IvionOnline::List_Integer_Remove_Mutation& _internal_list_integer_remove_mutation() const;
  ::IvionOnline::List_Integer_Remove_Mutation* _internal_mutable_list_integer_remove_mutation();
  public:
  void unsafe_arena_set_allocated_list_integer_remove_mutation(
      ::IvionOnline::List_Integer_Remove_Mutation* list_integer_remove_mutation);
  ::IvionOnline::List_Integer_Remove_Mutation* unsafe_arena_release_list_integer_remove_mutation();

  // .IvionOnline.Vec2i_Set_Mutation Vec2i_Set_Mutation = 7;
  bool has_vec2i_set_mutation() const;
  private:
  bool _internal_has_vec2i_set_mutation() const;
  public:
  void clear_vec2i_set_mutation();
  const ::IvionOnline::Vec2i_Set_Mutation& vec2i_set_mutation() const;
  ::IvionOnline::Vec2i_Set_Mutation* release_vec2i_set_mutation();
  ::IvionOnline::Vec2i_Set_Mutation* mutable_vec2i_set_mutation();
  void set_allocated_vec2i_set_mutation(::IvionOnline::Vec2i_Set_Mutation* vec2i_set_mutation);
  private:
  const ::IvionOnline::Vec2i_Set_Mutation& _internal_vec2i_set_mutation() const;
  ::IvionOnline::Vec2i_Set_Mutation* _internal_mutable_vec2i_set_mutation();
  public:
  void unsafe_arena_set_allocated_vec2i_set_mutation(
      ::IvionOnline::Vec2i_Set_Mutation* vec2i_set_mutation);
  ::IvionOnline::Vec2i_Set_Mutation* unsafe_arena_release_vec2i_set_mutation();

  // .IvionOnline.List_Vec2i_Insert_Mutation List_Vec2i_Insert_Mutation = 8;
  bool has_list_vec2i_insert_mutation() const;
  private:
  bool _internal_has_list_vec2i_insert_mutation() const;
  public:
  void clear_list_vec2i_insert_mutation();
  const ::IvionOnline::List_Vec2i_Insert_Mutation& list_vec2i_insert_mutation() const;
  ::IvionOnline::List_Vec2i_Insert_Mutation* release_list_vec2i_insert_mutation();
  ::IvionOnline::List_Vec2i_Insert_Mutation* mutable_list_vec2i_insert_mutation();
  void set_allocated_list_vec2i_insert_mutation(::IvionOnline::List_Vec2i_Insert_Mutation* list_vec2i_insert_mutation);
  private:
  const ::IvionOnline::List_Vec2i_Insert_Mutation& _internal_list_vec2i_insert_mutation() const;
  ::IvionOnline::List_Vec2i_Insert_Mutation* _internal_mutable_list_vec2i_insert_mutation();
  public:
  void unsafe_arena_set_allocated_list_vec2i_insert_mutation(
      ::IvionOnline::List_Vec2i_Insert_Mutation* list_vec2i_insert_mutation);
  ::IvionOnline::List_Vec2i_Insert_Mutation* unsafe_arena_release_list_vec2i_insert_mutation();

  // .IvionOnline.List_Vec2i_Remove_Mutation List_Vec2i_Remove_Mutation = 9;
  bool has_list_vec2i_remove_mutation() const;
  private:
  bool _internal_has_list_vec2i_remove_mutation() const;
  public:
  void clear_list_vec2i_remove_mutation();
  const ::IvionOnline::List_Vec2i_Remove_Mutation& list_vec2i_remove_mutation() const;
  ::IvionOnline::List_Vec2i_Remove_Mutation* release_list_vec2i_remove_mutation();
  ::IvionOnline::List_Vec2i_Remove_Mutation* mutable_list_vec2i_remove_mutation();
  void set_allocated_list_vec2i_remove_mutation(::IvionOnline::List_Vec2i_Remove_Mutation* list_vec2i_remove_mutation);
  private:
  const ::IvionOnline::List_Vec2i_Remove_Mutation& _internal_list_vec2i_remove_mutation() const;
  ::IvionOnline::List_Vec2i_Remove_Mutation* _internal_mutable_list_vec2i_remove_mutation();
  public:
  void unsafe_arena_set_allocated_list_vec2i_remove_mutation(
      ::IvionOnline::List_Vec2i_Remove_Mutation* list_vec2i_remove_mutation);
  ::IvionOnline::List_Vec2i_Remove_Mutation* unsafe_arena_release_list_vec2i_remove_mutation();

  // .IvionOnline.Terrain_Set_Mutation Terrain_Set_Mutation = 10;
  bool has_terrain_set_mutation() const;
  private:
  bool _internal_has_terrain_set_mutation() const;
  public:
  void clear_terrain_set_mutation();
  const ::IvionOnline::Terrain_Set_Mutation& terrain_set_mutation() const;
  ::IvionOnline::Terrain_Set_Mutation* release_terrain_set_mutation();
  ::IvionOnline::Terrain_Set_Mutation* mutable_terrain_set_mutation();
  void set_allocated_terrain_set_mutation(::IvionOnline::Terrain_Set_Mutation* terrain_set_mutation);
  private:
  const ::IvionOnline::Terrain_Set_Mutation& _internal_terrain_set_mutation() const;
  ::IvionOnline::Terrain_Set_Mutation* _internal_mutable_terrain_set_mutation();
  public:
  void unsafe_arena_set_allocated_terrain_set_mutation(
      ::IvionOnline::Terrain_Set_Mutation* terrain_set_mutation);
  ::IvionOnline::Terrain_Set_Mutation* unsafe_arena_release_terrain_set_mutation();

  // .IvionOnline.List_Terrain_Insert_Mutation List_Terrain_Insert_Mutation = 11;
  bool has_list_terrain_insert_mutation() const;
  private:
  bool _internal_has_list_terrain_insert_mutation() const;
  public:
  void clear_list_terrain_insert_mutation();
  const ::IvionOnline::List_Terrain_Insert_Mutation& list_terrain_insert_mutation() const;
  ::IvionOnline::List_Terrain_Insert_Mutation* release_list_terrain_insert_mutation();
  ::IvionOnline::List_Terrain_Insert_Mutation* mutable_list_terrain_insert_mutation();
  void set_allocated_list_terrain_insert_mutation(::IvionOnline::List_Terrain_Insert_Mutation* list_terrain_insert_mutation);
  private:
  const ::IvionOnline::List_Terrain_Insert_Mutation& _internal_list_terrain_insert_mutation() const;
  ::IvionOnline::List_Terrain_Insert_Mutation* _internal_mutable_list_terrain_insert_mutation();
  public:
  void unsafe_arena_set_allocated_list_terrain_insert_mutation(
      ::IvionOnline::List_Terrain_Insert_Mutation* list_terrain_insert_mutation);
  ::IvionOnline::List_Terrain_Insert_Mutation* unsafe_arena_release_list_terrain_insert_mutation();

  // .IvionOnline.List_Terrain_Remove_Mutation List_Terrain_Remove_Mutation = 12;
  bool has_list_terrain_remove_mutation() const;
  private:
  bool _internal_has_list_terrain_remove_mutation() const;
  public:
  void clear_list_terrain_remove_mutation();
  const ::IvionOnline::List_Terrain_Remove_Mutation& list_terrain_remove_mutation() const;
  ::IvionOnline::List_Terrain_Remove_Mutation* release_list_terrain_remove_mutation();
  ::IvionOnline::List_Terrain_Remove_Mutation* mutable_list_terrain_remove_mutation();
  void set_allocated_list_terrain_remove_mutation(::IvionOnline::List_Terrain_Remove_Mutation* list_terrain_remove_mutation);
  private:
  const ::IvionOnline::List_Terrain_Remove_Mutation& _internal_list_terrain_remove_mutation() const;
  ::IvionOnline::List_Terrain_Remove_Mutation* _internal_mutable_list_terrain_remove_mutation();
  public:
  void unsafe_arena_set_allocated_list_terrain_remove_mutation(
      ::IvionOnline::List_Terrain_Remove_Mutation* list_terrain_remove_mutation);
  ::IvionOnline::List_Terrain_Remove_Mutation* unsafe_arena_release_list_terrain_remove_mutation();

  // .IvionOnline.Color_Set_Mutation Color_Set_Mutation = 13;
  bool has_color_set_mutation() const;
  private:
  bool _internal_has_color_set_mutation() const;
  public:
  void clear_color_set_mutation();
  const ::IvionOnline::Color_Set_Mutation& color_set_mutation() const;
  ::IvionOnline::Color_Set_Mutation* release_color_set_mutation();
  ::IvionOnline::Color_Set_Mutation* mutable_color_set_mutation();
  void set_allocated_color_set_mutation(::IvionOnline::Color_Set_Mutation* color_set_mutation);
  private:
  const ::IvionOnline::Color_Set_Mutation& _internal_color_set_mutation() const;
  ::IvionOnline::Color_Set_Mutation* _internal_mutable_color_set_mutation();
  public:
  void unsafe_arena_set_allocated_color_set_mutation(
      ::IvionOnline::Color_Set_Mutation* color_set_mutation);
  ::IvionOnline::Color_Set_Mutation* unsafe_arena_release_color_set_mutation();

  // .IvionOnline.List_Color_Insert_Mutation List_Color_Insert_Mutation = 14;
  bool has_list_color_insert_mutation() const;
  private:
  bool _internal_has_list_color_insert_mutation() const;
  public:
  void clear_list_color_insert_mutation();
  const ::IvionOnline::List_Color_Insert_Mutation& list_color_insert_mutation() const;
  ::IvionOnline::List_Color_Insert_Mutation* release_list_color_insert_mutation();
  ::IvionOnline::List_Color_Insert_Mutation* mutable_list_color_insert_mutation();
  void set_allocated_list_color_insert_mutation(::IvionOnline::List_Color_Insert_Mutation* list_color_insert_mutation);
  private:
  const ::IvionOnline::List_Color_Insert_Mutation& _internal_list_color_insert_mutation() const;
  ::IvionOnline::List_Color_Insert_Mutation* _internal_mutable_list_color_insert_mutation();
  public:
  void unsafe_arena_set_allocated_list_color_insert_mutation(
      ::IvionOnline::List_Color_Insert_Mutation* list_color_insert_mutation);
  ::IvionOnline::List_Color_Insert_Mutation* unsafe_arena_release_list_color_insert_mutation();

  // .IvionOnline.List_Color_Remove_Mutation List_Color_Remove_Mutation = 15;
  bool has_list_color_remove_mutation() const;
  private:
  bool _internal_has_list_color_remove_mutation() const;
  public:
  void clear_list_color_remove_mutation();
  const ::IvionOnline::List_Color_Remove_Mutation& list_color_remove_mutation() const;
  ::IvionOnline::List_Color_Remove_Mutation* release_list_color_remove_mutation();
  ::IvionOnline::List_Color_Remove_Mutation* mutable_list_color_remove_mutation();
  void set_allocated_list_color_remove_mutation(::IvionOnline::List_Color_Remove_Mutation* list_color_remove_mutation);
  private:
  const ::IvionOnline::List_Color_Remove_Mutation& _internal_list_color_remove_mutation() const;
  ::IvionOnline::List_Color_Remove_Mutation* _internal_mutable_list_color_remove_mutation();
  public:
  void unsafe_arena_set_allocated_list_color_remove_mutation(
      ::IvionOnline::List_Color_Remove_Mutation* list_color_remove_mutation);
  ::IvionOnline::List_Color_Remove_Mutation* unsafe_arena_release_list_color_remove_mutation();

  // .IvionOnline.ObjectPath_Set_Mutation ObjectPath_Set_Mutation = 16;
  bool has_objectpath_set_mutation() const;
  private:
  bool _internal_has_objectpath_set_mutation() const;
  public:
  void clear_objectpath_set_mutation();
  const ::IvionOnline::ObjectPath_Set_Mutation& objectpath_set_mutation() const;
  ::IvionOnline::ObjectPath_Set_Mutation* release_objectpath_set_mutation();
  ::IvionOnline::ObjectPath_Set_Mutation* mutable_objectpath_set_mutation();
  void set_allocated_objectpath_set_mutation(::IvionOnline::ObjectPath_Set_Mutation* objectpath_set_mutation);
  private:
  const ::IvionOnline::ObjectPath_Set_Mutation& _internal_objectpath_set_mutation() const;
  ::IvionOnline::ObjectPath_Set_Mutation* _internal_mutable_objectpath_set_mutation();
  public:
  void unsafe_arena_set_allocated_objectpath_set_mutation(
      ::IvionOnline::ObjectPath_Set_Mutation* objectpath_set_mutation);
  ::IvionOnline::ObjectPath_Set_Mutation* unsafe_arena_release_objectpath_set_mutation();

  // .IvionOnline.List_ObjectPath_Insert_Mutation List_ObjectPath_Insert_Mutation = 17;
  bool has_list_objectpath_insert_mutation() const;
  private:
  bool _internal_has_list_objectpath_insert_mutation() const;
  public:
  void clear_list_objectpath_insert_mutation();
  const ::IvionOnline::List_ObjectPath_Insert_Mutation& list_objectpath_insert_mutation() const;
  ::IvionOnline::List_ObjectPath_Insert_Mutation* release_list_objectpath_insert_mutation();
  ::IvionOnline::List_ObjectPath_Insert_Mutation* mutable_list_objectpath_insert_mutation();
  void set_allocated_list_objectpath_insert_mutation(::IvionOnline::List_ObjectPath_Insert_Mutation* list_objectpath_insert_mutation);
  private:
  const ::IvionOnline::List_ObjectPath_Insert_Mutation& _internal_list_objectpath_insert_mutation() const;
  ::IvionOnline::List_ObjectPath_Insert_Mutation* _internal_mutable_list_objectpath_insert_mutation();
  public:
  void unsafe_arena_set_allocated_list_objectpath_insert_mutation(
      ::IvionOnline::List_ObjectPath_Insert_Mutation* list_objectpath_insert_mutation);
  ::IvionOnline::List_ObjectPath_Insert_Mutation* unsafe_arena_release_list_objectpath_insert_mutation();

  // .IvionOnline.List_ObjectPath_Remove_Mutation List_ObjectPath_Remove_Mutation = 18;
  bool has_list_objectpath_remove_mutation() const;
  private:
  bool _internal_has_list_objectpath_remove_mutation() const;
  public:
  void clear_list_objectpath_remove_mutation();
  const ::IvionOnline::List_ObjectPath_Remove_Mutation& list_objectpath_remove_mutation() const;
  ::IvionOnline::List_ObjectPath_Remove_Mutation* release_list_objectpath_remove_mutation();
  ::IvionOnline::List_ObjectPath_Remove_Mutation* mutable_list_objectpath_remove_mutation();
  void set_allocated_list_objectpath_remove_mutation(::IvionOnline::List_ObjectPath_Remove_Mutation* list_objectpath_remove_mutation);
  private:
  const ::IvionOnline::List_ObjectPath_Remove_Mutation& _internal_list_objectpath_remove_mutation() const;
  ::IvionOnline::List_ObjectPath_Remove_Mutation* _internal_mutable_list_objectpath_remove_mutation();
  public:
  void unsafe_arena_set_allocated_list_objectpath_remove_mutation(
      ::IvionOnline::List_ObjectPath_Remove_Mutation* list_objectpath_remove_mutation);
  ::IvionOnline::List_ObjectPath_Remove_Mutation* unsafe_arena_release_list_objectpath_remove_mutation();

  void clear_mut();
  MutCase mut_case() const;
  // @@protoc_insertion_point(class_scope:IvionOnline.Mutation)
 private:
  class _Internal;
  void set_has_boolean_set_mutation();
  void set_has_list_boolean_insert_mutation();
  void set_has_list_boolean_remove_mutation();
  void set_has_integer_set_mutation();
  void set_has_list_integer_insert_mutation();
  void set_has_list_integer_remove_mutation();
  void set_has_vec2i_set_mutation();
  void set_has_list_vec2i_insert_mutation();
  void set_has_list_vec2i_remove_mutation();
  void set_has_terrain_set_mutation();
  void set_has_list_terrain_insert_mutation();
  void set_has_list_terrain_remove_mutation();
  void set_has_color_set_mutation();
  void set_has_list_color_insert_mutation();
  void set_has_list_color_remove_mutation();
  void set_has_objectpath_set_mutation();
  void set_has_list_objectpath_insert_mutation();
  void set_has_list_objectpath_remove_mutation();

  inline bool has_mut() const;
  inline void clear_has_mut();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union MutUnion {
    MutUnion() {}
    ::IvionOnline::Boolean_Set_Mutation* boolean_set_mutation_;
    ::IvionOnline::List_Boolean_Insert_Mutation* list_boolean_insert_mutation_;
    ::IvionOnline::List_Boolean_Remove_Mutation* list_boolean_remove_mutation_;
    ::IvionOnline::Integer_Set_Mutation* integer_set_mutation_;
    ::IvionOnline::List_Integer_Insert_Mutation* list_integer_insert_mutation_;
    ::IvionOnline::List_Integer_Remove_Mutation* list_integer_remove_mutation_;
    ::IvionOnline::Vec2i_Set_Mutation* vec2i_set_mutation_;
    ::IvionOnline::List_Vec2i_Insert_Mutation* list_vec2i_insert_mutation_;
    ::IvionOnline::List_Vec2i_Remove_Mutation* list_vec2i_remove_mutation_;
    ::IvionOnline::Terrain_Set_Mutation* terrain_set_mutation_;
    ::IvionOnline::List_Terrain_Insert_Mutation* list_terrain_insert_mutation_;
    ::IvionOnline::List_Terrain_Remove_Mutation* list_terrain_remove_mutation_;
    ::IvionOnline::Color_Set_Mutation* color_set_mutation_;
    ::IvionOnline::List_Color_Insert_Mutation* list_color_insert_mutation_;
    ::IvionOnline::List_Color_Remove_Mutation* list_color_remove_mutation_;
    ::IvionOnline::ObjectPath_Set_Mutation* objectpath_set_mutation_;
    ::IvionOnline::List_ObjectPath_Insert_Mutation* list_objectpath_insert_mutation_;
    ::IvionOnline::List_ObjectPath_Remove_Mutation* list_objectpath_remove_mutation_;
  } mut_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class GetList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.GetList) */ {
 public:
  inline GetList() : GetList(nullptr) {}
  virtual ~GetList();

  GetList(const GetList& from);
  GetList(GetList&& from) noexcept
    : GetList() {
    *this = ::std::move(from);
  }

  inline GetList& operator=(const GetList& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetList& operator=(GetList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetList& default_instance();

  static inline const GetList* internal_default_instance() {
    return reinterpret_cast<const GetList*>(
               &_GetList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(GetList& a, GetList& b) {
    a.Swap(&b);
  }
  inline void Swap(GetList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetList* New() const final {
    return CreateMaybeMessage<GetList>(nullptr);
  }

  GetList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetList& from);
  void MergeFrom(const GetList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.GetList";
  }
  protected:
  explicit GetList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Source = 1;
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  const ::IvionOnline::ObjectPath& source() const;
  ::IvionOnline::ObjectPath* release_source();
  ::IvionOnline::ObjectPath* mutable_source();
  void set_allocated_source(::IvionOnline::ObjectPath* source);
  private:
  const ::IvionOnline::ObjectPath& _internal_source() const;
  ::IvionOnline::ObjectPath* _internal_mutable_source();
  public:
  void unsafe_arena_set_allocated_source(
      ::IvionOnline::ObjectPath* source);
  ::IvionOnline::ObjectPath* unsafe_arena_release_source();

  // .IvionOnline.List_ObjectPath Result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::List_ObjectPath& result() const;
  ::IvionOnline::List_ObjectPath* release_result();
  ::IvionOnline::List_ObjectPath* mutable_result();
  void set_allocated_result(::IvionOnline::List_ObjectPath* result);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_result() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::List_ObjectPath* result);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.GetList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* source_;
  ::IvionOnline::List_ObjectPath* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class SelectMultiple PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.SelectMultiple) */ {
 public:
  inline SelectMultiple() : SelectMultiple(nullptr) {}
  virtual ~SelectMultiple();

  SelectMultiple(const SelectMultiple& from);
  SelectMultiple(SelectMultiple&& from) noexcept
    : SelectMultiple() {
    *this = ::std::move(from);
  }

  inline SelectMultiple& operator=(const SelectMultiple& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelectMultiple& operator=(SelectMultiple&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SelectMultiple& default_instance();

  static inline const SelectMultiple* internal_default_instance() {
    return reinterpret_cast<const SelectMultiple*>(
               &_SelectMultiple_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(SelectMultiple& a, SelectMultiple& b) {
    a.Swap(&b);
  }
  inline void Swap(SelectMultiple* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SelectMultiple* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SelectMultiple* New() const final {
    return CreateMaybeMessage<SelectMultiple>(nullptr);
  }

  SelectMultiple* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SelectMultiple>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SelectMultiple& from);
  void MergeFrom(const SelectMultiple& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelectMultiple* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.SelectMultiple";
  }
  protected:
  explicit SelectMultiple(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFieldNumber = 1,
    kNumberFieldNumber = 2,
    kUpToFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // .IvionOnline.ObjectPath Source = 1;
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  const ::IvionOnline::ObjectPath& source() const;
  ::IvionOnline::ObjectPath* release_source();
  ::IvionOnline::ObjectPath* mutable_source();
  void set_allocated_source(::IvionOnline::ObjectPath* source);
  private:
  const ::IvionOnline::ObjectPath& _internal_source() const;
  ::IvionOnline::ObjectPath* _internal_mutable_source();
  public:
  void unsafe_arena_set_allocated_source(
      ::IvionOnline::ObjectPath* source);
  ::IvionOnline::ObjectPath* unsafe_arena_release_source();

  // .IvionOnline.ObjectPath Number = 2;
  bool has_number() const;
  private:
  bool _internal_has_number() const;
  public:
  void clear_number();
  const ::IvionOnline::ObjectPath& number() const;
  ::IvionOnline::ObjectPath* release_number();
  ::IvionOnline::ObjectPath* mutable_number();
  void set_allocated_number(::IvionOnline::ObjectPath* number);
  private:
  const ::IvionOnline::ObjectPath& _internal_number() const;
  ::IvionOnline::ObjectPath* _internal_mutable_number();
  public:
  void unsafe_arena_set_allocated_number(
      ::IvionOnline::ObjectPath* number);
  ::IvionOnline::ObjectPath* unsafe_arena_release_number();

  // .IvionOnline.ObjectPath UpTo = 3;
  bool has_upto() const;
  private:
  bool _internal_has_upto() const;
  public:
  void clear_upto();
  const ::IvionOnline::ObjectPath& upto() const;
  ::IvionOnline::ObjectPath* release_upto();
  ::IvionOnline::ObjectPath* mutable_upto();
  void set_allocated_upto(::IvionOnline::ObjectPath* upto);
  private:
  const ::IvionOnline::ObjectPath& _internal_upto() const;
  ::IvionOnline::ObjectPath* _internal_mutable_upto();
  public:
  void unsafe_arena_set_allocated_upto(
      ::IvionOnline::ObjectPath* upto);
  ::IvionOnline::ObjectPath* unsafe_arena_release_upto();

  // .IvionOnline.List_ObjectPath Result = 4;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::List_ObjectPath& result() const;
  ::IvionOnline::List_ObjectPath* release_result();
  ::IvionOnline::List_ObjectPath* mutable_result();
  void set_allocated_result(::IvionOnline::List_ObjectPath* result);
  private:
  const ::IvionOnline::List_ObjectPath& _internal_result() const;
  ::IvionOnline::List_ObjectPath* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::List_ObjectPath* result);
  ::IvionOnline::List_ObjectPath* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.SelectMultiple)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* source_;
  ::IvionOnline::ObjectPath* number_;
  ::IvionOnline::ObjectPath* upto_;
  ::IvionOnline::List_ObjectPath* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class SelectExactlyOne PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.SelectExactlyOne) */ {
 public:
  inline SelectExactlyOne() : SelectExactlyOne(nullptr) {}
  virtual ~SelectExactlyOne();

  SelectExactlyOne(const SelectExactlyOne& from);
  SelectExactlyOne(SelectExactlyOne&& from) noexcept
    : SelectExactlyOne() {
    *this = ::std::move(from);
  }

  inline SelectExactlyOne& operator=(const SelectExactlyOne& from) {
    CopyFrom(from);
    return *this;
  }
  inline SelectExactlyOne& operator=(SelectExactlyOne&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SelectExactlyOne& default_instance();

  static inline const SelectExactlyOne* internal_default_instance() {
    return reinterpret_cast<const SelectExactlyOne*>(
               &_SelectExactlyOne_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(SelectExactlyOne& a, SelectExactlyOne& b) {
    a.Swap(&b);
  }
  inline void Swap(SelectExactlyOne* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SelectExactlyOne* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SelectExactlyOne* New() const final {
    return CreateMaybeMessage<SelectExactlyOne>(nullptr);
  }

  SelectExactlyOne* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SelectExactlyOne>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SelectExactlyOne& from);
  void MergeFrom(const SelectExactlyOne& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SelectExactlyOne* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.SelectExactlyOne";
  }
  protected:
  explicit SelectExactlyOne(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceFieldNumber = 1,
    kResultFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Source = 1;
  bool has_source() const;
  private:
  bool _internal_has_source() const;
  public:
  void clear_source();
  const ::IvionOnline::ObjectPath& source() const;
  ::IvionOnline::ObjectPath* release_source();
  ::IvionOnline::ObjectPath* mutable_source();
  void set_allocated_source(::IvionOnline::ObjectPath* source);
  private:
  const ::IvionOnline::ObjectPath& _internal_source() const;
  ::IvionOnline::ObjectPath* _internal_mutable_source();
  public:
  void unsafe_arena_set_allocated_source(
      ::IvionOnline::ObjectPath* source);
  ::IvionOnline::ObjectPath* unsafe_arena_release_source();

  // .IvionOnline.ObjectPath Result = 2;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::ObjectPath& result() const;
  ::IvionOnline::ObjectPath* release_result();
  ::IvionOnline::ObjectPath* mutable_result();
  void set_allocated_result(::IvionOnline::ObjectPath* result);
  private:
  const ::IvionOnline::ObjectPath& _internal_result() const;
  ::IvionOnline::ObjectPath* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::ObjectPath* result);
  ::IvionOnline::ObjectPath* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.SelectExactlyOne)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* source_;
  ::IvionOnline::ObjectPath* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class AssertControlOrHeroic PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.AssertControlOrHeroic) */ {
 public:
  inline AssertControlOrHeroic() : AssertControlOrHeroic(nullptr) {}
  virtual ~AssertControlOrHeroic();

  AssertControlOrHeroic(const AssertControlOrHeroic& from);
  AssertControlOrHeroic(AssertControlOrHeroic&& from) noexcept
    : AssertControlOrHeroic() {
    *this = ::std::move(from);
  }

  inline AssertControlOrHeroic& operator=(const AssertControlOrHeroic& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssertControlOrHeroic& operator=(AssertControlOrHeroic&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AssertControlOrHeroic& default_instance();

  static inline const AssertControlOrHeroic* internal_default_instance() {
    return reinterpret_cast<const AssertControlOrHeroic*>(
               &_AssertControlOrHeroic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(AssertControlOrHeroic& a, AssertControlOrHeroic& b) {
    a.Swap(&b);
  }
  inline void Swap(AssertControlOrHeroic* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssertControlOrHeroic* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AssertControlOrHeroic* New() const final {
    return CreateMaybeMessage<AssertControlOrHeroic>(nullptr);
  }

  AssertControlOrHeroic* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AssertControlOrHeroic>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AssertControlOrHeroic& from);
  void MergeFrom(const AssertControlOrHeroic& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssertControlOrHeroic* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.AssertControlOrHeroic";
  }
  protected:
  explicit AssertControlOrHeroic(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IvionOnline.AssertControlOrHeroic)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class AssertControllerHasPriority PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.AssertControllerHasPriority) */ {
 public:
  inline AssertControllerHasPriority() : AssertControllerHasPriority(nullptr) {}
  virtual ~AssertControllerHasPriority();

  AssertControllerHasPriority(const AssertControllerHasPriority& from);
  AssertControllerHasPriority(AssertControllerHasPriority&& from) noexcept
    : AssertControllerHasPriority() {
    *this = ::std::move(from);
  }

  inline AssertControllerHasPriority& operator=(const AssertControllerHasPriority& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssertControllerHasPriority& operator=(AssertControllerHasPriority&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AssertControllerHasPriority& default_instance();

  static inline const AssertControllerHasPriority* internal_default_instance() {
    return reinterpret_cast<const AssertControllerHasPriority*>(
               &_AssertControllerHasPriority_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(AssertControllerHasPriority& a, AssertControllerHasPriority& b) {
    a.Swap(&b);
  }
  inline void Swap(AssertControllerHasPriority* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssertControllerHasPriority* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AssertControllerHasPriority* New() const final {
    return CreateMaybeMessage<AssertControllerHasPriority>(nullptr);
  }

  AssertControllerHasPriority* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AssertControllerHasPriority>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AssertControllerHasPriority& from);
  void MergeFrom(const AssertControllerHasPriority& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssertControllerHasPriority* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.AssertControllerHasPriority";
  }
  protected:
  explicit AssertControllerHasPriority(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IvionOnline.AssertControllerHasPriority)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class AssertStackEmptyOrInstant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.AssertStackEmptyOrInstant) */ {
 public:
  inline AssertStackEmptyOrInstant() : AssertStackEmptyOrInstant(nullptr) {}
  virtual ~AssertStackEmptyOrInstant();

  AssertStackEmptyOrInstant(const AssertStackEmptyOrInstant& from);
  AssertStackEmptyOrInstant(AssertStackEmptyOrInstant&& from) noexcept
    : AssertStackEmptyOrInstant() {
    *this = ::std::move(from);
  }

  inline AssertStackEmptyOrInstant& operator=(const AssertStackEmptyOrInstant& from) {
    CopyFrom(from);
    return *this;
  }
  inline AssertStackEmptyOrInstant& operator=(AssertStackEmptyOrInstant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AssertStackEmptyOrInstant& default_instance();

  static inline const AssertStackEmptyOrInstant* internal_default_instance() {
    return reinterpret_cast<const AssertStackEmptyOrInstant*>(
               &_AssertStackEmptyOrInstant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(AssertStackEmptyOrInstant& a, AssertStackEmptyOrInstant& b) {
    a.Swap(&b);
  }
  inline void Swap(AssertStackEmptyOrInstant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AssertStackEmptyOrInstant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AssertStackEmptyOrInstant* New() const final {
    return CreateMaybeMessage<AssertStackEmptyOrInstant>(nullptr);
  }

  AssertStackEmptyOrInstant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AssertStackEmptyOrInstant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AssertStackEmptyOrInstant& from);
  void MergeFrom(const AssertStackEmptyOrInstant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AssertStackEmptyOrInstant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.AssertStackEmptyOrInstant";
  }
  protected:
  explicit AssertStackEmptyOrInstant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:IvionOnline.AssertStackEmptyOrInstant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class PayCost PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.PayCost) */ {
 public:
  inline PayCost() : PayCost(nullptr) {}
  virtual ~PayCost();

  PayCost(const PayCost& from);
  PayCost(PayCost&& from) noexcept
    : PayCost() {
    *this = ::std::move(from);
  }

  inline PayCost& operator=(const PayCost& from) {
    CopyFrom(from);
    return *this;
  }
  inline PayCost& operator=(PayCost&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PayCost& default_instance();

  static inline const PayCost* internal_default_instance() {
    return reinterpret_cast<const PayCost*>(
               &_PayCost_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(PayCost& a, PayCost& b) {
    a.Swap(&b);
  }
  inline void Swap(PayCost* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PayCost* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PayCost* New() const final {
    return CreateMaybeMessage<PayCost>(nullptr);
  }

  PayCost* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PayCost>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PayCost& from);
  void MergeFrom(const PayCost& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PayCost* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.PayCost";
  }
  protected:
  explicit PayCost(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kCardFieldNumber = 2,
    kActionCostReductionFieldNumber = 3,
    kPowerCostReductionFieldNumber = 4,
    kCostReductionFieldNumber = 5,
    kFreeFieldNumber = 6,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Card = 2;
  bool has_card() const;
  private:
  bool _internal_has_card() const;
  public:
  void clear_card();
  const ::IvionOnline::ObjectPath& card() const;
  ::IvionOnline::ObjectPath* release_card();
  ::IvionOnline::ObjectPath* mutable_card();
  void set_allocated_card(::IvionOnline::ObjectPath* card);
  private:
  const ::IvionOnline::ObjectPath& _internal_card() const;
  ::IvionOnline::ObjectPath* _internal_mutable_card();
  public:
  void unsafe_arena_set_allocated_card(
      ::IvionOnline::ObjectPath* card);
  ::IvionOnline::ObjectPath* unsafe_arena_release_card();

  // .IvionOnline.ObjectPath ActionCostReduction = 3;
  bool has_actioncostreduction() const;
  private:
  bool _internal_has_actioncostreduction() const;
  public:
  void clear_actioncostreduction();
  const ::IvionOnline::ObjectPath& actioncostreduction() const;
  ::IvionOnline::ObjectPath* release_actioncostreduction();
  ::IvionOnline::ObjectPath* mutable_actioncostreduction();
  void set_allocated_actioncostreduction(::IvionOnline::ObjectPath* actioncostreduction);
  private:
  const ::IvionOnline::ObjectPath& _internal_actioncostreduction() const;
  ::IvionOnline::ObjectPath* _internal_mutable_actioncostreduction();
  public:
  void unsafe_arena_set_allocated_actioncostreduction(
      ::IvionOnline::ObjectPath* actioncostreduction);
  ::IvionOnline::ObjectPath* unsafe_arena_release_actioncostreduction();

  // .IvionOnline.ObjectPath PowerCostReduction = 4;
  bool has_powercostreduction() const;
  private:
  bool _internal_has_powercostreduction() const;
  public:
  void clear_powercostreduction();
  const ::IvionOnline::ObjectPath& powercostreduction() const;
  ::IvionOnline::ObjectPath* release_powercostreduction();
  ::IvionOnline::ObjectPath* mutable_powercostreduction();
  void set_allocated_powercostreduction(::IvionOnline::ObjectPath* powercostreduction);
  private:
  const ::IvionOnline::ObjectPath& _internal_powercostreduction() const;
  ::IvionOnline::ObjectPath* _internal_mutable_powercostreduction();
  public:
  void unsafe_arena_set_allocated_powercostreduction(
      ::IvionOnline::ObjectPath* powercostreduction);
  ::IvionOnline::ObjectPath* unsafe_arena_release_powercostreduction();

  // .IvionOnline.ObjectPath CostReduction = 5;
  bool has_costreduction() const;
  private:
  bool _internal_has_costreduction() const;
  public:
  void clear_costreduction();
  const ::IvionOnline::ObjectPath& costreduction() const;
  ::IvionOnline::ObjectPath* release_costreduction();
  ::IvionOnline::ObjectPath* mutable_costreduction();
  void set_allocated_costreduction(::IvionOnline::ObjectPath* costreduction);
  private:
  const ::IvionOnline::ObjectPath& _internal_costreduction() const;
  ::IvionOnline::ObjectPath* _internal_mutable_costreduction();
  public:
  void unsafe_arena_set_allocated_costreduction(
      ::IvionOnline::ObjectPath* costreduction);
  ::IvionOnline::ObjectPath* unsafe_arena_release_costreduction();

  // .IvionOnline.ObjectPath Free = 6;
  bool has_free() const;
  private:
  bool _internal_has_free() const;
  public:
  void clear_free();
  const ::IvionOnline::ObjectPath& free() const;
  ::IvionOnline::ObjectPath* release_free();
  ::IvionOnline::ObjectPath* mutable_free();
  void set_allocated_free(::IvionOnline::ObjectPath* free);
  private:
  const ::IvionOnline::ObjectPath& _internal_free() const;
  ::IvionOnline::ObjectPath* _internal_mutable_free();
  public:
  void unsafe_arena_set_allocated_free(
      ::IvionOnline::ObjectPath* free);
  ::IvionOnline::ObjectPath* unsafe_arena_release_free();

  // @@protoc_insertion_point(class_scope:IvionOnline.PayCost)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* card_;
  ::IvionOnline::ObjectPath* actioncostreduction_;
  ::IvionOnline::ObjectPath* powercostreduction_;
  ::IvionOnline::ObjectPath* costreduction_;
  ::IvionOnline::ObjectPath* free_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class PlayGainResources PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.PlayGainResources) */ {
 public:
  inline PlayGainResources() : PlayGainResources(nullptr) {}
  virtual ~PlayGainResources();

  PlayGainResources(const PlayGainResources& from);
  PlayGainResources(PlayGainResources&& from) noexcept
    : PlayGainResources() {
    *this = ::std::move(from);
  }

  inline PlayGainResources& operator=(const PlayGainResources& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayGainResources& operator=(PlayGainResources&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayGainResources& default_instance();

  static inline const PlayGainResources* internal_default_instance() {
    return reinterpret_cast<const PlayGainResources*>(
               &_PlayGainResources_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(PlayGainResources& a, PlayGainResources& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayGainResources* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayGainResources* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayGainResources* New() const final {
    return CreateMaybeMessage<PlayGainResources>(nullptr);
  }

  PlayGainResources* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayGainResources>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayGainResources& from);
  void MergeFrom(const PlayGainResources& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayGainResources* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.PlayGainResources";
  }
  protected:
  explicit PlayGainResources(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kCardFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Card = 2;
  bool has_card() const;
  private:
  bool _internal_has_card() const;
  public:
  void clear_card();
  const ::IvionOnline::ObjectPath& card() const;
  ::IvionOnline::ObjectPath* release_card();
  ::IvionOnline::ObjectPath* mutable_card();
  void set_allocated_card(::IvionOnline::ObjectPath* card);
  private:
  const ::IvionOnline::ObjectPath& _internal_card() const;
  ::IvionOnline::ObjectPath* _internal_mutable_card();
  public:
  void unsafe_arena_set_allocated_card(
      ::IvionOnline::ObjectPath* card);
  ::IvionOnline::ObjectPath* unsafe_arena_release_card();

  // @@protoc_insertion_point(class_scope:IvionOnline.PlayGainResources)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* card_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class RefundCost PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.RefundCost) */ {
 public:
  inline RefundCost() : RefundCost(nullptr) {}
  virtual ~RefundCost();

  RefundCost(const RefundCost& from);
  RefundCost(RefundCost&& from) noexcept
    : RefundCost() {
    *this = ::std::move(from);
  }

  inline RefundCost& operator=(const RefundCost& from) {
    CopyFrom(from);
    return *this;
  }
  inline RefundCost& operator=(RefundCost&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RefundCost& default_instance();

  static inline const RefundCost* internal_default_instance() {
    return reinterpret_cast<const RefundCost*>(
               &_RefundCost_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(RefundCost& a, RefundCost& b) {
    a.Swap(&b);
  }
  inline void Swap(RefundCost* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RefundCost* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RefundCost* New() const final {
    return CreateMaybeMessage<RefundCost>(nullptr);
  }

  RefundCost* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RefundCost>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RefundCost& from);
  void MergeFrom(const RefundCost& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RefundCost* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.RefundCost";
  }
  protected:
  explicit RefundCost(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kCardFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Card = 2;
  bool has_card() const;
  private:
  bool _internal_has_card() const;
  public:
  void clear_card();
  const ::IvionOnline::ObjectPath& card() const;
  ::IvionOnline::ObjectPath* release_card();
  ::IvionOnline::ObjectPath* mutable_card();
  void set_allocated_card(::IvionOnline::ObjectPath* card);
  private:
  const ::IvionOnline::ObjectPath& _internal_card() const;
  ::IvionOnline::ObjectPath* _internal_mutable_card();
  public:
  void unsafe_arena_set_allocated_card(
      ::IvionOnline::ObjectPath* card);
  ::IvionOnline::ObjectPath* unsafe_arena_release_card();

  // @@protoc_insertion_point(class_scope:IvionOnline.RefundCost)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* card_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class GainActions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.GainActions) */ {
 public:
  inline GainActions() : GainActions(nullptr) {}
  virtual ~GainActions();

  GainActions(const GainActions& from);
  GainActions(GainActions&& from) noexcept
    : GainActions() {
    *this = ::std::move(from);
  }

  inline GainActions& operator=(const GainActions& from) {
    CopyFrom(from);
    return *this;
  }
  inline GainActions& operator=(GainActions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GainActions& default_instance();

  static inline const GainActions* internal_default_instance() {
    return reinterpret_cast<const GainActions*>(
               &_GainActions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(GainActions& a, GainActions& b) {
    a.Swap(&b);
  }
  inline void Swap(GainActions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GainActions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GainActions* New() const final {
    return CreateMaybeMessage<GainActions>(nullptr);
  }

  GainActions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GainActions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GainActions& from);
  void MergeFrom(const GainActions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GainActions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.GainActions";
  }
  protected:
  explicit GainActions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::IvionOnline::ObjectPath& value() const;
  ::IvionOnline::ObjectPath* release_value();
  ::IvionOnline::ObjectPath* mutable_value();
  void set_allocated_value(::IvionOnline::ObjectPath* value);
  private:
  const ::IvionOnline::ObjectPath& _internal_value() const;
  ::IvionOnline::ObjectPath* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::IvionOnline::ObjectPath* value);
  ::IvionOnline::ObjectPath* unsafe_arena_release_value();

  // @@protoc_insertion_point(class_scope:IvionOnline.GainActions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class GainPower PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.GainPower) */ {
 public:
  inline GainPower() : GainPower(nullptr) {}
  virtual ~GainPower();

  GainPower(const GainPower& from);
  GainPower(GainPower&& from) noexcept
    : GainPower() {
    *this = ::std::move(from);
  }

  inline GainPower& operator=(const GainPower& from) {
    CopyFrom(from);
    return *this;
  }
  inline GainPower& operator=(GainPower&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GainPower& default_instance();

  static inline const GainPower* internal_default_instance() {
    return reinterpret_cast<const GainPower*>(
               &_GainPower_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(GainPower& a, GainPower& b) {
    a.Swap(&b);
  }
  inline void Swap(GainPower* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GainPower* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GainPower* New() const final {
    return CreateMaybeMessage<GainPower>(nullptr);
  }

  GainPower* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GainPower>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GainPower& from);
  void MergeFrom(const GainPower& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GainPower* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.GainPower";
  }
  protected:
  explicit GainPower(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::IvionOnline::ObjectPath& value() const;
  ::IvionOnline::ObjectPath* release_value();
  ::IvionOnline::ObjectPath* mutable_value();
  void set_allocated_value(::IvionOnline::ObjectPath* value);
  private:
  const ::IvionOnline::ObjectPath& _internal_value() const;
  ::IvionOnline::ObjectPath* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::IvionOnline::ObjectPath* value);
  ::IvionOnline::ObjectPath* unsafe_arena_release_value();

  // @@protoc_insertion_point(class_scope:IvionOnline.GainPower)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Move PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Move) */ {
 public:
  inline Move() : Move(nullptr) {}
  virtual ~Move();

  Move(const Move& from);
  Move(Move&& from) noexcept
    : Move() {
    *this = ::std::move(from);
  }

  inline Move& operator=(const Move& from) {
    CopyFrom(from);
    return *this;
  }
  inline Move& operator=(Move&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Move& default_instance();

  static inline const Move* internal_default_instance() {
    return reinterpret_cast<const Move*>(
               &_Move_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(Move& a, Move& b) {
    a.Swap(&b);
  }
  inline void Swap(Move* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Move* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Move* New() const final {
    return CreateMaybeMessage<Move>(nullptr);
  }

  Move* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Move>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Move& from);
  void MergeFrom(const Move& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Move* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Move";
  }
  protected:
  explicit Move(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kDestinationFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Destination = 2;
  bool has_destination() const;
  private:
  bool _internal_has_destination() const;
  public:
  void clear_destination();
  const ::IvionOnline::ObjectPath& destination() const;
  ::IvionOnline::ObjectPath* release_destination();
  ::IvionOnline::ObjectPath* mutable_destination();
  void set_allocated_destination(::IvionOnline::ObjectPath* destination);
  private:
  const ::IvionOnline::ObjectPath& _internal_destination() const;
  ::IvionOnline::ObjectPath* _internal_mutable_destination();
  public:
  void unsafe_arena_set_allocated_destination(
      ::IvionOnline::ObjectPath* destination);
  ::IvionOnline::ObjectPath* unsafe_arena_release_destination();

  // @@protoc_insertion_point(class_scope:IvionOnline.Move)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* destination_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Travel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Travel) */ {
 public:
  inline Travel() : Travel(nullptr) {}
  virtual ~Travel();

  Travel(const Travel& from);
  Travel(Travel&& from) noexcept
    : Travel() {
    *this = ::std::move(from);
  }

  inline Travel& operator=(const Travel& from) {
    CopyFrom(from);
    return *this;
  }
  inline Travel& operator=(Travel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Travel& default_instance();

  static inline const Travel* internal_default_instance() {
    return reinterpret_cast<const Travel*>(
               &_Travel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(Travel& a, Travel& b) {
    a.Swap(&b);
  }
  inline void Swap(Travel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Travel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Travel* New() const final {
    return CreateMaybeMessage<Travel>(nullptr);
  }

  Travel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Travel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Travel& from);
  void MergeFrom(const Travel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Travel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Travel";
  }
  protected:
  explicit Travel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kDestinationFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Destination = 2;
  bool has_destination() const;
  private:
  bool _internal_has_destination() const;
  public:
  void clear_destination();
  const ::IvionOnline::ObjectPath& destination() const;
  ::IvionOnline::ObjectPath* release_destination();
  ::IvionOnline::ObjectPath* mutable_destination();
  void set_allocated_destination(::IvionOnline::ObjectPath* destination);
  private:
  const ::IvionOnline::ObjectPath& _internal_destination() const;
  ::IvionOnline::ObjectPath* _internal_mutable_destination();
  public:
  void unsafe_arena_set_allocated_destination(
      ::IvionOnline::ObjectPath* destination);
  ::IvionOnline::ObjectPath* unsafe_arena_release_destination();

  // @@protoc_insertion_point(class_scope:IvionOnline.Travel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* destination_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Damage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Damage) */ {
 public:
  inline Damage() : Damage(nullptr) {}
  virtual ~Damage();

  Damage(const Damage& from);
  Damage(Damage&& from) noexcept
    : Damage() {
    *this = ::std::move(from);
  }

  inline Damage& operator=(const Damage& from) {
    CopyFrom(from);
    return *this;
  }
  inline Damage& operator=(Damage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Damage& default_instance();

  static inline const Damage* internal_default_instance() {
    return reinterpret_cast<const Damage*>(
               &_Damage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(Damage& a, Damage& b) {
    a.Swap(&b);
  }
  inline void Swap(Damage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Damage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Damage* New() const final {
    return CreateMaybeMessage<Damage>(nullptr);
  }

  Damage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Damage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Damage& from);
  void MergeFrom(const Damage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Damage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Damage";
  }
  protected:
  explicit Damage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kAmountFieldNumber = 2,
  };
  // .IvionOnline.ObjectPath Player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  const ::IvionOnline::ObjectPath& player() const;
  ::IvionOnline::ObjectPath* release_player();
  ::IvionOnline::ObjectPath* mutable_player();
  void set_allocated_player(::IvionOnline::ObjectPath* player);
  private:
  const ::IvionOnline::ObjectPath& _internal_player() const;
  ::IvionOnline::ObjectPath* _internal_mutable_player();
  public:
  void unsafe_arena_set_allocated_player(
      ::IvionOnline::ObjectPath* player);
  ::IvionOnline::ObjectPath* unsafe_arena_release_player();

  // .IvionOnline.ObjectPath Amount = 2;
  bool has_amount() const;
  private:
  bool _internal_has_amount() const;
  public:
  void clear_amount();
  const ::IvionOnline::ObjectPath& amount() const;
  ::IvionOnline::ObjectPath* release_amount();
  ::IvionOnline::ObjectPath* mutable_amount();
  void set_allocated_amount(::IvionOnline::ObjectPath* amount);
  private:
  const ::IvionOnline::ObjectPath& _internal_amount() const;
  ::IvionOnline::ObjectPath* _internal_mutable_amount();
  public:
  void unsafe_arena_set_allocated_amount(
      ::IvionOnline::ObjectPath* amount);
  ::IvionOnline::ObjectPath* unsafe_arena_release_amount();

  // @@protoc_insertion_point(class_scope:IvionOnline.Damage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* player_;
  ::IvionOnline::ObjectPath* amount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Boolean_Constant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Boolean_Constant) */ {
 public:
  inline Boolean_Constant() : Boolean_Constant(nullptr) {}
  virtual ~Boolean_Constant();

  Boolean_Constant(const Boolean_Constant& from);
  Boolean_Constant(Boolean_Constant&& from) noexcept
    : Boolean_Constant() {
    *this = ::std::move(from);
  }

  inline Boolean_Constant& operator=(const Boolean_Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Boolean_Constant& operator=(Boolean_Constant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Boolean_Constant& default_instance();

  static inline const Boolean_Constant* internal_default_instance() {
    return reinterpret_cast<const Boolean_Constant*>(
               &_Boolean_Constant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(Boolean_Constant& a, Boolean_Constant& b) {
    a.Swap(&b);
  }
  inline void Swap(Boolean_Constant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Boolean_Constant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Boolean_Constant* New() const final {
    return CreateMaybeMessage<Boolean_Constant>(nullptr);
  }

  Boolean_Constant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Boolean_Constant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Boolean_Constant& from);
  void MergeFrom(const Boolean_Constant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Boolean_Constant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Boolean_Constant";
  }
  protected:
  explicit Boolean_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .IvionOnline.Boolean Result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::Boolean& result() const;
  ::IvionOnline::Boolean* release_result();
  ::IvionOnline::Boolean* mutable_result();
  void set_allocated_result(::IvionOnline::Boolean* result);
  private:
  const ::IvionOnline::Boolean& _internal_result() const;
  ::IvionOnline::Boolean* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::Boolean* result);
  ::IvionOnline::Boolean* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.Boolean_Constant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::Boolean* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Integer_Constant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Integer_Constant) */ {
 public:
  inline Integer_Constant() : Integer_Constant(nullptr) {}
  virtual ~Integer_Constant();

  Integer_Constant(const Integer_Constant& from);
  Integer_Constant(Integer_Constant&& from) noexcept
    : Integer_Constant() {
    *this = ::std::move(from);
  }

  inline Integer_Constant& operator=(const Integer_Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Integer_Constant& operator=(Integer_Constant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Integer_Constant& default_instance();

  static inline const Integer_Constant* internal_default_instance() {
    return reinterpret_cast<const Integer_Constant*>(
               &_Integer_Constant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(Integer_Constant& a, Integer_Constant& b) {
    a.Swap(&b);
  }
  inline void Swap(Integer_Constant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Integer_Constant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Integer_Constant* New() const final {
    return CreateMaybeMessage<Integer_Constant>(nullptr);
  }

  Integer_Constant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Integer_Constant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Integer_Constant& from);
  void MergeFrom(const Integer_Constant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Integer_Constant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Integer_Constant";
  }
  protected:
  explicit Integer_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .IvionOnline.Integer Result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::Integer& result() const;
  ::IvionOnline::Integer* release_result();
  ::IvionOnline::Integer* mutable_result();
  void set_allocated_result(::IvionOnline::Integer* result);
  private:
  const ::IvionOnline::Integer& _internal_result() const;
  ::IvionOnline::Integer* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::Integer* result);
  ::IvionOnline::Integer* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.Integer_Constant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::Integer* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Vec2i_Constant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Vec2i_Constant) */ {
 public:
  inline Vec2i_Constant() : Vec2i_Constant(nullptr) {}
  virtual ~Vec2i_Constant();

  Vec2i_Constant(const Vec2i_Constant& from);
  Vec2i_Constant(Vec2i_Constant&& from) noexcept
    : Vec2i_Constant() {
    *this = ::std::move(from);
  }

  inline Vec2i_Constant& operator=(const Vec2i_Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Vec2i_Constant& operator=(Vec2i_Constant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Vec2i_Constant& default_instance();

  static inline const Vec2i_Constant* internal_default_instance() {
    return reinterpret_cast<const Vec2i_Constant*>(
               &_Vec2i_Constant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(Vec2i_Constant& a, Vec2i_Constant& b) {
    a.Swap(&b);
  }
  inline void Swap(Vec2i_Constant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Vec2i_Constant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Vec2i_Constant* New() const final {
    return CreateMaybeMessage<Vec2i_Constant>(nullptr);
  }

  Vec2i_Constant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Vec2i_Constant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Vec2i_Constant& from);
  void MergeFrom(const Vec2i_Constant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Vec2i_Constant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Vec2i_Constant";
  }
  protected:
  explicit Vec2i_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .IvionOnline.Vec2i Result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::Vec2i& result() const;
  ::IvionOnline::Vec2i* release_result();
  ::IvionOnline::Vec2i* mutable_result();
  void set_allocated_result(::IvionOnline::Vec2i* result);
  private:
  const ::IvionOnline::Vec2i& _internal_result() const;
  ::IvionOnline::Vec2i* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::Vec2i* result);
  ::IvionOnline::Vec2i* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.Vec2i_Constant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::Vec2i* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Terrain_Constant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Terrain_Constant) */ {
 public:
  inline Terrain_Constant() : Terrain_Constant(nullptr) {}
  virtual ~Terrain_Constant();

  Terrain_Constant(const Terrain_Constant& from);
  Terrain_Constant(Terrain_Constant&& from) noexcept
    : Terrain_Constant() {
    *this = ::std::move(from);
  }

  inline Terrain_Constant& operator=(const Terrain_Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Terrain_Constant& operator=(Terrain_Constant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Terrain_Constant& default_instance();

  static inline const Terrain_Constant* internal_default_instance() {
    return reinterpret_cast<const Terrain_Constant*>(
               &_Terrain_Constant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(Terrain_Constant& a, Terrain_Constant& b) {
    a.Swap(&b);
  }
  inline void Swap(Terrain_Constant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Terrain_Constant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Terrain_Constant* New() const final {
    return CreateMaybeMessage<Terrain_Constant>(nullptr);
  }

  Terrain_Constant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Terrain_Constant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Terrain_Constant& from);
  void MergeFrom(const Terrain_Constant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Terrain_Constant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Terrain_Constant";
  }
  protected:
  explicit Terrain_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .IvionOnline.Terrain Result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::Terrain& result() const;
  ::IvionOnline::Terrain* release_result();
  ::IvionOnline::Terrain* mutable_result();
  void set_allocated_result(::IvionOnline::Terrain* result);
  private:
  const ::IvionOnline::Terrain& _internal_result() const;
  ::IvionOnline::Terrain* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::Terrain* result);
  ::IvionOnline::Terrain* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.Terrain_Constant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::Terrain* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Color_Constant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Color_Constant) */ {
 public:
  inline Color_Constant() : Color_Constant(nullptr) {}
  virtual ~Color_Constant();

  Color_Constant(const Color_Constant& from);
  Color_Constant(Color_Constant&& from) noexcept
    : Color_Constant() {
    *this = ::std::move(from);
  }

  inline Color_Constant& operator=(const Color_Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline Color_Constant& operator=(Color_Constant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Color_Constant& default_instance();

  static inline const Color_Constant* internal_default_instance() {
    return reinterpret_cast<const Color_Constant*>(
               &_Color_Constant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(Color_Constant& a, Color_Constant& b) {
    a.Swap(&b);
  }
  inline void Swap(Color_Constant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Color_Constant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Color_Constant* New() const final {
    return CreateMaybeMessage<Color_Constant>(nullptr);
  }

  Color_Constant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Color_Constant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Color_Constant& from);
  void MergeFrom(const Color_Constant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Color_Constant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Color_Constant";
  }
  protected:
  explicit Color_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .IvionOnline.Color Result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::Color& result() const;
  ::IvionOnline::Color* release_result();
  ::IvionOnline::Color* mutable_result();
  void set_allocated_result(::IvionOnline::Color* result);
  private:
  const ::IvionOnline::Color& _internal_result() const;
  ::IvionOnline::Color* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::Color* result);
  ::IvionOnline::Color* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.Color_Constant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::Color* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class ObjectPath_Constant PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.ObjectPath_Constant) */ {
 public:
  inline ObjectPath_Constant() : ObjectPath_Constant(nullptr) {}
  virtual ~ObjectPath_Constant();

  ObjectPath_Constant(const ObjectPath_Constant& from);
  ObjectPath_Constant(ObjectPath_Constant&& from) noexcept
    : ObjectPath_Constant() {
    *this = ::std::move(from);
  }

  inline ObjectPath_Constant& operator=(const ObjectPath_Constant& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectPath_Constant& operator=(ObjectPath_Constant&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectPath_Constant& default_instance();

  static inline const ObjectPath_Constant* internal_default_instance() {
    return reinterpret_cast<const ObjectPath_Constant*>(
               &_ObjectPath_Constant_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(ObjectPath_Constant& a, ObjectPath_Constant& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectPath_Constant* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectPath_Constant* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectPath_Constant* New() const final {
    return CreateMaybeMessage<ObjectPath_Constant>(nullptr);
  }

  ObjectPath_Constant* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectPath_Constant>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectPath_Constant& from);
  void MergeFrom(const ObjectPath_Constant& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectPath_Constant* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.ObjectPath_Constant";
  }
  protected:
  explicit ObjectPath_Constant(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .IvionOnline.ObjectPath Result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::IvionOnline::ObjectPath& result() const;
  ::IvionOnline::ObjectPath* release_result();
  ::IvionOnline::ObjectPath* mutable_result();
  void set_allocated_result(::IvionOnline::ObjectPath* result);
  private:
  const ::IvionOnline::ObjectPath& _internal_result() const;
  ::IvionOnline::ObjectPath* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::IvionOnline::ObjectPath* result);
  ::IvionOnline::ObjectPath* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:IvionOnline.ObjectPath_Constant)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::IvionOnline::ObjectPath* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class Method PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.Method) */ {
 public:
  inline Method() : Method(nullptr) {}
  virtual ~Method();

  Method(const Method& from);
  Method(Method&& from) noexcept
    : Method() {
    *this = ::std::move(from);
  }

  inline Method& operator=(const Method& from) {
    CopyFrom(from);
    return *this;
  }
  inline Method& operator=(Method&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Method& default_instance();

  enum MethodsCase {
    kGetList = 1,
    kSelectMultiple = 2,
    kSelectExactlyOne = 3,
    kAssertControlOrHeroic = 4,
    kAssertControllerHasPriority = 5,
    kAssertStackEmptyOrInstant = 6,
    kPayCost = 7,
    kPlayGainResources = 8,
    kRefundCost = 9,
    kGainActions = 10,
    kGainPower = 11,
    kMove = 12,
    kTravel = 13,
    kDamage = 14,
    kBooleanConstant = 15,
    kIntegerConstant = 16,
    kVec2IConstant = 17,
    kTerrainConstant = 18,
    kColorConstant = 19,
    kObjectPathConstant = 20,
    METHODS_NOT_SET = 0,
  };

  static inline const Method* internal_default_instance() {
    return reinterpret_cast<const Method*>(
               &_Method_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(Method& a, Method& b) {
    a.Swap(&b);
  }
  inline void Swap(Method* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Method* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Method* New() const final {
    return CreateMaybeMessage<Method>(nullptr);
  }

  Method* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Method>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Method& from);
  void MergeFrom(const Method& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Method* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.Method";
  }
  protected:
  explicit Method(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGetListFieldNumber = 1,
    kSelectMultipleFieldNumber = 2,
    kSelectExactlyOneFieldNumber = 3,
    kAssertControlOrHeroicFieldNumber = 4,
    kAssertControllerHasPriorityFieldNumber = 5,
    kAssertStackEmptyOrInstantFieldNumber = 6,
    kPayCostFieldNumber = 7,
    kPlayGainResourcesFieldNumber = 8,
    kRefundCostFieldNumber = 9,
    kGainActionsFieldNumber = 10,
    kGainPowerFieldNumber = 11,
    kMoveFieldNumber = 12,
    kTravelFieldNumber = 13,
    kDamageFieldNumber = 14,
    kBooleanConstantFieldNumber = 15,
    kIntegerConstantFieldNumber = 16,
    kVec2IConstantFieldNumber = 17,
    kTerrainConstantFieldNumber = 18,
    kColorConstantFieldNumber = 19,
    kObjectPathConstantFieldNumber = 20,
  };
  // .IvionOnline.GetList GetList = 1;
  bool has_getlist() const;
  private:
  bool _internal_has_getlist() const;
  public:
  void clear_getlist();
  const ::IvionOnline::GetList& getlist() const;
  ::IvionOnline::GetList* release_getlist();
  ::IvionOnline::GetList* mutable_getlist();
  void set_allocated_getlist(::IvionOnline::GetList* getlist);
  private:
  const ::IvionOnline::GetList& _internal_getlist() const;
  ::IvionOnline::GetList* _internal_mutable_getlist();
  public:
  void unsafe_arena_set_allocated_getlist(
      ::IvionOnline::GetList* getlist);
  ::IvionOnline::GetList* unsafe_arena_release_getlist();

  // .IvionOnline.SelectMultiple SelectMultiple = 2;
  bool has_selectmultiple() const;
  private:
  bool _internal_has_selectmultiple() const;
  public:
  void clear_selectmultiple();
  const ::IvionOnline::SelectMultiple& selectmultiple() const;
  ::IvionOnline::SelectMultiple* release_selectmultiple();
  ::IvionOnline::SelectMultiple* mutable_selectmultiple();
  void set_allocated_selectmultiple(::IvionOnline::SelectMultiple* selectmultiple);
  private:
  const ::IvionOnline::SelectMultiple& _internal_selectmultiple() const;
  ::IvionOnline::SelectMultiple* _internal_mutable_selectmultiple();
  public:
  void unsafe_arena_set_allocated_selectmultiple(
      ::IvionOnline::SelectMultiple* selectmultiple);
  ::IvionOnline::SelectMultiple* unsafe_arena_release_selectmultiple();

  // .IvionOnline.SelectExactlyOne SelectExactlyOne = 3;
  bool has_selectexactlyone() const;
  private:
  bool _internal_has_selectexactlyone() const;
  public:
  void clear_selectexactlyone();
  const ::IvionOnline::SelectExactlyOne& selectexactlyone() const;
  ::IvionOnline::SelectExactlyOne* release_selectexactlyone();
  ::IvionOnline::SelectExactlyOne* mutable_selectexactlyone();
  void set_allocated_selectexactlyone(::IvionOnline::SelectExactlyOne* selectexactlyone);
  private:
  const ::IvionOnline::SelectExactlyOne& _internal_selectexactlyone() const;
  ::IvionOnline::SelectExactlyOne* _internal_mutable_selectexactlyone();
  public:
  void unsafe_arena_set_allocated_selectexactlyone(
      ::IvionOnline::SelectExactlyOne* selectexactlyone);
  ::IvionOnline::SelectExactlyOne* unsafe_arena_release_selectexactlyone();

  // .IvionOnline.AssertControlOrHeroic AssertControlOrHeroic = 4;
  bool has_assertcontrolorheroic() const;
  private:
  bool _internal_has_assertcontrolorheroic() const;
  public:
  void clear_assertcontrolorheroic();
  const ::IvionOnline::AssertControlOrHeroic& assertcontrolorheroic() const;
  ::IvionOnline::AssertControlOrHeroic* release_assertcontrolorheroic();
  ::IvionOnline::AssertControlOrHeroic* mutable_assertcontrolorheroic();
  void set_allocated_assertcontrolorheroic(::IvionOnline::AssertControlOrHeroic* assertcontrolorheroic);
  private:
  const ::IvionOnline::AssertControlOrHeroic& _internal_assertcontrolorheroic() const;
  ::IvionOnline::AssertControlOrHeroic* _internal_mutable_assertcontrolorheroic();
  public:
  void unsafe_arena_set_allocated_assertcontrolorheroic(
      ::IvionOnline::AssertControlOrHeroic* assertcontrolorheroic);
  ::IvionOnline::AssertControlOrHeroic* unsafe_arena_release_assertcontrolorheroic();

  // .IvionOnline.AssertControllerHasPriority AssertControllerHasPriority = 5;
  bool has_assertcontrollerhaspriority() const;
  private:
  bool _internal_has_assertcontrollerhaspriority() const;
  public:
  void clear_assertcontrollerhaspriority();
  const ::IvionOnline::AssertControllerHasPriority& assertcontrollerhaspriority() const;
  ::IvionOnline::AssertControllerHasPriority* release_assertcontrollerhaspriority();
  ::IvionOnline::AssertControllerHasPriority* mutable_assertcontrollerhaspriority();
  void set_allocated_assertcontrollerhaspriority(::IvionOnline::AssertControllerHasPriority* assertcontrollerhaspriority);
  private:
  const ::IvionOnline::AssertControllerHasPriority& _internal_assertcontrollerhaspriority() const;
  ::IvionOnline::AssertControllerHasPriority* _internal_mutable_assertcontrollerhaspriority();
  public:
  void unsafe_arena_set_allocated_assertcontrollerhaspriority(
      ::IvionOnline::AssertControllerHasPriority* assertcontrollerhaspriority);
  ::IvionOnline::AssertControllerHasPriority* unsafe_arena_release_assertcontrollerhaspriority();

  // .IvionOnline.AssertStackEmptyOrInstant AssertStackEmptyOrInstant = 6;
  bool has_assertstackemptyorinstant() const;
  private:
  bool _internal_has_assertstackemptyorinstant() const;
  public:
  void clear_assertstackemptyorinstant();
  const ::IvionOnline::AssertStackEmptyOrInstant& assertstackemptyorinstant() const;
  ::IvionOnline::AssertStackEmptyOrInstant* release_assertstackemptyorinstant();
  ::IvionOnline::AssertStackEmptyOrInstant* mutable_assertstackemptyorinstant();
  void set_allocated_assertstackemptyorinstant(::IvionOnline::AssertStackEmptyOrInstant* assertstackemptyorinstant);
  private:
  const ::IvionOnline::AssertStackEmptyOrInstant& _internal_assertstackemptyorinstant() const;
  ::IvionOnline::AssertStackEmptyOrInstant* _internal_mutable_assertstackemptyorinstant();
  public:
  void unsafe_arena_set_allocated_assertstackemptyorinstant(
      ::IvionOnline::AssertStackEmptyOrInstant* assertstackemptyorinstant);
  ::IvionOnline::AssertStackEmptyOrInstant* unsafe_arena_release_assertstackemptyorinstant();

  // .IvionOnline.PayCost PayCost = 7;
  bool has_paycost() const;
  private:
  bool _internal_has_paycost() const;
  public:
  void clear_paycost();
  const ::IvionOnline::PayCost& paycost() const;
  ::IvionOnline::PayCost* release_paycost();
  ::IvionOnline::PayCost* mutable_paycost();
  void set_allocated_paycost(::IvionOnline::PayCost* paycost);
  private:
  const ::IvionOnline::PayCost& _internal_paycost() const;
  ::IvionOnline::PayCost* _internal_mutable_paycost();
  public:
  void unsafe_arena_set_allocated_paycost(
      ::IvionOnline::PayCost* paycost);
  ::IvionOnline::PayCost* unsafe_arena_release_paycost();

  // .IvionOnline.PlayGainResources PlayGainResources = 8;
  bool has_playgainresources() const;
  private:
  bool _internal_has_playgainresources() const;
  public:
  void clear_playgainresources();
  const ::IvionOnline::PlayGainResources& playgainresources() const;
  ::IvionOnline::PlayGainResources* release_playgainresources();
  ::IvionOnline::PlayGainResources* mutable_playgainresources();
  void set_allocated_playgainresources(::IvionOnline::PlayGainResources* playgainresources);
  private:
  const ::IvionOnline::PlayGainResources& _internal_playgainresources() const;
  ::IvionOnline::PlayGainResources* _internal_mutable_playgainresources();
  public:
  void unsafe_arena_set_allocated_playgainresources(
      ::IvionOnline::PlayGainResources* playgainresources);
  ::IvionOnline::PlayGainResources* unsafe_arena_release_playgainresources();

  // .IvionOnline.RefundCost RefundCost = 9;
  bool has_refundcost() const;
  private:
  bool _internal_has_refundcost() const;
  public:
  void clear_refundcost();
  const ::IvionOnline::RefundCost& refundcost() const;
  ::IvionOnline::RefundCost* release_refundcost();
  ::IvionOnline::RefundCost* mutable_refundcost();
  void set_allocated_refundcost(::IvionOnline::RefundCost* refundcost);
  private:
  const ::IvionOnline::RefundCost& _internal_refundcost() const;
  ::IvionOnline::RefundCost* _internal_mutable_refundcost();
  public:
  void unsafe_arena_set_allocated_refundcost(
      ::IvionOnline::RefundCost* refundcost);
  ::IvionOnline::RefundCost* unsafe_arena_release_refundcost();

  // .IvionOnline.GainActions GainActions = 10;
  bool has_gainactions() const;
  private:
  bool _internal_has_gainactions() const;
  public:
  void clear_gainactions();
  const ::IvionOnline::GainActions& gainactions() const;
  ::IvionOnline::GainActions* release_gainactions();
  ::IvionOnline::GainActions* mutable_gainactions();
  void set_allocated_gainactions(::IvionOnline::GainActions* gainactions);
  private:
  const ::IvionOnline::GainActions& _internal_gainactions() const;
  ::IvionOnline::GainActions* _internal_mutable_gainactions();
  public:
  void unsafe_arena_set_allocated_gainactions(
      ::IvionOnline::GainActions* gainactions);
  ::IvionOnline::GainActions* unsafe_arena_release_gainactions();

  // .IvionOnline.GainPower GainPower = 11;
  bool has_gainpower() const;
  private:
  bool _internal_has_gainpower() const;
  public:
  void clear_gainpower();
  const ::IvionOnline::GainPower& gainpower() const;
  ::IvionOnline::GainPower* release_gainpower();
  ::IvionOnline::GainPower* mutable_gainpower();
  void set_allocated_gainpower(::IvionOnline::GainPower* gainpower);
  private:
  const ::IvionOnline::GainPower& _internal_gainpower() const;
  ::IvionOnline::GainPower* _internal_mutable_gainpower();
  public:
  void unsafe_arena_set_allocated_gainpower(
      ::IvionOnline::GainPower* gainpower);
  ::IvionOnline::GainPower* unsafe_arena_release_gainpower();

  // .IvionOnline.Move Move = 12;
  bool has_move() const;
  private:
  bool _internal_has_move() const;
  public:
  void clear_move();
  const ::IvionOnline::Move& move() const;
  ::IvionOnline::Move* release_move();
  ::IvionOnline::Move* mutable_move();
  void set_allocated_move(::IvionOnline::Move* move);
  private:
  const ::IvionOnline::Move& _internal_move() const;
  ::IvionOnline::Move* _internal_mutable_move();
  public:
  void unsafe_arena_set_allocated_move(
      ::IvionOnline::Move* move);
  ::IvionOnline::Move* unsafe_arena_release_move();

  // .IvionOnline.Travel Travel = 13;
  bool has_travel() const;
  private:
  bool _internal_has_travel() const;
  public:
  void clear_travel();
  const ::IvionOnline::Travel& travel() const;
  ::IvionOnline::Travel* release_travel();
  ::IvionOnline::Travel* mutable_travel();
  void set_allocated_travel(::IvionOnline::Travel* travel);
  private:
  const ::IvionOnline::Travel& _internal_travel() const;
  ::IvionOnline::Travel* _internal_mutable_travel();
  public:
  void unsafe_arena_set_allocated_travel(
      ::IvionOnline::Travel* travel);
  ::IvionOnline::Travel* unsafe_arena_release_travel();

  // .IvionOnline.Damage Damage = 14;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  const ::IvionOnline::Damage& damage() const;
  ::IvionOnline::Damage* release_damage();
  ::IvionOnline::Damage* mutable_damage();
  void set_allocated_damage(::IvionOnline::Damage* damage);
  private:
  const ::IvionOnline::Damage& _internal_damage() const;
  ::IvionOnline::Damage* _internal_mutable_damage();
  public:
  void unsafe_arena_set_allocated_damage(
      ::IvionOnline::Damage* damage);
  ::IvionOnline::Damage* unsafe_arena_release_damage();

  // .IvionOnline.Boolean_Constant Boolean_Constant = 15;
  bool has_boolean_constant() const;
  private:
  bool _internal_has_boolean_constant() const;
  public:
  void clear_boolean_constant();
  const ::IvionOnline::Boolean_Constant& boolean_constant() const;
  ::IvionOnline::Boolean_Constant* release_boolean_constant();
  ::IvionOnline::Boolean_Constant* mutable_boolean_constant();
  void set_allocated_boolean_constant(::IvionOnline::Boolean_Constant* boolean_constant);
  private:
  const ::IvionOnline::Boolean_Constant& _internal_boolean_constant() const;
  ::IvionOnline::Boolean_Constant* _internal_mutable_boolean_constant();
  public:
  void unsafe_arena_set_allocated_boolean_constant(
      ::IvionOnline::Boolean_Constant* boolean_constant);
  ::IvionOnline::Boolean_Constant* unsafe_arena_release_boolean_constant();

  // .IvionOnline.Integer_Constant Integer_Constant = 16;
  bool has_integer_constant() const;
  private:
  bool _internal_has_integer_constant() const;
  public:
  void clear_integer_constant();
  const ::IvionOnline::Integer_Constant& integer_constant() const;
  ::IvionOnline::Integer_Constant* release_integer_constant();
  ::IvionOnline::Integer_Constant* mutable_integer_constant();
  void set_allocated_integer_constant(::IvionOnline::Integer_Constant* integer_constant);
  private:
  const ::IvionOnline::Integer_Constant& _internal_integer_constant() const;
  ::IvionOnline::Integer_Constant* _internal_mutable_integer_constant();
  public:
  void unsafe_arena_set_allocated_integer_constant(
      ::IvionOnline::Integer_Constant* integer_constant);
  ::IvionOnline::Integer_Constant* unsafe_arena_release_integer_constant();

  // .IvionOnline.Vec2i_Constant Vec2i_Constant = 17;
  bool has_vec2i_constant() const;
  private:
  bool _internal_has_vec2i_constant() const;
  public:
  void clear_vec2i_constant();
  const ::IvionOnline::Vec2i_Constant& vec2i_constant() const;
  ::IvionOnline::Vec2i_Constant* release_vec2i_constant();
  ::IvionOnline::Vec2i_Constant* mutable_vec2i_constant();
  void set_allocated_vec2i_constant(::IvionOnline::Vec2i_Constant* vec2i_constant);
  private:
  const ::IvionOnline::Vec2i_Constant& _internal_vec2i_constant() const;
  ::IvionOnline::Vec2i_Constant* _internal_mutable_vec2i_constant();
  public:
  void unsafe_arena_set_allocated_vec2i_constant(
      ::IvionOnline::Vec2i_Constant* vec2i_constant);
  ::IvionOnline::Vec2i_Constant* unsafe_arena_release_vec2i_constant();

  // .IvionOnline.Terrain_Constant Terrain_Constant = 18;
  bool has_terrain_constant() const;
  private:
  bool _internal_has_terrain_constant() const;
  public:
  void clear_terrain_constant();
  const ::IvionOnline::Terrain_Constant& terrain_constant() const;
  ::IvionOnline::Terrain_Constant* release_terrain_constant();
  ::IvionOnline::Terrain_Constant* mutable_terrain_constant();
  void set_allocated_terrain_constant(::IvionOnline::Terrain_Constant* terrain_constant);
  private:
  const ::IvionOnline::Terrain_Constant& _internal_terrain_constant() const;
  ::IvionOnline::Terrain_Constant* _internal_mutable_terrain_constant();
  public:
  void unsafe_arena_set_allocated_terrain_constant(
      ::IvionOnline::Terrain_Constant* terrain_constant);
  ::IvionOnline::Terrain_Constant* unsafe_arena_release_terrain_constant();

  // .IvionOnline.Color_Constant Color_Constant = 19;
  bool has_color_constant() const;
  private:
  bool _internal_has_color_constant() const;
  public:
  void clear_color_constant();
  const ::IvionOnline::Color_Constant& color_constant() const;
  ::IvionOnline::Color_Constant* release_color_constant();
  ::IvionOnline::Color_Constant* mutable_color_constant();
  void set_allocated_color_constant(::IvionOnline::Color_Constant* color_constant);
  private:
  const ::IvionOnline::Color_Constant& _internal_color_constant() const;
  ::IvionOnline::Color_Constant* _internal_mutable_color_constant();
  public:
  void unsafe_arena_set_allocated_color_constant(
      ::IvionOnline::Color_Constant* color_constant);
  ::IvionOnline::Color_Constant* unsafe_arena_release_color_constant();

  // .IvionOnline.ObjectPath_Constant ObjectPath_Constant = 20;
  bool has_objectpath_constant() const;
  private:
  bool _internal_has_objectpath_constant() const;
  public:
  void clear_objectpath_constant();
  const ::IvionOnline::ObjectPath_Constant& objectpath_constant() const;
  ::IvionOnline::ObjectPath_Constant* release_objectpath_constant();
  ::IvionOnline::ObjectPath_Constant* mutable_objectpath_constant();
  void set_allocated_objectpath_constant(::IvionOnline::ObjectPath_Constant* objectpath_constant);
  private:
  const ::IvionOnline::ObjectPath_Constant& _internal_objectpath_constant() const;
  ::IvionOnline::ObjectPath_Constant* _internal_mutable_objectpath_constant();
  public:
  void unsafe_arena_set_allocated_objectpath_constant(
      ::IvionOnline::ObjectPath_Constant* objectpath_constant);
  ::IvionOnline::ObjectPath_Constant* unsafe_arena_release_objectpath_constant();

  void clear_methods();
  MethodsCase methods_case() const;
  // @@protoc_insertion_point(class_scope:IvionOnline.Method)
 private:
  class _Internal;
  void set_has_getlist();
  void set_has_selectmultiple();
  void set_has_selectexactlyone();
  void set_has_assertcontrolorheroic();
  void set_has_assertcontrollerhaspriority();
  void set_has_assertstackemptyorinstant();
  void set_has_paycost();
  void set_has_playgainresources();
  void set_has_refundcost();
  void set_has_gainactions();
  void set_has_gainpower();
  void set_has_move();
  void set_has_travel();
  void set_has_damage();
  void set_has_boolean_constant();
  void set_has_integer_constant();
  void set_has_vec2i_constant();
  void set_has_terrain_constant();
  void set_has_color_constant();
  void set_has_objectpath_constant();

  inline bool has_methods() const;
  inline void clear_has_methods();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union MethodsUnion {
    MethodsUnion() {}
    ::IvionOnline::GetList* getlist_;
    ::IvionOnline::SelectMultiple* selectmultiple_;
    ::IvionOnline::SelectExactlyOne* selectexactlyone_;
    ::IvionOnline::AssertControlOrHeroic* assertcontrolorheroic_;
    ::IvionOnline::AssertControllerHasPriority* assertcontrollerhaspriority_;
    ::IvionOnline::AssertStackEmptyOrInstant* assertstackemptyorinstant_;
    ::IvionOnline::PayCost* paycost_;
    ::IvionOnline::PlayGainResources* playgainresources_;
    ::IvionOnline::RefundCost* refundcost_;
    ::IvionOnline::GainActions* gainactions_;
    ::IvionOnline::GainPower* gainpower_;
    ::IvionOnline::Move* move_;
    ::IvionOnline::Travel* travel_;
    ::IvionOnline::Damage* damage_;
    ::IvionOnline::Boolean_Constant* boolean_constant_;
    ::IvionOnline::Integer_Constant* integer_constant_;
    ::IvionOnline::Vec2i_Constant* vec2i_constant_;
    ::IvionOnline::Terrain_Constant* terrain_constant_;
    ::IvionOnline::Color_Constant* color_constant_;
    ::IvionOnline::ObjectPath_Constant* objectpath_constant_;
  } methods_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_GameState_2eproto;
};
// -------------------------------------------------------------------

class List_Method PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IvionOnline.List_Method) */ {
 public:
  inline List_Method() : List_Method(nullptr) {}
  virtual ~List_Method();

  List_Method(const List_Method& from);
  List_Method(List_Method&& from) noexcept
    : List_Method() {
    *this = ::std::move(from);
  }

  inline List_Method& operator=(const List_Method& from) {
    CopyFrom(from);
    return *this;
  }
  inline List_Method& operator=(List_Method&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const List_Method& default_instance();

  static inline const List_Method* internal_default_instance() {
    return reinterpret_cast<const List_Method*>(
               &_List_Method_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(List_Method& a, List_Method& b) {
    a.Swap(&b);
  }
  inline void Swap(List_Method* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(List_Method* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline List_Method* New() const final {
    return CreateMaybeMessage<List_Method>(nullptr);
  }

  List_Method* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<List_Method>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const List_Method& from);
  void MergeFrom(const List_Method& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(List_Method* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IvionOnline.List_Method";
  }
  protected:
  explicit List_Method(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_GameState_2eproto);
    return ::descriptor_table_GameState_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementFieldNumber = 1,
  };
  // repeated .IvionOnline.Method element = 1;
  int element_size() const;
  private:
  int _internal_element_size() const;
  public:
  void clear_element();
  ::IvionOnline::Method* mutable_element(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Method >*
      mutable_element();
  private:
  const ::IvionOnline::Method& _internal_element(int index) const;
  ::IvionOnline::Method* _internal_add_element();
  public:
  const ::IvionOnline::Method& element(int index) const;
  ::IvionOnline::Method* add_element();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Method >&
      element() const;

  // @@protoc_insertion_point(class_scope:IvionOnline.List_Method)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Method > element_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_GameState_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// History

// repeated .IvionOnline.Mutation Mutations = 1;
inline int History::_internal_mutations_size() const {
  return mutations_.size();
}
inline int History::mutations_size() const {
  return _internal_mutations_size();
}
inline void History::clear_mutations() {
  mutations_.Clear();
}
inline ::IvionOnline::Mutation* History::mutable_mutations(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.History.Mutations)
  return mutations_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Mutation >*
History::mutable_mutations() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.History.Mutations)
  return &mutations_;
}
inline const ::IvionOnline::Mutation& History::_internal_mutations(int index) const {
  return mutations_.Get(index);
}
inline const ::IvionOnline::Mutation& History::mutations(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.History.Mutations)
  return _internal_mutations(index);
}
inline ::IvionOnline::Mutation* History::_internal_add_mutations() {
  return mutations_.Add();
}
inline ::IvionOnline::Mutation* History::add_mutations() {
  // @@protoc_insertion_point(field_add:IvionOnline.History.Mutations)
  return _internal_add_mutations();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Mutation >&
History::mutations() const {
  // @@protoc_insertion_point(field_list:IvionOnline.History.Mutations)
  return mutations_;
}

// repeated .IvionOnline.History Branches = 2;
inline int History::_internal_branches_size() const {
  return branches_.size();
}
inline int History::branches_size() const {
  return _internal_branches_size();
}
inline void History::clear_branches() {
  branches_.Clear();
}
inline ::IvionOnline::History* History::mutable_branches(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.History.Branches)
  return branches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::History >*
History::mutable_branches() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.History.Branches)
  return &branches_;
}
inline const ::IvionOnline::History& History::_internal_branches(int index) const {
  return branches_.Get(index);
}
inline const ::IvionOnline::History& History::branches(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.History.Branches)
  return _internal_branches(index);
}
inline ::IvionOnline::History* History::_internal_add_branches() {
  return branches_.Add();
}
inline ::IvionOnline::History* History::add_branches() {
  // @@protoc_insertion_point(field_add:IvionOnline.History.Branches)
  return _internal_add_branches();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::History >&
History::branches() const {
  // @@protoc_insertion_point(field_list:IvionOnline.History.Branches)
  return branches_;
}

// bool Is_Good = 3;
inline void History::clear_is_good() {
  is_good_ = false;
}
inline bool History::_internal_is_good() const {
  return is_good_;
}
inline bool History::is_good() const {
  // @@protoc_insertion_point(field_get:IvionOnline.History.Is_Good)
  return _internal_is_good();
}
inline void History::_internal_set_is_good(bool value) {
  
  is_good_ = value;
}
inline void History::set_is_good(bool value) {
  _internal_set_is_good(value);
  // @@protoc_insertion_point(field_set:IvionOnline.History.Is_Good)
}

// -------------------------------------------------------------------

// Boolean

// bool Value = 1;
inline void Boolean::clear_value() {
  value_ = false;
}
inline bool Boolean::_internal_value() const {
  return value_;
}
inline bool Boolean::value() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean.Value)
  return _internal_value();
}
inline void Boolean::_internal_set_value(bool value) {
  
  value_ = value;
}
inline void Boolean::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Boolean.Value)
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool Boolean::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Boolean::has_abspath() const {
  return _internal_has_abspath();
}
inline void Boolean::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Boolean::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Boolean::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean.AbsPath)
  return _internal_abspath();
}
inline void Boolean::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Boolean.AbsPath)
}
inline ::IvionOnline::ObjectPath* Boolean::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Boolean::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Boolean.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Boolean::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Boolean::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Boolean.AbsPath)
  return _internal_mutable_abspath();
}
inline void Boolean::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Boolean.AbsPath)
}

// string Name = 3;
inline void Boolean::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Boolean::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean.Name)
  return _internal_name();
}
inline void Boolean::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Boolean.Name)
}
inline std::string* Boolean::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Boolean.Name)
  return _internal_mutable_name();
}
inline const std::string& Boolean::_internal_name() const {
  return name_.Get();
}
inline void Boolean::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Boolean::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Boolean.Name)
}
inline void Boolean::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Boolean.Name)
}
inline void Boolean::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Boolean.Name)
}
inline std::string* Boolean::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Boolean::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Boolean.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Boolean::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Boolean.Name)
}

// -------------------------------------------------------------------

// List_Boolean

// repeated .IvionOnline.Boolean element = 1;
inline int List_Boolean::_internal_element_size() const {
  return element_.size();
}
inline int List_Boolean::element_size() const {
  return _internal_element_size();
}
inline void List_Boolean::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Boolean* List_Boolean::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Boolean >*
List_Boolean::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Boolean.element)
  return &element_;
}
inline const ::IvionOnline::Boolean& List_Boolean::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Boolean& List_Boolean::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean.element)
  return _internal_element(index);
}
inline ::IvionOnline::Boolean* List_Boolean::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Boolean* List_Boolean::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Boolean.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Boolean >&
List_Boolean::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Boolean.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Boolean::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Boolean::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Boolean::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Boolean::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Boolean::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean.AbsPath)
  return _internal_abspath();
}
inline void List_Boolean::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Boolean.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Boolean::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Boolean::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Boolean.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Boolean::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Boolean::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Boolean::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Boolean.AbsPath)
}

// string Name = 3;
inline void List_Boolean::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Boolean::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean.Name)
  return _internal_name();
}
inline void List_Boolean::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Boolean.Name)
}
inline std::string* List_Boolean::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Boolean::_internal_name() const {
  return name_.Get();
}
inline void List_Boolean::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Boolean::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Boolean.Name)
}
inline void List_Boolean::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Boolean.Name)
}
inline void List_Boolean::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Boolean.Name)
}
inline std::string* List_Boolean::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Boolean::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Boolean.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Boolean::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Boolean.Name)
}

// -------------------------------------------------------------------

// Integer

// int32 Value = 1;
inline void Integer::clear_value() {
  value_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Integer::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Integer::value() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer.Value)
  return _internal_value();
}
inline void Integer::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  value_ = value;
}
inline void Integer::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Integer.Value)
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool Integer::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Integer::has_abspath() const {
  return _internal_has_abspath();
}
inline void Integer::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Integer::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Integer::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer.AbsPath)
  return _internal_abspath();
}
inline void Integer::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Integer.AbsPath)
}
inline ::IvionOnline::ObjectPath* Integer::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Integer::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Integer.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Integer::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Integer::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Integer.AbsPath)
  return _internal_mutable_abspath();
}
inline void Integer::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Integer.AbsPath)
}

// string Name = 3;
inline void Integer::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Integer::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer.Name)
  return _internal_name();
}
inline void Integer::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Integer.Name)
}
inline std::string* Integer::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Integer.Name)
  return _internal_mutable_name();
}
inline const std::string& Integer::_internal_name() const {
  return name_.Get();
}
inline void Integer::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Integer::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Integer.Name)
}
inline void Integer::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Integer.Name)
}
inline void Integer::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Integer.Name)
}
inline std::string* Integer::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Integer::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Integer.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Integer::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Integer.Name)
}

// -------------------------------------------------------------------

// List_Integer

// repeated .IvionOnline.Integer element = 1;
inline int List_Integer::_internal_element_size() const {
  return element_.size();
}
inline int List_Integer::element_size() const {
  return _internal_element_size();
}
inline void List_Integer::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Integer* List_Integer::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Integer >*
List_Integer::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Integer.element)
  return &element_;
}
inline const ::IvionOnline::Integer& List_Integer::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Integer& List_Integer::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer.element)
  return _internal_element(index);
}
inline ::IvionOnline::Integer* List_Integer::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Integer* List_Integer::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Integer.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Integer >&
List_Integer::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Integer.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Integer::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Integer::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Integer::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Integer::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Integer::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer.AbsPath)
  return _internal_abspath();
}
inline void List_Integer::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Integer.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Integer::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Integer::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Integer.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Integer::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Integer::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Integer::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Integer.AbsPath)
}

// string Name = 3;
inline void List_Integer::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Integer::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer.Name)
  return _internal_name();
}
inline void List_Integer::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Integer.Name)
}
inline std::string* List_Integer::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Integer::_internal_name() const {
  return name_.Get();
}
inline void List_Integer::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Integer::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Integer.Name)
}
inline void List_Integer::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Integer.Name)
}
inline void List_Integer::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Integer.Name)
}
inline std::string* List_Integer::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Integer::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Integer.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Integer::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Integer.Name)
}

// -------------------------------------------------------------------

// Vec2i

// int32 x = 1;
inline void Vec2i::clear_x() {
  x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Vec2i::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Vec2i::x() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i.x)
  return _internal_x();
}
inline void Vec2i::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  x_ = value;
}
inline void Vec2i::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Vec2i.x)
}

// int32 y = 2;
inline void Vec2i::clear_y() {
  y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Vec2i::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Vec2i::y() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i.y)
  return _internal_y();
}
inline void Vec2i::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  y_ = value;
}
inline void Vec2i::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Vec2i.y)
}

// .IvionOnline.ObjectPath AbsPath = 3;
inline bool Vec2i::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Vec2i::has_abspath() const {
  return _internal_has_abspath();
}
inline void Vec2i::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Vec2i::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Vec2i::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i.AbsPath)
  return _internal_abspath();
}
inline void Vec2i::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Vec2i.AbsPath)
}
inline ::IvionOnline::ObjectPath* Vec2i::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Vec2i::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Vec2i.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Vec2i::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Vec2i::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Vec2i.AbsPath)
  return _internal_mutable_abspath();
}
inline void Vec2i::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Vec2i.AbsPath)
}

// string Name = 4;
inline void Vec2i::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Vec2i::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i.Name)
  return _internal_name();
}
inline void Vec2i::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Vec2i.Name)
}
inline std::string* Vec2i::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Vec2i.Name)
  return _internal_mutable_name();
}
inline const std::string& Vec2i::_internal_name() const {
  return name_.Get();
}
inline void Vec2i::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Vec2i::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Vec2i.Name)
}
inline void Vec2i::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Vec2i.Name)
}
inline void Vec2i::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Vec2i.Name)
}
inline std::string* Vec2i::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Vec2i::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Vec2i.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Vec2i::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Vec2i.Name)
}

// -------------------------------------------------------------------

// List_Vec2i

// repeated .IvionOnline.Vec2i element = 1;
inline int List_Vec2i::_internal_element_size() const {
  return element_.size();
}
inline int List_Vec2i::element_size() const {
  return _internal_element_size();
}
inline void List_Vec2i::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Vec2i* List_Vec2i::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Vec2i >*
List_Vec2i::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Vec2i.element)
  return &element_;
}
inline const ::IvionOnline::Vec2i& List_Vec2i::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Vec2i& List_Vec2i::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i.element)
  return _internal_element(index);
}
inline ::IvionOnline::Vec2i* List_Vec2i::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Vec2i* List_Vec2i::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Vec2i.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Vec2i >&
List_Vec2i::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Vec2i.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Vec2i::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Vec2i::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Vec2i::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Vec2i::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Vec2i::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i.AbsPath)
  return _internal_abspath();
}
inline void List_Vec2i::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Vec2i.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Vec2i::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Vec2i::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Vec2i.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Vec2i::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Vec2i::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Vec2i::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Vec2i.AbsPath)
}

// string Name = 3;
inline void List_Vec2i::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Vec2i::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i.Name)
  return _internal_name();
}
inline void List_Vec2i::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Vec2i.Name)
}
inline std::string* List_Vec2i::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Vec2i::_internal_name() const {
  return name_.Get();
}
inline void List_Vec2i::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Vec2i::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Vec2i.Name)
}
inline void List_Vec2i::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Vec2i.Name)
}
inline void List_Vec2i::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Vec2i.Name)
}
inline std::string* List_Vec2i::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Vec2i::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Vec2i.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Vec2i::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Vec2i.Name)
}

// -------------------------------------------------------------------

// Terrain

// .IvionOnline.Terrain.Terrain_Type Value = 1;
inline void Terrain::clear_value() {
  value_ = 0;
}
inline ::IvionOnline::Terrain_Terrain_Type Terrain::_internal_value() const {
  return static_cast< ::IvionOnline::Terrain_Terrain_Type >(value_);
}
inline ::IvionOnline::Terrain_Terrain_Type Terrain::value() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain.Value)
  return _internal_value();
}
inline void Terrain::_internal_set_value(::IvionOnline::Terrain_Terrain_Type value) {
  
  value_ = value;
}
inline void Terrain::set_value(::IvionOnline::Terrain_Terrain_Type value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Terrain.Value)
}

// .IvionOnline.ObjectPath AbsPath = 3;
inline bool Terrain::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Terrain::has_abspath() const {
  return _internal_has_abspath();
}
inline void Terrain::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Terrain::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Terrain::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain.AbsPath)
  return _internal_abspath();
}
inline void Terrain::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Terrain.AbsPath)
}
inline ::IvionOnline::ObjectPath* Terrain::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Terrain::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Terrain.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Terrain::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Terrain::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Terrain.AbsPath)
  return _internal_mutable_abspath();
}
inline void Terrain::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Terrain.AbsPath)
}

// string Name = 4;
inline void Terrain::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Terrain::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain.Name)
  return _internal_name();
}
inline void Terrain::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Terrain.Name)
}
inline std::string* Terrain::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Terrain.Name)
  return _internal_mutable_name();
}
inline const std::string& Terrain::_internal_name() const {
  return name_.Get();
}
inline void Terrain::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Terrain::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Terrain.Name)
}
inline void Terrain::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Terrain.Name)
}
inline void Terrain::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Terrain.Name)
}
inline std::string* Terrain::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Terrain::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Terrain.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Terrain::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Terrain.Name)
}

// -------------------------------------------------------------------

// List_Terrain

// repeated .IvionOnline.Terrain element = 1;
inline int List_Terrain::_internal_element_size() const {
  return element_.size();
}
inline int List_Terrain::element_size() const {
  return _internal_element_size();
}
inline void List_Terrain::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Terrain* List_Terrain::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Terrain >*
List_Terrain::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Terrain.element)
  return &element_;
}
inline const ::IvionOnline::Terrain& List_Terrain::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Terrain& List_Terrain::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain.element)
  return _internal_element(index);
}
inline ::IvionOnline::Terrain* List_Terrain::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Terrain* List_Terrain::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Terrain.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Terrain >&
List_Terrain::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Terrain.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Terrain::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Terrain::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Terrain::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Terrain::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Terrain::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain.AbsPath)
  return _internal_abspath();
}
inline void List_Terrain::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Terrain.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Terrain::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Terrain::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Terrain.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Terrain::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Terrain::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Terrain::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Terrain.AbsPath)
}

// string Name = 3;
inline void List_Terrain::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Terrain::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain.Name)
  return _internal_name();
}
inline void List_Terrain::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Terrain.Name)
}
inline std::string* List_Terrain::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Terrain::_internal_name() const {
  return name_.Get();
}
inline void List_Terrain::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Terrain::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Terrain.Name)
}
inline void List_Terrain::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Terrain.Name)
}
inline void List_Terrain::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Terrain.Name)
}
inline std::string* List_Terrain::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Terrain::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Terrain.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Terrain::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Terrain.Name)
}

// -------------------------------------------------------------------

// Color

// .IvionOnline.Color.Color_Type Value = 1;
inline void Color::clear_value() {
  value_ = 0;
}
inline ::IvionOnline::Color_Color_Type Color::_internal_value() const {
  return static_cast< ::IvionOnline::Color_Color_Type >(value_);
}
inline ::IvionOnline::Color_Color_Type Color::value() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color.Value)
  return _internal_value();
}
inline void Color::_internal_set_value(::IvionOnline::Color_Color_Type value) {
  
  value_ = value;
}
inline void Color::set_value(::IvionOnline::Color_Color_Type value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Color.Value)
}

// .IvionOnline.ObjectPath AbsPath = 3;
inline bool Color::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Color::has_abspath() const {
  return _internal_has_abspath();
}
inline void Color::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Color::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Color::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color.AbsPath)
  return _internal_abspath();
}
inline void Color::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Color.AbsPath)
}
inline ::IvionOnline::ObjectPath* Color::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Color::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Color.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Color::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Color::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Color.AbsPath)
  return _internal_mutable_abspath();
}
inline void Color::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Color.AbsPath)
}

// string Name = 4;
inline void Color::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Color::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color.Name)
  return _internal_name();
}
inline void Color::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Color.Name)
}
inline std::string* Color::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Color.Name)
  return _internal_mutable_name();
}
inline const std::string& Color::_internal_name() const {
  return name_.Get();
}
inline void Color::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Color::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Color.Name)
}
inline void Color::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Color.Name)
}
inline void Color::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Color.Name)
}
inline std::string* Color::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Color::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Color.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Color::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Color.Name)
}

// -------------------------------------------------------------------

// List_Color

// repeated .IvionOnline.Color element = 1;
inline int List_Color::_internal_element_size() const {
  return element_.size();
}
inline int List_Color::element_size() const {
  return _internal_element_size();
}
inline void List_Color::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Color* List_Color::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Color >*
List_Color::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Color.element)
  return &element_;
}
inline const ::IvionOnline::Color& List_Color::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Color& List_Color::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color.element)
  return _internal_element(index);
}
inline ::IvionOnline::Color* List_Color::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Color* List_Color::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Color.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Color >&
List_Color::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Color.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Color::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Color::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Color::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Color::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Color::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color.AbsPath)
  return _internal_abspath();
}
inline void List_Color::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Color.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Color::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Color::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Color.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Color::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Color::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Color::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Color.AbsPath)
}

// string Name = 3;
inline void List_Color::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Color::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color.Name)
  return _internal_name();
}
inline void List_Color::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Color.Name)
}
inline std::string* List_Color::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Color::_internal_name() const {
  return name_.Get();
}
inline void List_Color::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Color::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Color.Name)
}
inline void List_Color::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Color.Name)
}
inline void List_Color::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Color.Name)
}
inline std::string* List_Color::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Color::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Color.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Color::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Color.Name)
}

// -------------------------------------------------------------------

// ObjectPath

// repeated string Path = 1;
inline int ObjectPath::_internal_path_size() const {
  return path_.size();
}
inline int ObjectPath::path_size() const {
  return _internal_path_size();
}
inline void ObjectPath::clear_path() {
  path_.Clear();
}
inline std::string* ObjectPath::add_path() {
  // @@protoc_insertion_point(field_add_mutable:IvionOnline.ObjectPath.Path)
  return _internal_add_path();
}
inline const std::string& ObjectPath::_internal_path(int index) const {
  return path_.Get(index);
}
inline const std::string& ObjectPath::path(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.ObjectPath.Path)
  return _internal_path(index);
}
inline std::string* ObjectPath::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.ObjectPath.Path)
  return path_.Mutable(index);
}
inline void ObjectPath::set_path(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:IvionOnline.ObjectPath.Path)
  path_.Mutable(index)->assign(value);
}
inline void ObjectPath::set_path(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:IvionOnline.ObjectPath.Path)
  path_.Mutable(index)->assign(std::move(value));
}
inline void ObjectPath::set_path(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  path_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:IvionOnline.ObjectPath.Path)
}
inline void ObjectPath::set_path(int index, const char* value, size_t size) {
  path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.ObjectPath.Path)
}
inline std::string* ObjectPath::_internal_add_path() {
  return path_.Add();
}
inline void ObjectPath::add_path(const std::string& value) {
  path_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:IvionOnline.ObjectPath.Path)
}
inline void ObjectPath::add_path(std::string&& value) {
  path_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:IvionOnline.ObjectPath.Path)
}
inline void ObjectPath::add_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  path_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:IvionOnline.ObjectPath.Path)
}
inline void ObjectPath::add_path(const char* value, size_t size) {
  path_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:IvionOnline.ObjectPath.Path)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ObjectPath::path() const {
  // @@protoc_insertion_point(field_list:IvionOnline.ObjectPath.Path)
  return path_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ObjectPath::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.ObjectPath.Path)
  return &path_;
}

// .IvionOnline.ObjectType Object_Type = 2;
inline void ObjectPath::clear_object_type() {
  object_type_ = 0;
}
inline ::IvionOnline::ObjectType ObjectPath::_internal_object_type() const {
  return static_cast< ::IvionOnline::ObjectType >(object_type_);
}
inline ::IvionOnline::ObjectType ObjectPath::object_type() const {
  // @@protoc_insertion_point(field_get:IvionOnline.ObjectPath.Object_Type)
  return _internal_object_type();
}
inline void ObjectPath::_internal_set_object_type(::IvionOnline::ObjectType value) {
  
  object_type_ = value;
}
inline void ObjectPath::set_object_type(::IvionOnline::ObjectType value) {
  _internal_set_object_type(value);
  // @@protoc_insertion_point(field_set:IvionOnline.ObjectPath.Object_Type)
}

// -------------------------------------------------------------------

// List_ObjectPath

// repeated .IvionOnline.ObjectPath element = 1;
inline int List_ObjectPath::_internal_element_size() const {
  return element_.size();
}
inline int List_ObjectPath::element_size() const {
  return _internal_element_size();
}
inline void List_ObjectPath::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::ObjectPath >*
List_ObjectPath::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_ObjectPath.element)
  return &element_;
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath.element)
  return _internal_element(index);
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_ObjectPath.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::ObjectPath >&
List_ObjectPath::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_ObjectPath.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_ObjectPath::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_ObjectPath::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_ObjectPath::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath.AbsPath)
  return _internal_abspath();
}
inline void List_ObjectPath::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_ObjectPath.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_ObjectPath.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_ObjectPath::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_ObjectPath.AbsPath)
}

// string Name = 3;
inline void List_ObjectPath::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_ObjectPath::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath.Name)
  return _internal_name();
}
inline void List_ObjectPath::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_ObjectPath.Name)
}
inline std::string* List_ObjectPath::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath.Name)
  return _internal_mutable_name();
}
inline const std::string& List_ObjectPath::_internal_name() const {
  return name_.Get();
}
inline void List_ObjectPath::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_ObjectPath::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_ObjectPath.Name)
}
inline void List_ObjectPath::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_ObjectPath.Name)
}
inline void List_ObjectPath::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_ObjectPath.Name)
}
inline std::string* List_ObjectPath::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_ObjectPath::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_ObjectPath.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_ObjectPath::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_ObjectPath.Name)
}

// -------------------------------------------------------------------

// Player

// string UID = 1;
inline void Player::clear_uid() {
  uid_.ClearToEmpty();
}
inline const std::string& Player::uid() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.UID)
  return _internal_uid();
}
inline void Player::set_uid(const std::string& value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Player.UID)
}
inline std::string* Player::mutable_uid() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.UID)
  return _internal_mutable_uid();
}
inline const std::string& Player::_internal_uid() const {
  return uid_.Get();
}
inline void Player::_internal_set_uid(const std::string& value) {
  
  uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Player::set_uid(std::string&& value) {
  
  uid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Player.UID)
}
inline void Player::set_uid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Player.UID)
}
inline void Player::set_uid(const char* value,
    size_t size) {
  
  uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Player.UID)
}
inline std::string* Player::_internal_mutable_uid() {
  
  return uid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Player::release_uid() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.UID)
  return uid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Player::set_allocated_uid(std::string* uid) {
  if (uid != nullptr) {
    
  } else {
    
  }
  uid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), uid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.UID)
}

// int32 Index = 2;
inline void Player::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Player::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Player::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Index)
  return _internal_index();
}
inline void Player::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void Player::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Player.Index)
}

// string IndexStr = 3;
inline void Player::clear_indexstr() {
  indexstr_.ClearToEmpty();
}
inline const std::string& Player::indexstr() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.IndexStr)
  return _internal_indexstr();
}
inline void Player::set_indexstr(const std::string& value) {
  _internal_set_indexstr(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Player.IndexStr)
}
inline std::string* Player::mutable_indexstr() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.IndexStr)
  return _internal_mutable_indexstr();
}
inline const std::string& Player::_internal_indexstr() const {
  return indexstr_.Get();
}
inline void Player::_internal_set_indexstr(const std::string& value) {
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Player::set_indexstr(std::string&& value) {
  
  indexstr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Player.IndexStr)
}
inline void Player::set_indexstr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Player.IndexStr)
}
inline void Player::set_indexstr(const char* value,
    size_t size) {
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Player.IndexStr)
}
inline std::string* Player::_internal_mutable_indexstr() {
  
  return indexstr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Player::release_indexstr() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.IndexStr)
  return indexstr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Player::set_allocated_indexstr(std::string* indexstr) {
  if (indexstr != nullptr) {
    
  } else {
    
  }
  indexstr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), indexstr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.IndexStr)
}

// string DisplayName = 4;
inline void Player::clear_displayname() {
  displayname_.ClearToEmpty();
}
inline const std::string& Player::displayname() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.DisplayName)
  return _internal_displayname();
}
inline void Player::set_displayname(const std::string& value) {
  _internal_set_displayname(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Player.DisplayName)
}
inline std::string* Player::mutable_displayname() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.DisplayName)
  return _internal_mutable_displayname();
}
inline const std::string& Player::_internal_displayname() const {
  return displayname_.Get();
}
inline void Player::_internal_set_displayname(const std::string& value) {
  
  displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Player::set_displayname(std::string&& value) {
  
  displayname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Player.DisplayName)
}
inline void Player::set_displayname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Player.DisplayName)
}
inline void Player::set_displayname(const char* value,
    size_t size) {
  
  displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Player.DisplayName)
}
inline std::string* Player::_internal_mutable_displayname() {
  
  return displayname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Player::release_displayname() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.DisplayName)
  return displayname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Player::set_allocated_displayname(std::string* displayname) {
  if (displayname != nullptr) {
    
  } else {
    
  }
  displayname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), displayname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.DisplayName)
}

// .IvionOnline.Integer Health = 5;
inline bool Player::_internal_has_health() const {
  return this != internal_default_instance() && health_ != nullptr;
}
inline bool Player::has_health() const {
  return _internal_has_health();
}
inline void Player::clear_health() {
  if (GetArena() == nullptr && health_ != nullptr) {
    delete health_;
  }
  health_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_health() const {
  const ::IvionOnline::Integer* p = health_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::health() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Health)
  return _internal_health();
}
inline void Player::unsafe_arena_set_allocated_health(
    ::IvionOnline::Integer* health) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(health_);
  }
  health_ = health;
  if (health) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Health)
}
inline ::IvionOnline::Integer* Player::release_health() {
  
  ::IvionOnline::Integer* temp = health_;
  health_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_health() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Health)
  
  ::IvionOnline::Integer* temp = health_;
  health_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_health() {
  
  if (health_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    health_ = p;
  }
  return health_;
}
inline ::IvionOnline::Integer* Player::mutable_health() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Health)
  return _internal_mutable_health();
}
inline void Player::set_allocated_health(::IvionOnline::Integer* health) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete health_;
  }
  if (health) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(health);
    if (message_arena != submessage_arena) {
      health = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, health, submessage_arena);
    }
    
  } else {
    
  }
  health_ = health;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Health)
}

// .IvionOnline.Integer Actions = 6;
inline bool Player::_internal_has_actions() const {
  return this != internal_default_instance() && actions_ != nullptr;
}
inline bool Player::has_actions() const {
  return _internal_has_actions();
}
inline void Player::clear_actions() {
  if (GetArena() == nullptr && actions_ != nullptr) {
    delete actions_;
  }
  actions_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_actions() const {
  const ::IvionOnline::Integer* p = actions_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::actions() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Actions)
  return _internal_actions();
}
inline void Player::unsafe_arena_set_allocated_actions(
    ::IvionOnline::Integer* actions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(actions_);
  }
  actions_ = actions;
  if (actions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Actions)
}
inline ::IvionOnline::Integer* Player::release_actions() {
  
  ::IvionOnline::Integer* temp = actions_;
  actions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_actions() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Actions)
  
  ::IvionOnline::Integer* temp = actions_;
  actions_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_actions() {
  
  if (actions_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    actions_ = p;
  }
  return actions_;
}
inline ::IvionOnline::Integer* Player::mutable_actions() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Actions)
  return _internal_mutable_actions();
}
inline void Player::set_allocated_actions(::IvionOnline::Integer* actions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete actions_;
  }
  if (actions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(actions);
    if (message_arena != submessage_arena) {
      actions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, actions, submessage_arena);
    }
    
  } else {
    
  }
  actions_ = actions;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Actions)
}

// .IvionOnline.Integer Power = 7;
inline bool Player::_internal_has_power() const {
  return this != internal_default_instance() && power_ != nullptr;
}
inline bool Player::has_power() const {
  return _internal_has_power();
}
inline void Player::clear_power() {
  if (GetArena() == nullptr && power_ != nullptr) {
    delete power_;
  }
  power_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_power() const {
  const ::IvionOnline::Integer* p = power_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::power() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Power)
  return _internal_power();
}
inline void Player::unsafe_arena_set_allocated_power(
    ::IvionOnline::Integer* power) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(power_);
  }
  power_ = power;
  if (power) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Power)
}
inline ::IvionOnline::Integer* Player::release_power() {
  
  ::IvionOnline::Integer* temp = power_;
  power_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_power() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Power)
  
  ::IvionOnline::Integer* temp = power_;
  power_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_power() {
  
  if (power_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    power_ = p;
  }
  return power_;
}
inline ::IvionOnline::Integer* Player::mutable_power() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Power)
  return _internal_mutable_power();
}
inline void Player::set_allocated_power(::IvionOnline::Integer* power) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete power_;
  }
  if (power) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(power);
    if (message_arena != submessage_arena) {
      power = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, power, submessage_arena);
    }
    
  } else {
    
  }
  power_ = power;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Power)
}

// .IvionOnline.Integer Initiative = 8;
inline bool Player::_internal_has_initiative() const {
  return this != internal_default_instance() && initiative_ != nullptr;
}
inline bool Player::has_initiative() const {
  return _internal_has_initiative();
}
inline void Player::clear_initiative() {
  if (GetArena() == nullptr && initiative_ != nullptr) {
    delete initiative_;
  }
  initiative_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_initiative() const {
  const ::IvionOnline::Integer* p = initiative_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::initiative() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Initiative)
  return _internal_initiative();
}
inline void Player::unsafe_arena_set_allocated_initiative(
    ::IvionOnline::Integer* initiative) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(initiative_);
  }
  initiative_ = initiative;
  if (initiative) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Initiative)
}
inline ::IvionOnline::Integer* Player::release_initiative() {
  
  ::IvionOnline::Integer* temp = initiative_;
  initiative_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_initiative() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Initiative)
  
  ::IvionOnline::Integer* temp = initiative_;
  initiative_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_initiative() {
  
  if (initiative_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    initiative_ = p;
  }
  return initiative_;
}
inline ::IvionOnline::Integer* Player::mutable_initiative() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Initiative)
  return _internal_mutable_initiative();
}
inline void Player::set_allocated_initiative(::IvionOnline::Integer* initiative) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete initiative_;
  }
  if (initiative) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(initiative);
    if (message_arena != submessage_arena) {
      initiative = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, initiative, submessage_arena);
    }
    
  } else {
    
  }
  initiative_ = initiative;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Initiative)
}

// .IvionOnline.Integer Slow = 9;
inline bool Player::_internal_has_slow() const {
  return this != internal_default_instance() && slow_ != nullptr;
}
inline bool Player::has_slow() const {
  return _internal_has_slow();
}
inline void Player::clear_slow() {
  if (GetArena() == nullptr && slow_ != nullptr) {
    delete slow_;
  }
  slow_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_slow() const {
  const ::IvionOnline::Integer* p = slow_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::slow() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Slow)
  return _internal_slow();
}
inline void Player::unsafe_arena_set_allocated_slow(
    ::IvionOnline::Integer* slow) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(slow_);
  }
  slow_ = slow;
  if (slow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Slow)
}
inline ::IvionOnline::Integer* Player::release_slow() {
  
  ::IvionOnline::Integer* temp = slow_;
  slow_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_slow() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Slow)
  
  ::IvionOnline::Integer* temp = slow_;
  slow_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_slow() {
  
  if (slow_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    slow_ = p;
  }
  return slow_;
}
inline ::IvionOnline::Integer* Player::mutable_slow() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Slow)
  return _internal_mutable_slow();
}
inline void Player::set_allocated_slow(::IvionOnline::Integer* slow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete slow_;
  }
  if (slow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(slow);
    if (message_arena != submessage_arena) {
      slow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, slow, submessage_arena);
    }
    
  } else {
    
  }
  slow_ = slow;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Slow)
}

// .IvionOnline.Integer Silence = 10;
inline bool Player::_internal_has_silence() const {
  return this != internal_default_instance() && silence_ != nullptr;
}
inline bool Player::has_silence() const {
  return _internal_has_silence();
}
inline void Player::clear_silence() {
  if (GetArena() == nullptr && silence_ != nullptr) {
    delete silence_;
  }
  silence_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_silence() const {
  const ::IvionOnline::Integer* p = silence_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::silence() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Silence)
  return _internal_silence();
}
inline void Player::unsafe_arena_set_allocated_silence(
    ::IvionOnline::Integer* silence) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(silence_);
  }
  silence_ = silence;
  if (silence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Silence)
}
inline ::IvionOnline::Integer* Player::release_silence() {
  
  ::IvionOnline::Integer* temp = silence_;
  silence_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_silence() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Silence)
  
  ::IvionOnline::Integer* temp = silence_;
  silence_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_silence() {
  
  if (silence_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    silence_ = p;
  }
  return silence_;
}
inline ::IvionOnline::Integer* Player::mutable_silence() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Silence)
  return _internal_mutable_silence();
}
inline void Player::set_allocated_silence(::IvionOnline::Integer* silence) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete silence_;
  }
  if (silence) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(silence);
    if (message_arena != submessage_arena) {
      silence = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, silence, submessage_arena);
    }
    
  } else {
    
  }
  silence_ = silence;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Silence)
}

// .IvionOnline.Integer Disarm = 11;
inline bool Player::_internal_has_disarm() const {
  return this != internal_default_instance() && disarm_ != nullptr;
}
inline bool Player::has_disarm() const {
  return _internal_has_disarm();
}
inline void Player::clear_disarm() {
  if (GetArena() == nullptr && disarm_ != nullptr) {
    delete disarm_;
  }
  disarm_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_disarm() const {
  const ::IvionOnline::Integer* p = disarm_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::disarm() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Disarm)
  return _internal_disarm();
}
inline void Player::unsafe_arena_set_allocated_disarm(
    ::IvionOnline::Integer* disarm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(disarm_);
  }
  disarm_ = disarm;
  if (disarm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Disarm)
}
inline ::IvionOnline::Integer* Player::release_disarm() {
  
  ::IvionOnline::Integer* temp = disarm_;
  disarm_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_disarm() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Disarm)
  
  ::IvionOnline::Integer* temp = disarm_;
  disarm_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_disarm() {
  
  if (disarm_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    disarm_ = p;
  }
  return disarm_;
}
inline ::IvionOnline::Integer* Player::mutable_disarm() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Disarm)
  return _internal_mutable_disarm();
}
inline void Player::set_allocated_disarm(::IvionOnline::Integer* disarm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete disarm_;
  }
  if (disarm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(disarm);
    if (message_arena != submessage_arena) {
      disarm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, disarm, submessage_arena);
    }
    
  } else {
    
  }
  disarm_ = disarm;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Disarm)
}

// .IvionOnline.Vec2i Position = 12;
inline bool Player::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool Player::has_position() const {
  return _internal_has_position();
}
inline void Player::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::IvionOnline::Vec2i& Player::_internal_position() const {
  const ::IvionOnline::Vec2i* p = position_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& Player::position() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Position)
  return _internal_position();
}
inline void Player::unsafe_arena_set_allocated_position(
    ::IvionOnline::Vec2i* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Position)
}
inline ::IvionOnline::Vec2i* Player::release_position() {
  
  ::IvionOnline::Vec2i* temp = position_;
  position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* Player::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Position)
  
  ::IvionOnline::Vec2i* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* Player::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::IvionOnline::Vec2i* Player::mutable_position() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Position)
  return _internal_mutable_position();
}
inline void Player::set_allocated_position(::IvionOnline::Vec2i* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Position)
}

// .IvionOnline.List_ObjectPath Hand = 13;
inline bool Player::_internal_has_hand() const {
  return this != internal_default_instance() && hand_ != nullptr;
}
inline bool Player::has_hand() const {
  return _internal_has_hand();
}
inline void Player::clear_hand() {
  if (GetArena() == nullptr && hand_ != nullptr) {
    delete hand_;
  }
  hand_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& Player::_internal_hand() const {
  const ::IvionOnline::List_ObjectPath* p = hand_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& Player::hand() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Hand)
  return _internal_hand();
}
inline void Player::unsafe_arena_set_allocated_hand(
    ::IvionOnline::List_ObjectPath* hand) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hand_);
  }
  hand_ = hand;
  if (hand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Hand)
}
inline ::IvionOnline::List_ObjectPath* Player::release_hand() {
  
  ::IvionOnline::List_ObjectPath* temp = hand_;
  hand_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::unsafe_arena_release_hand() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Hand)
  
  ::IvionOnline::List_ObjectPath* temp = hand_;
  hand_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::_internal_mutable_hand() {
  
  if (hand_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    hand_ = p;
  }
  return hand_;
}
inline ::IvionOnline::List_ObjectPath* Player::mutable_hand() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Hand)
  return _internal_mutable_hand();
}
inline void Player::set_allocated_hand(::IvionOnline::List_ObjectPath* hand) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete hand_;
  }
  if (hand) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hand);
    if (message_arena != submessage_arena) {
      hand = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hand, submessage_arena);
    }
    
  } else {
    
  }
  hand_ = hand;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Hand)
}

// .IvionOnline.List_ObjectPath Deck = 14;
inline bool Player::_internal_has_deck() const {
  return this != internal_default_instance() && deck_ != nullptr;
}
inline bool Player::has_deck() const {
  return _internal_has_deck();
}
inline void Player::clear_deck() {
  if (GetArena() == nullptr && deck_ != nullptr) {
    delete deck_;
  }
  deck_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& Player::_internal_deck() const {
  const ::IvionOnline::List_ObjectPath* p = deck_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& Player::deck() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Deck)
  return _internal_deck();
}
inline void Player::unsafe_arena_set_allocated_deck(
    ::IvionOnline::List_ObjectPath* deck) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(deck_);
  }
  deck_ = deck;
  if (deck) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Deck)
}
inline ::IvionOnline::List_ObjectPath* Player::release_deck() {
  
  ::IvionOnline::List_ObjectPath* temp = deck_;
  deck_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::unsafe_arena_release_deck() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Deck)
  
  ::IvionOnline::List_ObjectPath* temp = deck_;
  deck_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::_internal_mutable_deck() {
  
  if (deck_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    deck_ = p;
  }
  return deck_;
}
inline ::IvionOnline::List_ObjectPath* Player::mutable_deck() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Deck)
  return _internal_mutable_deck();
}
inline void Player::set_allocated_deck(::IvionOnline::List_ObjectPath* deck) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete deck_;
  }
  if (deck) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(deck);
    if (message_arena != submessage_arena) {
      deck = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, deck, submessage_arena);
    }
    
  } else {
    
  }
  deck_ = deck;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Deck)
}

// .IvionOnline.List_ObjectPath Discard = 15;
inline bool Player::_internal_has_discard() const {
  return this != internal_default_instance() && discard_ != nullptr;
}
inline bool Player::has_discard() const {
  return _internal_has_discard();
}
inline void Player::clear_discard() {
  if (GetArena() == nullptr && discard_ != nullptr) {
    delete discard_;
  }
  discard_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& Player::_internal_discard() const {
  const ::IvionOnline::List_ObjectPath* p = discard_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& Player::discard() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Discard)
  return _internal_discard();
}
inline void Player::unsafe_arena_set_allocated_discard(
    ::IvionOnline::List_ObjectPath* discard) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(discard_);
  }
  discard_ = discard;
  if (discard) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Discard)
}
inline ::IvionOnline::List_ObjectPath* Player::release_discard() {
  
  ::IvionOnline::List_ObjectPath* temp = discard_;
  discard_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::unsafe_arena_release_discard() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Discard)
  
  ::IvionOnline::List_ObjectPath* temp = discard_;
  discard_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::_internal_mutable_discard() {
  
  if (discard_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    discard_ = p;
  }
  return discard_;
}
inline ::IvionOnline::List_ObjectPath* Player::mutable_discard() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Discard)
  return _internal_mutable_discard();
}
inline void Player::set_allocated_discard(::IvionOnline::List_ObjectPath* discard) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete discard_;
  }
  if (discard) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(discard);
    if (message_arena != submessage_arena) {
      discard = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, discard, submessage_arena);
    }
    
  } else {
    
  }
  discard_ = discard;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Discard)
}

// .IvionOnline.List_ObjectPath Feats = 16;
inline bool Player::_internal_has_feats() const {
  return this != internal_default_instance() && feats_ != nullptr;
}
inline bool Player::has_feats() const {
  return _internal_has_feats();
}
inline void Player::clear_feats() {
  if (GetArena() == nullptr && feats_ != nullptr) {
    delete feats_;
  }
  feats_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& Player::_internal_feats() const {
  const ::IvionOnline::List_ObjectPath* p = feats_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& Player::feats() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Feats)
  return _internal_feats();
}
inline void Player::unsafe_arena_set_allocated_feats(
    ::IvionOnline::List_ObjectPath* feats) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(feats_);
  }
  feats_ = feats;
  if (feats) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.Feats)
}
inline ::IvionOnline::List_ObjectPath* Player::release_feats() {
  
  ::IvionOnline::List_ObjectPath* temp = feats_;
  feats_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::unsafe_arena_release_feats() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Feats)
  
  ::IvionOnline::List_ObjectPath* temp = feats_;
  feats_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Player::_internal_mutable_feats() {
  
  if (feats_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    feats_ = p;
  }
  return feats_;
}
inline ::IvionOnline::List_ObjectPath* Player::mutable_feats() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Feats)
  return _internal_mutable_feats();
}
inline void Player::set_allocated_feats(::IvionOnline::List_ObjectPath* feats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete feats_;
  }
  if (feats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(feats);
    if (message_arena != submessage_arena) {
      feats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, feats, submessage_arena);
    }
    
  } else {
    
  }
  feats_ = feats;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Feats)
}

// .IvionOnline.Integer MaxHealth = 17;
inline bool Player::_internal_has_maxhealth() const {
  return this != internal_default_instance() && maxhealth_ != nullptr;
}
inline bool Player::has_maxhealth() const {
  return _internal_has_maxhealth();
}
inline void Player::clear_maxhealth() {
  if (GetArena() == nullptr && maxhealth_ != nullptr) {
    delete maxhealth_;
  }
  maxhealth_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_maxhealth() const {
  const ::IvionOnline::Integer* p = maxhealth_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::maxhealth() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.MaxHealth)
  return _internal_maxhealth();
}
inline void Player::unsafe_arena_set_allocated_maxhealth(
    ::IvionOnline::Integer* maxhealth) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxhealth_);
  }
  maxhealth_ = maxhealth;
  if (maxhealth) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.MaxHealth)
}
inline ::IvionOnline::Integer* Player::release_maxhealth() {
  
  ::IvionOnline::Integer* temp = maxhealth_;
  maxhealth_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_maxhealth() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.MaxHealth)
  
  ::IvionOnline::Integer* temp = maxhealth_;
  maxhealth_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_maxhealth() {
  
  if (maxhealth_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    maxhealth_ = p;
  }
  return maxhealth_;
}
inline ::IvionOnline::Integer* Player::mutable_maxhealth() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.MaxHealth)
  return _internal_mutable_maxhealth();
}
inline void Player::set_allocated_maxhealth(::IvionOnline::Integer* maxhealth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maxhealth_;
  }
  if (maxhealth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maxhealth);
    if (message_arena != submessage_arena) {
      maxhealth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxhealth, submessage_arena);
    }
    
  } else {
    
  }
  maxhealth_ = maxhealth;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.MaxHealth)
}

// .IvionOnline.Integer MaxActions = 18;
inline bool Player::_internal_has_maxactions() const {
  return this != internal_default_instance() && maxactions_ != nullptr;
}
inline bool Player::has_maxactions() const {
  return _internal_has_maxactions();
}
inline void Player::clear_maxactions() {
  if (GetArena() == nullptr && maxactions_ != nullptr) {
    delete maxactions_;
  }
  maxactions_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_maxactions() const {
  const ::IvionOnline::Integer* p = maxactions_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::maxactions() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.MaxActions)
  return _internal_maxactions();
}
inline void Player::unsafe_arena_set_allocated_maxactions(
    ::IvionOnline::Integer* maxactions) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxactions_);
  }
  maxactions_ = maxactions;
  if (maxactions) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.MaxActions)
}
inline ::IvionOnline::Integer* Player::release_maxactions() {
  
  ::IvionOnline::Integer* temp = maxactions_;
  maxactions_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_maxactions() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.MaxActions)
  
  ::IvionOnline::Integer* temp = maxactions_;
  maxactions_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_maxactions() {
  
  if (maxactions_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    maxactions_ = p;
  }
  return maxactions_;
}
inline ::IvionOnline::Integer* Player::mutable_maxactions() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.MaxActions)
  return _internal_mutable_maxactions();
}
inline void Player::set_allocated_maxactions(::IvionOnline::Integer* maxactions) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maxactions_;
  }
  if (maxactions) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maxactions);
    if (message_arena != submessage_arena) {
      maxactions = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxactions, submessage_arena);
    }
    
  } else {
    
  }
  maxactions_ = maxactions;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.MaxActions)
}

// .IvionOnline.Integer MaxPower = 19;
inline bool Player::_internal_has_maxpower() const {
  return this != internal_default_instance() && maxpower_ != nullptr;
}
inline bool Player::has_maxpower() const {
  return _internal_has_maxpower();
}
inline void Player::clear_maxpower() {
  if (GetArena() == nullptr && maxpower_ != nullptr) {
    delete maxpower_;
  }
  maxpower_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_maxpower() const {
  const ::IvionOnline::Integer* p = maxpower_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::maxpower() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.MaxPower)
  return _internal_maxpower();
}
inline void Player::unsafe_arena_set_allocated_maxpower(
    ::IvionOnline::Integer* maxpower) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxpower_);
  }
  maxpower_ = maxpower;
  if (maxpower) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.MaxPower)
}
inline ::IvionOnline::Integer* Player::release_maxpower() {
  
  ::IvionOnline::Integer* temp = maxpower_;
  maxpower_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_maxpower() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.MaxPower)
  
  ::IvionOnline::Integer* temp = maxpower_;
  maxpower_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_maxpower() {
  
  if (maxpower_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    maxpower_ = p;
  }
  return maxpower_;
}
inline ::IvionOnline::Integer* Player::mutable_maxpower() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.MaxPower)
  return _internal_mutable_maxpower();
}
inline void Player::set_allocated_maxpower(::IvionOnline::Integer* maxpower) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maxpower_;
  }
  if (maxpower) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maxpower);
    if (message_arena != submessage_arena) {
      maxpower = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxpower, submessage_arena);
    }
    
  } else {
    
  }
  maxpower_ = maxpower;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.MaxPower)
}

// .IvionOnline.Integer MaxSlow = 20;
inline bool Player::_internal_has_maxslow() const {
  return this != internal_default_instance() && maxslow_ != nullptr;
}
inline bool Player::has_maxslow() const {
  return _internal_has_maxslow();
}
inline void Player::clear_maxslow() {
  if (GetArena() == nullptr && maxslow_ != nullptr) {
    delete maxslow_;
  }
  maxslow_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_maxslow() const {
  const ::IvionOnline::Integer* p = maxslow_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::maxslow() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.MaxSlow)
  return _internal_maxslow();
}
inline void Player::unsafe_arena_set_allocated_maxslow(
    ::IvionOnline::Integer* maxslow) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxslow_);
  }
  maxslow_ = maxslow;
  if (maxslow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.MaxSlow)
}
inline ::IvionOnline::Integer* Player::release_maxslow() {
  
  ::IvionOnline::Integer* temp = maxslow_;
  maxslow_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_maxslow() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.MaxSlow)
  
  ::IvionOnline::Integer* temp = maxslow_;
  maxslow_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_maxslow() {
  
  if (maxslow_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    maxslow_ = p;
  }
  return maxslow_;
}
inline ::IvionOnline::Integer* Player::mutable_maxslow() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.MaxSlow)
  return _internal_mutable_maxslow();
}
inline void Player::set_allocated_maxslow(::IvionOnline::Integer* maxslow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maxslow_;
  }
  if (maxslow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maxslow);
    if (message_arena != submessage_arena) {
      maxslow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxslow, submessage_arena);
    }
    
  } else {
    
  }
  maxslow_ = maxslow;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.MaxSlow)
}

// .IvionOnline.Integer MaxSilence = 21;
inline bool Player::_internal_has_maxsilence() const {
  return this != internal_default_instance() && maxsilence_ != nullptr;
}
inline bool Player::has_maxsilence() const {
  return _internal_has_maxsilence();
}
inline void Player::clear_maxsilence() {
  if (GetArena() == nullptr && maxsilence_ != nullptr) {
    delete maxsilence_;
  }
  maxsilence_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_maxsilence() const {
  const ::IvionOnline::Integer* p = maxsilence_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::maxsilence() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.MaxSilence)
  return _internal_maxsilence();
}
inline void Player::unsafe_arena_set_allocated_maxsilence(
    ::IvionOnline::Integer* maxsilence) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxsilence_);
  }
  maxsilence_ = maxsilence;
  if (maxsilence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.MaxSilence)
}
inline ::IvionOnline::Integer* Player::release_maxsilence() {
  
  ::IvionOnline::Integer* temp = maxsilence_;
  maxsilence_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_maxsilence() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.MaxSilence)
  
  ::IvionOnline::Integer* temp = maxsilence_;
  maxsilence_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_maxsilence() {
  
  if (maxsilence_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    maxsilence_ = p;
  }
  return maxsilence_;
}
inline ::IvionOnline::Integer* Player::mutable_maxsilence() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.MaxSilence)
  return _internal_mutable_maxsilence();
}
inline void Player::set_allocated_maxsilence(::IvionOnline::Integer* maxsilence) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maxsilence_;
  }
  if (maxsilence) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maxsilence);
    if (message_arena != submessage_arena) {
      maxsilence = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxsilence, submessage_arena);
    }
    
  } else {
    
  }
  maxsilence_ = maxsilence;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.MaxSilence)
}

// .IvionOnline.Integer MaxDisarm = 22;
inline bool Player::_internal_has_maxdisarm() const {
  return this != internal_default_instance() && maxdisarm_ != nullptr;
}
inline bool Player::has_maxdisarm() const {
  return _internal_has_maxdisarm();
}
inline void Player::clear_maxdisarm() {
  if (GetArena() == nullptr && maxdisarm_ != nullptr) {
    delete maxdisarm_;
  }
  maxdisarm_ = nullptr;
}
inline const ::IvionOnline::Integer& Player::_internal_maxdisarm() const {
  const ::IvionOnline::Integer* p = maxdisarm_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Player::maxdisarm() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.MaxDisarm)
  return _internal_maxdisarm();
}
inline void Player::unsafe_arena_set_allocated_maxdisarm(
    ::IvionOnline::Integer* maxdisarm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maxdisarm_);
  }
  maxdisarm_ = maxdisarm;
  if (maxdisarm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.MaxDisarm)
}
inline ::IvionOnline::Integer* Player::release_maxdisarm() {
  
  ::IvionOnline::Integer* temp = maxdisarm_;
  maxdisarm_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Player::unsafe_arena_release_maxdisarm() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.MaxDisarm)
  
  ::IvionOnline::Integer* temp = maxdisarm_;
  maxdisarm_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Player::_internal_mutable_maxdisarm() {
  
  if (maxdisarm_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    maxdisarm_ = p;
  }
  return maxdisarm_;
}
inline ::IvionOnline::Integer* Player::mutable_maxdisarm() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.MaxDisarm)
  return _internal_mutable_maxdisarm();
}
inline void Player::set_allocated_maxdisarm(::IvionOnline::Integer* maxdisarm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maxdisarm_;
  }
  if (maxdisarm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maxdisarm);
    if (message_arena != submessage_arena) {
      maxdisarm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maxdisarm, submessage_arena);
    }
    
  } else {
    
  }
  maxdisarm_ = maxdisarm;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.MaxDisarm)
}

// .IvionOnline.ObjectPath AbsPath = 23;
inline bool Player::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Player::has_abspath() const {
  return _internal_has_abspath();
}
inline void Player::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Player::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Player::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.AbsPath)
  return _internal_abspath();
}
inline void Player::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Player.AbsPath)
}
inline ::IvionOnline::ObjectPath* Player::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Player::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Player::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Player::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.AbsPath)
  return _internal_mutable_abspath();
}
inline void Player::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.AbsPath)
}

// string Name = 24;
inline void Player::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Player::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Player.Name)
  return _internal_name();
}
inline void Player::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Player.Name)
}
inline std::string* Player::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Player.Name)
  return _internal_mutable_name();
}
inline const std::string& Player::_internal_name() const {
  return name_.Get();
}
inline void Player::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Player::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Player.Name)
}
inline void Player::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Player.Name)
}
inline void Player::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Player.Name)
}
inline std::string* Player::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Player::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Player.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Player::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Player.Name)
}

// -------------------------------------------------------------------

// List_Player

// repeated .IvionOnline.Player element = 1;
inline int List_Player::_internal_element_size() const {
  return element_.size();
}
inline int List_Player::element_size() const {
  return _internal_element_size();
}
inline void List_Player::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Player* List_Player::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Player.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Player >*
List_Player::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Player.element)
  return &element_;
}
inline const ::IvionOnline::Player& List_Player::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Player& List_Player::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Player.element)
  return _internal_element(index);
}
inline ::IvionOnline::Player* List_Player::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Player* List_Player::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Player.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Player >&
List_Player::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Player.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Player::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Player::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Player::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Player::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Player::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Player.AbsPath)
  return _internal_abspath();
}
inline void List_Player::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Player.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Player::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Player::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Player.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Player::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Player::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Player.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Player::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Player.AbsPath)
}

// string Name = 3;
inline void List_Player::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Player::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Player.Name)
  return _internal_name();
}
inline void List_Player::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Player.Name)
}
inline std::string* List_Player::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Player.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Player::_internal_name() const {
  return name_.Get();
}
inline void List_Player::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Player::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Player.Name)
}
inline void List_Player::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Player.Name)
}
inline void List_Player::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Player.Name)
}
inline std::string* List_Player::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Player::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Player.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Player::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Player.Name)
}

// -------------------------------------------------------------------

// Card

// .IvionOnline.ObjectPath CardStats = 1;
inline bool Card::_internal_has_cardstats() const {
  return this != internal_default_instance() && cardstats_ != nullptr;
}
inline bool Card::has_cardstats() const {
  return _internal_has_cardstats();
}
inline void Card::clear_cardstats() {
  if (GetArena() == nullptr && cardstats_ != nullptr) {
    delete cardstats_;
  }
  cardstats_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Card::_internal_cardstats() const {
  const ::IvionOnline::ObjectPath* p = cardstats_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Card::cardstats() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Card.CardStats)
  return _internal_cardstats();
}
inline void Card::unsafe_arena_set_allocated_cardstats(
    ::IvionOnline::ObjectPath* cardstats) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cardstats_);
  }
  cardstats_ = cardstats;
  if (cardstats) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Card.CardStats)
}
inline ::IvionOnline::ObjectPath* Card::release_cardstats() {
  
  ::IvionOnline::ObjectPath* temp = cardstats_;
  cardstats_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Card::unsafe_arena_release_cardstats() {
  // @@protoc_insertion_point(field_release:IvionOnline.Card.CardStats)
  
  ::IvionOnline::ObjectPath* temp = cardstats_;
  cardstats_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Card::_internal_mutable_cardstats() {
  
  if (cardstats_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    cardstats_ = p;
  }
  return cardstats_;
}
inline ::IvionOnline::ObjectPath* Card::mutable_cardstats() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Card.CardStats)
  return _internal_mutable_cardstats();
}
inline void Card::set_allocated_cardstats(::IvionOnline::ObjectPath* cardstats) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cardstats_;
  }
  if (cardstats) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cardstats);
    if (message_arena != submessage_arena) {
      cardstats = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cardstats, submessage_arena);
    }
    
  } else {
    
  }
  cardstats_ = cardstats;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Card.CardStats)
}

// int32 Index = 2;
inline void Card::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Card::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Card::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Card.Index)
  return _internal_index();
}
inline void Card::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void Card::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Card.Index)
}

// string IndexStr = 3;
inline void Card::clear_indexstr() {
  indexstr_.ClearToEmpty();
}
inline const std::string& Card::indexstr() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Card.IndexStr)
  return _internal_indexstr();
}
inline void Card::set_indexstr(const std::string& value) {
  _internal_set_indexstr(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Card.IndexStr)
}
inline std::string* Card::mutable_indexstr() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Card.IndexStr)
  return _internal_mutable_indexstr();
}
inline const std::string& Card::_internal_indexstr() const {
  return indexstr_.Get();
}
inline void Card::_internal_set_indexstr(const std::string& value) {
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Card::set_indexstr(std::string&& value) {
  
  indexstr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Card.IndexStr)
}
inline void Card::set_indexstr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Card.IndexStr)
}
inline void Card::set_indexstr(const char* value,
    size_t size) {
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Card.IndexStr)
}
inline std::string* Card::_internal_mutable_indexstr() {
  
  return indexstr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Card::release_indexstr() {
  // @@protoc_insertion_point(field_release:IvionOnline.Card.IndexStr)
  return indexstr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Card::set_allocated_indexstr(std::string* indexstr) {
  if (indexstr != nullptr) {
    
  } else {
    
  }
  indexstr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), indexstr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Card.IndexStr)
}

// .IvionOnline.ObjectPath AbsPath = 4;
inline bool Card::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Card::has_abspath() const {
  return _internal_has_abspath();
}
inline void Card::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Card::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Card::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Card.AbsPath)
  return _internal_abspath();
}
inline void Card::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Card.AbsPath)
}
inline ::IvionOnline::ObjectPath* Card::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Card::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Card.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Card::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Card::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Card.AbsPath)
  return _internal_mutable_abspath();
}
inline void Card::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Card.AbsPath)
}

// string Name = 5;
inline void Card::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Card::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Card.Name)
  return _internal_name();
}
inline void Card::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Card.Name)
}
inline std::string* Card::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Card.Name)
  return _internal_mutable_name();
}
inline const std::string& Card::_internal_name() const {
  return name_.Get();
}
inline void Card::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Card::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Card.Name)
}
inline void Card::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Card.Name)
}
inline void Card::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Card.Name)
}
inline std::string* Card::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Card::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Card.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Card::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Card.Name)
}

// -------------------------------------------------------------------

// List_Card

// repeated .IvionOnline.Card element = 1;
inline int List_Card::_internal_element_size() const {
  return element_.size();
}
inline int List_Card::element_size() const {
  return _internal_element_size();
}
inline void List_Card::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Card* List_Card::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Card.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Card >*
List_Card::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Card.element)
  return &element_;
}
inline const ::IvionOnline::Card& List_Card::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Card& List_Card::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Card.element)
  return _internal_element(index);
}
inline ::IvionOnline::Card* List_Card::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Card* List_Card::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Card.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Card >&
List_Card::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Card.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Card::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Card::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Card::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Card::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Card::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Card.AbsPath)
  return _internal_abspath();
}
inline void List_Card::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Card.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Card::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Card::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Card.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Card::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Card::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Card.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Card::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Card.AbsPath)
}

// string Name = 3;
inline void List_Card::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Card::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Card.Name)
  return _internal_name();
}
inline void List_Card::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Card.Name)
}
inline std::string* List_Card::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Card.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Card::_internal_name() const {
  return name_.Get();
}
inline void List_Card::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Card::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Card.Name)
}
inline void List_Card::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Card.Name)
}
inline void List_Card::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Card.Name)
}
inline std::string* List_Card::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Card::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Card.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Card::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Card.Name)
}

// -------------------------------------------------------------------

// CardData

// .IvionOnline.ObjectPath Owner = 1;
inline bool CardData::_internal_has_owner() const {
  return this != internal_default_instance() && owner_ != nullptr;
}
inline bool CardData::has_owner() const {
  return _internal_has_owner();
}
inline void CardData::clear_owner() {
  if (GetArena() == nullptr && owner_ != nullptr) {
    delete owner_;
  }
  owner_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& CardData::_internal_owner() const {
  const ::IvionOnline::ObjectPath* p = owner_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& CardData::owner() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.Owner)
  return _internal_owner();
}
inline void CardData::unsafe_arena_set_allocated_owner(
    ::IvionOnline::ObjectPath* owner) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_);
  }
  owner_ = owner;
  if (owner) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.Owner)
}
inline ::IvionOnline::ObjectPath* CardData::release_owner() {
  
  ::IvionOnline::ObjectPath* temp = owner_;
  owner_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* CardData::unsafe_arena_release_owner() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.Owner)
  
  ::IvionOnline::ObjectPath* temp = owner_;
  owner_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* CardData::_internal_mutable_owner() {
  
  if (owner_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    owner_ = p;
  }
  return owner_;
}
inline ::IvionOnline::ObjectPath* CardData::mutable_owner() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.Owner)
  return _internal_mutable_owner();
}
inline void CardData::set_allocated_owner(::IvionOnline::ObjectPath* owner) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_;
  }
  if (owner) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner);
    if (message_arena != submessage_arena) {
      owner = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner, submessage_arena);
    }
    
  } else {
    
  }
  owner_ = owner;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.Owner)
}

// .IvionOnline.ObjectPath Controller = 2;
inline bool CardData::_internal_has_controller() const {
  return this != internal_default_instance() && controller_ != nullptr;
}
inline bool CardData::has_controller() const {
  return _internal_has_controller();
}
inline void CardData::clear_controller() {
  if (GetArena() == nullptr && controller_ != nullptr) {
    delete controller_;
  }
  controller_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& CardData::_internal_controller() const {
  const ::IvionOnline::ObjectPath* p = controller_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& CardData::controller() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.Controller)
  return _internal_controller();
}
inline void CardData::unsafe_arena_set_allocated_controller(
    ::IvionOnline::ObjectPath* controller) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(controller_);
  }
  controller_ = controller;
  if (controller) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.Controller)
}
inline ::IvionOnline::ObjectPath* CardData::release_controller() {
  
  ::IvionOnline::ObjectPath* temp = controller_;
  controller_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* CardData::unsafe_arena_release_controller() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.Controller)
  
  ::IvionOnline::ObjectPath* temp = controller_;
  controller_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* CardData::_internal_mutable_controller() {
  
  if (controller_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    controller_ = p;
  }
  return controller_;
}
inline ::IvionOnline::ObjectPath* CardData::mutable_controller() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.Controller)
  return _internal_mutable_controller();
}
inline void CardData::set_allocated_controller(::IvionOnline::ObjectPath* controller) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete controller_;
  }
  if (controller) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(controller);
    if (message_arena != submessage_arena) {
      controller = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, controller, submessage_arena);
    }
    
  } else {
    
  }
  controller_ = controller;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.Controller)
}

// .IvionOnline.Integer ActionCost = 3;
inline bool CardData::_internal_has_actioncost() const {
  return this != internal_default_instance() && actioncost_ != nullptr;
}
inline bool CardData::has_actioncost() const {
  return _internal_has_actioncost();
}
inline void CardData::clear_actioncost() {
  if (GetArena() == nullptr && actioncost_ != nullptr) {
    delete actioncost_;
  }
  actioncost_ = nullptr;
}
inline const ::IvionOnline::Integer& CardData::_internal_actioncost() const {
  const ::IvionOnline::Integer* p = actioncost_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& CardData::actioncost() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.ActionCost)
  return _internal_actioncost();
}
inline void CardData::unsafe_arena_set_allocated_actioncost(
    ::IvionOnline::Integer* actioncost) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(actioncost_);
  }
  actioncost_ = actioncost;
  if (actioncost) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.ActionCost)
}
inline ::IvionOnline::Integer* CardData::release_actioncost() {
  
  ::IvionOnline::Integer* temp = actioncost_;
  actioncost_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* CardData::unsafe_arena_release_actioncost() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.ActionCost)
  
  ::IvionOnline::Integer* temp = actioncost_;
  actioncost_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* CardData::_internal_mutable_actioncost() {
  
  if (actioncost_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    actioncost_ = p;
  }
  return actioncost_;
}
inline ::IvionOnline::Integer* CardData::mutable_actioncost() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.ActionCost)
  return _internal_mutable_actioncost();
}
inline void CardData::set_allocated_actioncost(::IvionOnline::Integer* actioncost) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete actioncost_;
  }
  if (actioncost) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(actioncost);
    if (message_arena != submessage_arena) {
      actioncost = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, actioncost, submessage_arena);
    }
    
  } else {
    
  }
  actioncost_ = actioncost;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.ActionCost)
}

// .IvionOnline.Integer PowerCost = 4;
inline bool CardData::_internal_has_powercost() const {
  return this != internal_default_instance() && powercost_ != nullptr;
}
inline bool CardData::has_powercost() const {
  return _internal_has_powercost();
}
inline void CardData::clear_powercost() {
  if (GetArena() == nullptr && powercost_ != nullptr) {
    delete powercost_;
  }
  powercost_ = nullptr;
}
inline const ::IvionOnline::Integer& CardData::_internal_powercost() const {
  const ::IvionOnline::Integer* p = powercost_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& CardData::powercost() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.PowerCost)
  return _internal_powercost();
}
inline void CardData::unsafe_arena_set_allocated_powercost(
    ::IvionOnline::Integer* powercost) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(powercost_);
  }
  powercost_ = powercost;
  if (powercost) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.PowerCost)
}
inline ::IvionOnline::Integer* CardData::release_powercost() {
  
  ::IvionOnline::Integer* temp = powercost_;
  powercost_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* CardData::unsafe_arena_release_powercost() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.PowerCost)
  
  ::IvionOnline::Integer* temp = powercost_;
  powercost_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* CardData::_internal_mutable_powercost() {
  
  if (powercost_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    powercost_ = p;
  }
  return powercost_;
}
inline ::IvionOnline::Integer* CardData::mutable_powercost() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.PowerCost)
  return _internal_mutable_powercost();
}
inline void CardData::set_allocated_powercost(::IvionOnline::Integer* powercost) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete powercost_;
  }
  if (powercost) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(powercost);
    if (message_arena != submessage_arena) {
      powercost = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powercost, submessage_arena);
    }
    
  } else {
    
  }
  powercost_ = powercost;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.PowerCost)
}

// .IvionOnline.Integer Range = 5;
inline bool CardData::_internal_has_range() const {
  return this != internal_default_instance() && range_ != nullptr;
}
inline bool CardData::has_range() const {
  return _internal_has_range();
}
inline void CardData::clear_range() {
  if (GetArena() == nullptr && range_ != nullptr) {
    delete range_;
  }
  range_ = nullptr;
}
inline const ::IvionOnline::Integer& CardData::_internal_range() const {
  const ::IvionOnline::Integer* p = range_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& CardData::range() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.Range)
  return _internal_range();
}
inline void CardData::unsafe_arena_set_allocated_range(
    ::IvionOnline::Integer* range) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(range_);
  }
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.Range)
}
inline ::IvionOnline::Integer* CardData::release_range() {
  
  ::IvionOnline::Integer* temp = range_;
  range_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* CardData::unsafe_arena_release_range() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.Range)
  
  ::IvionOnline::Integer* temp = range_;
  range_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* CardData::_internal_mutable_range() {
  
  if (range_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    range_ = p;
  }
  return range_;
}
inline ::IvionOnline::Integer* CardData::mutable_range() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.Range)
  return _internal_mutable_range();
}
inline void CardData::set_allocated_range(::IvionOnline::Integer* range) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete range_;
  }
  if (range) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(range);
    if (message_arena != submessage_arena) {
      range = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, range, submessage_arena);
    }
    
  } else {
    
  }
  range_ = range;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.Range)
}

// .IvionOnline.Boolean AffectedBySlow = 6;
inline bool CardData::_internal_has_affectedbyslow() const {
  return this != internal_default_instance() && affectedbyslow_ != nullptr;
}
inline bool CardData::has_affectedbyslow() const {
  return _internal_has_affectedbyslow();
}
inline void CardData::clear_affectedbyslow() {
  if (GetArena() == nullptr && affectedbyslow_ != nullptr) {
    delete affectedbyslow_;
  }
  affectedbyslow_ = nullptr;
}
inline const ::IvionOnline::Boolean& CardData::_internal_affectedbyslow() const {
  const ::IvionOnline::Boolean* p = affectedbyslow_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& CardData::affectedbyslow() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.AffectedBySlow)
  return _internal_affectedbyslow();
}
inline void CardData::unsafe_arena_set_allocated_affectedbyslow(
    ::IvionOnline::Boolean* affectedbyslow) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(affectedbyslow_);
  }
  affectedbyslow_ = affectedbyslow;
  if (affectedbyslow) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.AffectedBySlow)
}
inline ::IvionOnline::Boolean* CardData::release_affectedbyslow() {
  
  ::IvionOnline::Boolean* temp = affectedbyslow_;
  affectedbyslow_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* CardData::unsafe_arena_release_affectedbyslow() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.AffectedBySlow)
  
  ::IvionOnline::Boolean* temp = affectedbyslow_;
  affectedbyslow_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* CardData::_internal_mutable_affectedbyslow() {
  
  if (affectedbyslow_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    affectedbyslow_ = p;
  }
  return affectedbyslow_;
}
inline ::IvionOnline::Boolean* CardData::mutable_affectedbyslow() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.AffectedBySlow)
  return _internal_mutable_affectedbyslow();
}
inline void CardData::set_allocated_affectedbyslow(::IvionOnline::Boolean* affectedbyslow) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete affectedbyslow_;
  }
  if (affectedbyslow) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(affectedbyslow);
    if (message_arena != submessage_arena) {
      affectedbyslow = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, affectedbyslow, submessage_arena);
    }
    
  } else {
    
  }
  affectedbyslow_ = affectedbyslow;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.AffectedBySlow)
}

// .IvionOnline.Boolean AffectedBySilence = 7;
inline bool CardData::_internal_has_affectedbysilence() const {
  return this != internal_default_instance() && affectedbysilence_ != nullptr;
}
inline bool CardData::has_affectedbysilence() const {
  return _internal_has_affectedbysilence();
}
inline void CardData::clear_affectedbysilence() {
  if (GetArena() == nullptr && affectedbysilence_ != nullptr) {
    delete affectedbysilence_;
  }
  affectedbysilence_ = nullptr;
}
inline const ::IvionOnline::Boolean& CardData::_internal_affectedbysilence() const {
  const ::IvionOnline::Boolean* p = affectedbysilence_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& CardData::affectedbysilence() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.AffectedBySilence)
  return _internal_affectedbysilence();
}
inline void CardData::unsafe_arena_set_allocated_affectedbysilence(
    ::IvionOnline::Boolean* affectedbysilence) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(affectedbysilence_);
  }
  affectedbysilence_ = affectedbysilence;
  if (affectedbysilence) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.AffectedBySilence)
}
inline ::IvionOnline::Boolean* CardData::release_affectedbysilence() {
  
  ::IvionOnline::Boolean* temp = affectedbysilence_;
  affectedbysilence_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* CardData::unsafe_arena_release_affectedbysilence() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.AffectedBySilence)
  
  ::IvionOnline::Boolean* temp = affectedbysilence_;
  affectedbysilence_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* CardData::_internal_mutable_affectedbysilence() {
  
  if (affectedbysilence_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    affectedbysilence_ = p;
  }
  return affectedbysilence_;
}
inline ::IvionOnline::Boolean* CardData::mutable_affectedbysilence() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.AffectedBySilence)
  return _internal_mutable_affectedbysilence();
}
inline void CardData::set_allocated_affectedbysilence(::IvionOnline::Boolean* affectedbysilence) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete affectedbysilence_;
  }
  if (affectedbysilence) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(affectedbysilence);
    if (message_arena != submessage_arena) {
      affectedbysilence = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, affectedbysilence, submessage_arena);
    }
    
  } else {
    
  }
  affectedbysilence_ = affectedbysilence;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.AffectedBySilence)
}

// .IvionOnline.Boolean AffectedByDisarm = 8;
inline bool CardData::_internal_has_affectedbydisarm() const {
  return this != internal_default_instance() && affectedbydisarm_ != nullptr;
}
inline bool CardData::has_affectedbydisarm() const {
  return _internal_has_affectedbydisarm();
}
inline void CardData::clear_affectedbydisarm() {
  if (GetArena() == nullptr && affectedbydisarm_ != nullptr) {
    delete affectedbydisarm_;
  }
  affectedbydisarm_ = nullptr;
}
inline const ::IvionOnline::Boolean& CardData::_internal_affectedbydisarm() const {
  const ::IvionOnline::Boolean* p = affectedbydisarm_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& CardData::affectedbydisarm() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.AffectedByDisarm)
  return _internal_affectedbydisarm();
}
inline void CardData::unsafe_arena_set_allocated_affectedbydisarm(
    ::IvionOnline::Boolean* affectedbydisarm) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(affectedbydisarm_);
  }
  affectedbydisarm_ = affectedbydisarm;
  if (affectedbydisarm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.AffectedByDisarm)
}
inline ::IvionOnline::Boolean* CardData::release_affectedbydisarm() {
  
  ::IvionOnline::Boolean* temp = affectedbydisarm_;
  affectedbydisarm_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* CardData::unsafe_arena_release_affectedbydisarm() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.AffectedByDisarm)
  
  ::IvionOnline::Boolean* temp = affectedbydisarm_;
  affectedbydisarm_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* CardData::_internal_mutable_affectedbydisarm() {
  
  if (affectedbydisarm_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    affectedbydisarm_ = p;
  }
  return affectedbydisarm_;
}
inline ::IvionOnline::Boolean* CardData::mutable_affectedbydisarm() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.AffectedByDisarm)
  return _internal_mutable_affectedbydisarm();
}
inline void CardData::set_allocated_affectedbydisarm(::IvionOnline::Boolean* affectedbydisarm) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete affectedbydisarm_;
  }
  if (affectedbydisarm) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(affectedbydisarm);
    if (message_arena != submessage_arena) {
      affectedbydisarm = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, affectedbydisarm, submessage_arena);
    }
    
  } else {
    
  }
  affectedbydisarm_ = affectedbydisarm;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.AffectedByDisarm)
}

// .IvionOnline.List_Method OmniPresentEffect = 9;
inline bool CardData::_internal_has_omnipresenteffect() const {
  return this != internal_default_instance() && omnipresenteffect_ != nullptr;
}
inline bool CardData::has_omnipresenteffect() const {
  return _internal_has_omnipresenteffect();
}
inline void CardData::clear_omnipresenteffect() {
  if (GetArena() == nullptr && omnipresenteffect_ != nullptr) {
    delete omnipresenteffect_;
  }
  omnipresenteffect_ = nullptr;
}
inline const ::IvionOnline::List_Method& CardData::_internal_omnipresenteffect() const {
  const ::IvionOnline::List_Method* p = omnipresenteffect_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Method&>(
      ::IvionOnline::_List_Method_default_instance_);
}
inline const ::IvionOnline::List_Method& CardData::omnipresenteffect() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.OmniPresentEffect)
  return _internal_omnipresenteffect();
}
inline void CardData::unsafe_arena_set_allocated_omnipresenteffect(
    ::IvionOnline::List_Method* omnipresenteffect) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(omnipresenteffect_);
  }
  omnipresenteffect_ = omnipresenteffect;
  if (omnipresenteffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.OmniPresentEffect)
}
inline ::IvionOnline::List_Method* CardData::release_omnipresenteffect() {
  
  ::IvionOnline::List_Method* temp = omnipresenteffect_;
  omnipresenteffect_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Method* CardData::unsafe_arena_release_omnipresenteffect() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.OmniPresentEffect)
  
  ::IvionOnline::List_Method* temp = omnipresenteffect_;
  omnipresenteffect_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Method* CardData::_internal_mutable_omnipresenteffect() {
  
  if (omnipresenteffect_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Method>(GetArena());
    omnipresenteffect_ = p;
  }
  return omnipresenteffect_;
}
inline ::IvionOnline::List_Method* CardData::mutable_omnipresenteffect() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.OmniPresentEffect)
  return _internal_mutable_omnipresenteffect();
}
inline void CardData::set_allocated_omnipresenteffect(::IvionOnline::List_Method* omnipresenteffect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete omnipresenteffect_;
  }
  if (omnipresenteffect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(omnipresenteffect);
    if (message_arena != submessage_arena) {
      omnipresenteffect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, omnipresenteffect, submessage_arena);
    }
    
  } else {
    
  }
  omnipresenteffect_ = omnipresenteffect;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.OmniPresentEffect)
}

// .IvionOnline.List_Method PassiveEffect = 10;
inline bool CardData::_internal_has_passiveeffect() const {
  return this != internal_default_instance() && passiveeffect_ != nullptr;
}
inline bool CardData::has_passiveeffect() const {
  return _internal_has_passiveeffect();
}
inline void CardData::clear_passiveeffect() {
  if (GetArena() == nullptr && passiveeffect_ != nullptr) {
    delete passiveeffect_;
  }
  passiveeffect_ = nullptr;
}
inline const ::IvionOnline::List_Method& CardData::_internal_passiveeffect() const {
  const ::IvionOnline::List_Method* p = passiveeffect_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Method&>(
      ::IvionOnline::_List_Method_default_instance_);
}
inline const ::IvionOnline::List_Method& CardData::passiveeffect() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.PassiveEffect)
  return _internal_passiveeffect();
}
inline void CardData::unsafe_arena_set_allocated_passiveeffect(
    ::IvionOnline::List_Method* passiveeffect) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(passiveeffect_);
  }
  passiveeffect_ = passiveeffect;
  if (passiveeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.PassiveEffect)
}
inline ::IvionOnline::List_Method* CardData::release_passiveeffect() {
  
  ::IvionOnline::List_Method* temp = passiveeffect_;
  passiveeffect_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Method* CardData::unsafe_arena_release_passiveeffect() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.PassiveEffect)
  
  ::IvionOnline::List_Method* temp = passiveeffect_;
  passiveeffect_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Method* CardData::_internal_mutable_passiveeffect() {
  
  if (passiveeffect_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Method>(GetArena());
    passiveeffect_ = p;
  }
  return passiveeffect_;
}
inline ::IvionOnline::List_Method* CardData::mutable_passiveeffect() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.PassiveEffect)
  return _internal_mutable_passiveeffect();
}
inline void CardData::set_allocated_passiveeffect(::IvionOnline::List_Method* passiveeffect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete passiveeffect_;
  }
  if (passiveeffect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(passiveeffect);
    if (message_arena != submessage_arena) {
      passiveeffect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, passiveeffect, submessage_arena);
    }
    
  } else {
    
  }
  passiveeffect_ = passiveeffect;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.PassiveEffect)
}

// .IvionOnline.List_Method FeatEffect = 11;
inline bool CardData::_internal_has_feateffect() const {
  return this != internal_default_instance() && feateffect_ != nullptr;
}
inline bool CardData::has_feateffect() const {
  return _internal_has_feateffect();
}
inline void CardData::clear_feateffect() {
  if (GetArena() == nullptr && feateffect_ != nullptr) {
    delete feateffect_;
  }
  feateffect_ = nullptr;
}
inline const ::IvionOnline::List_Method& CardData::_internal_feateffect() const {
  const ::IvionOnline::List_Method* p = feateffect_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Method&>(
      ::IvionOnline::_List_Method_default_instance_);
}
inline const ::IvionOnline::List_Method& CardData::feateffect() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.FeatEffect)
  return _internal_feateffect();
}
inline void CardData::unsafe_arena_set_allocated_feateffect(
    ::IvionOnline::List_Method* feateffect) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(feateffect_);
  }
  feateffect_ = feateffect;
  if (feateffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.FeatEffect)
}
inline ::IvionOnline::List_Method* CardData::release_feateffect() {
  
  ::IvionOnline::List_Method* temp = feateffect_;
  feateffect_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Method* CardData::unsafe_arena_release_feateffect() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.FeatEffect)
  
  ::IvionOnline::List_Method* temp = feateffect_;
  feateffect_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Method* CardData::_internal_mutable_feateffect() {
  
  if (feateffect_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Method>(GetArena());
    feateffect_ = p;
  }
  return feateffect_;
}
inline ::IvionOnline::List_Method* CardData::mutable_feateffect() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.FeatEffect)
  return _internal_mutable_feateffect();
}
inline void CardData::set_allocated_feateffect(::IvionOnline::List_Method* feateffect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete feateffect_;
  }
  if (feateffect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(feateffect);
    if (message_arena != submessage_arena) {
      feateffect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, feateffect, submessage_arena);
    }
    
  } else {
    
  }
  feateffect_ = feateffect;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.FeatEffect)
}

// .IvionOnline.List_Method PlayEffect = 12;
inline bool CardData::_internal_has_playeffect() const {
  return this != internal_default_instance() && playeffect_ != nullptr;
}
inline bool CardData::has_playeffect() const {
  return _internal_has_playeffect();
}
inline void CardData::clear_playeffect() {
  if (GetArena() == nullptr && playeffect_ != nullptr) {
    delete playeffect_;
  }
  playeffect_ = nullptr;
}
inline const ::IvionOnline::List_Method& CardData::_internal_playeffect() const {
  const ::IvionOnline::List_Method* p = playeffect_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Method&>(
      ::IvionOnline::_List_Method_default_instance_);
}
inline const ::IvionOnline::List_Method& CardData::playeffect() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.PlayEffect)
  return _internal_playeffect();
}
inline void CardData::unsafe_arena_set_allocated_playeffect(
    ::IvionOnline::List_Method* playeffect) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(playeffect_);
  }
  playeffect_ = playeffect;
  if (playeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.PlayEffect)
}
inline ::IvionOnline::List_Method* CardData::release_playeffect() {
  
  ::IvionOnline::List_Method* temp = playeffect_;
  playeffect_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Method* CardData::unsafe_arena_release_playeffect() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.PlayEffect)
  
  ::IvionOnline::List_Method* temp = playeffect_;
  playeffect_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Method* CardData::_internal_mutable_playeffect() {
  
  if (playeffect_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Method>(GetArena());
    playeffect_ = p;
  }
  return playeffect_;
}
inline ::IvionOnline::List_Method* CardData::mutable_playeffect() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.PlayEffect)
  return _internal_mutable_playeffect();
}
inline void CardData::set_allocated_playeffect(::IvionOnline::List_Method* playeffect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete playeffect_;
  }
  if (playeffect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(playeffect);
    if (message_arena != submessage_arena) {
      playeffect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playeffect, submessage_arena);
    }
    
  } else {
    
  }
  playeffect_ = playeffect;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.PlayEffect)
}

// .IvionOnline.List_Method ResolveEffect = 13;
inline bool CardData::_internal_has_resolveeffect() const {
  return this != internal_default_instance() && resolveeffect_ != nullptr;
}
inline bool CardData::has_resolveeffect() const {
  return _internal_has_resolveeffect();
}
inline void CardData::clear_resolveeffect() {
  if (GetArena() == nullptr && resolveeffect_ != nullptr) {
    delete resolveeffect_;
  }
  resolveeffect_ = nullptr;
}
inline const ::IvionOnline::List_Method& CardData::_internal_resolveeffect() const {
  const ::IvionOnline::List_Method* p = resolveeffect_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Method&>(
      ::IvionOnline::_List_Method_default_instance_);
}
inline const ::IvionOnline::List_Method& CardData::resolveeffect() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.ResolveEffect)
  return _internal_resolveeffect();
}
inline void CardData::unsafe_arena_set_allocated_resolveeffect(
    ::IvionOnline::List_Method* resolveeffect) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(resolveeffect_);
  }
  resolveeffect_ = resolveeffect;
  if (resolveeffect) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.ResolveEffect)
}
inline ::IvionOnline::List_Method* CardData::release_resolveeffect() {
  
  ::IvionOnline::List_Method* temp = resolveeffect_;
  resolveeffect_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Method* CardData::unsafe_arena_release_resolveeffect() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.ResolveEffect)
  
  ::IvionOnline::List_Method* temp = resolveeffect_;
  resolveeffect_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Method* CardData::_internal_mutable_resolveeffect() {
  
  if (resolveeffect_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Method>(GetArena());
    resolveeffect_ = p;
  }
  return resolveeffect_;
}
inline ::IvionOnline::List_Method* CardData::mutable_resolveeffect() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.ResolveEffect)
  return _internal_mutable_resolveeffect();
}
inline void CardData::set_allocated_resolveeffect(::IvionOnline::List_Method* resolveeffect) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete resolveeffect_;
  }
  if (resolveeffect) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(resolveeffect);
    if (message_arena != submessage_arena) {
      resolveeffect = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, resolveeffect, submessage_arena);
    }
    
  } else {
    
  }
  resolveeffect_ = resolveeffect;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.ResolveEffect)
}

// .IvionOnline.ObjectPath AbsPath = 14;
inline bool CardData::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool CardData::has_abspath() const {
  return _internal_has_abspath();
}
inline void CardData::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& CardData::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& CardData::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.AbsPath)
  return _internal_abspath();
}
inline void CardData::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.CardData.AbsPath)
}
inline ::IvionOnline::ObjectPath* CardData::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* CardData::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* CardData::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* CardData::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.AbsPath)
  return _internal_mutable_abspath();
}
inline void CardData::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.AbsPath)
}

// string Name = 15;
inline void CardData::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& CardData::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.CardData.Name)
  return _internal_name();
}
inline void CardData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.CardData.Name)
}
inline std::string* CardData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.CardData.Name)
  return _internal_mutable_name();
}
inline const std::string& CardData::_internal_name() const {
  return name_.Get();
}
inline void CardData::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CardData::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.CardData.Name)
}
inline void CardData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.CardData.Name)
}
inline void CardData::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.CardData.Name)
}
inline std::string* CardData::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CardData::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.CardData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CardData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.CardData.Name)
}

// -------------------------------------------------------------------

// List_CardData

// repeated .IvionOnline.CardData element = 1;
inline int List_CardData::_internal_element_size() const {
  return element_.size();
}
inline int List_CardData::element_size() const {
  return _internal_element_size();
}
inline void List_CardData::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::CardData* List_CardData::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_CardData.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::CardData >*
List_CardData::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_CardData.element)
  return &element_;
}
inline const ::IvionOnline::CardData& List_CardData::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::CardData& List_CardData::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_CardData.element)
  return _internal_element(index);
}
inline ::IvionOnline::CardData* List_CardData::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::CardData* List_CardData::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_CardData.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::CardData >&
List_CardData::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_CardData.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_CardData::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_CardData::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_CardData::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_CardData::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_CardData::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_CardData.AbsPath)
  return _internal_abspath();
}
inline void List_CardData::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_CardData.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_CardData::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_CardData::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_CardData.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_CardData::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_CardData::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_CardData.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_CardData::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_CardData.AbsPath)
}

// string Name = 3;
inline void List_CardData::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_CardData::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_CardData.Name)
  return _internal_name();
}
inline void List_CardData::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_CardData.Name)
}
inline std::string* List_CardData::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_CardData.Name)
  return _internal_mutable_name();
}
inline const std::string& List_CardData::_internal_name() const {
  return name_.Get();
}
inline void List_CardData::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_CardData::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_CardData.Name)
}
inline void List_CardData::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_CardData.Name)
}
inline void List_CardData::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_CardData.Name)
}
inline std::string* List_CardData::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_CardData::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_CardData.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_CardData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_CardData.Name)
}

// -------------------------------------------------------------------

// Tile

// .IvionOnline.Vec2i Position = 1;
inline bool Tile::_internal_has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline bool Tile::has_position() const {
  return _internal_has_position();
}
inline void Tile::clear_position() {
  if (GetArena() == nullptr && position_ != nullptr) {
    delete position_;
  }
  position_ = nullptr;
}
inline const ::IvionOnline::Vec2i& Tile::_internal_position() const {
  const ::IvionOnline::Vec2i* p = position_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& Tile::position() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.Position)
  return _internal_position();
}
inline void Tile::unsafe_arena_set_allocated_position(
    ::IvionOnline::Vec2i* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Tile.Position)
}
inline ::IvionOnline::Vec2i* Tile::release_position() {
  
  ::IvionOnline::Vec2i* temp = position_;
  position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* Tile::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.Position)
  
  ::IvionOnline::Vec2i* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* Tile::_internal_mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::IvionOnline::Vec2i* Tile::mutable_position() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.Position)
  return _internal_mutable_position();
}
inline void Tile::set_allocated_position(::IvionOnline::Vec2i* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete position_;
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(position);
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.Position)
}

// int32 Index = 2;
inline void Tile::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Tile::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Tile::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.Index)
  return _internal_index();
}
inline void Tile::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void Tile::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Tile.Index)
}

// string IndexStr = 3;
inline void Tile::clear_indexstr() {
  indexstr_.ClearToEmpty();
}
inline const std::string& Tile::indexstr() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.IndexStr)
  return _internal_indexstr();
}
inline void Tile::set_indexstr(const std::string& value) {
  _internal_set_indexstr(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Tile.IndexStr)
}
inline std::string* Tile::mutable_indexstr() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.IndexStr)
  return _internal_mutable_indexstr();
}
inline const std::string& Tile::_internal_indexstr() const {
  return indexstr_.Get();
}
inline void Tile::_internal_set_indexstr(const std::string& value) {
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Tile::set_indexstr(std::string&& value) {
  
  indexstr_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Tile.IndexStr)
}
inline void Tile::set_indexstr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Tile.IndexStr)
}
inline void Tile::set_indexstr(const char* value,
    size_t size) {
  
  indexstr_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Tile.IndexStr)
}
inline std::string* Tile::_internal_mutable_indexstr() {
  
  return indexstr_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Tile::release_indexstr() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.IndexStr)
  return indexstr_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Tile::set_allocated_indexstr(std::string* indexstr) {
  if (indexstr != nullptr) {
    
  } else {
    
  }
  indexstr_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), indexstr,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.IndexStr)
}

// .IvionOnline.Terrain Terrain = 4;
inline bool Tile::_internal_has_terrain() const {
  return this != internal_default_instance() && terrain_ != nullptr;
}
inline bool Tile::has_terrain() const {
  return _internal_has_terrain();
}
inline void Tile::clear_terrain() {
  if (GetArena() == nullptr && terrain_ != nullptr) {
    delete terrain_;
  }
  terrain_ = nullptr;
}
inline const ::IvionOnline::Terrain& Tile::_internal_terrain() const {
  const ::IvionOnline::Terrain* p = terrain_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Terrain&>(
      ::IvionOnline::_Terrain_default_instance_);
}
inline const ::IvionOnline::Terrain& Tile::terrain() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.Terrain)
  return _internal_terrain();
}
inline void Tile::unsafe_arena_set_allocated_terrain(
    ::IvionOnline::Terrain* terrain) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(terrain_);
  }
  terrain_ = terrain;
  if (terrain) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Tile.Terrain)
}
inline ::IvionOnline::Terrain* Tile::release_terrain() {
  
  ::IvionOnline::Terrain* temp = terrain_;
  terrain_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Terrain* Tile::unsafe_arena_release_terrain() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.Terrain)
  
  ::IvionOnline::Terrain* temp = terrain_;
  terrain_ = nullptr;
  return temp;
}
inline ::IvionOnline::Terrain* Tile::_internal_mutable_terrain() {
  
  if (terrain_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Terrain>(GetArena());
    terrain_ = p;
  }
  return terrain_;
}
inline ::IvionOnline::Terrain* Tile::mutable_terrain() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.Terrain)
  return _internal_mutable_terrain();
}
inline void Tile::set_allocated_terrain(::IvionOnline::Terrain* terrain) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete terrain_;
  }
  if (terrain) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(terrain);
    if (message_arena != submessage_arena) {
      terrain = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, terrain, submessage_arena);
    }
    
  } else {
    
  }
  terrain_ = terrain;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.Terrain)
}

// .IvionOnline.List_ObjectPath Players = 5;
inline bool Tile::_internal_has_players() const {
  return this != internal_default_instance() && players_ != nullptr;
}
inline bool Tile::has_players() const {
  return _internal_has_players();
}
inline void Tile::clear_players() {
  if (GetArena() == nullptr && players_ != nullptr) {
    delete players_;
  }
  players_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& Tile::_internal_players() const {
  const ::IvionOnline::List_ObjectPath* p = players_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& Tile::players() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.Players)
  return _internal_players();
}
inline void Tile::unsafe_arena_set_allocated_players(
    ::IvionOnline::List_ObjectPath* players) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(players_);
  }
  players_ = players;
  if (players) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Tile.Players)
}
inline ::IvionOnline::List_ObjectPath* Tile::release_players() {
  
  ::IvionOnline::List_ObjectPath* temp = players_;
  players_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Tile::unsafe_arena_release_players() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.Players)
  
  ::IvionOnline::List_ObjectPath* temp = players_;
  players_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Tile::_internal_mutable_players() {
  
  if (players_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    players_ = p;
  }
  return players_;
}
inline ::IvionOnline::List_ObjectPath* Tile::mutable_players() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.Players)
  return _internal_mutable_players();
}
inline void Tile::set_allocated_players(::IvionOnline::List_ObjectPath* players) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete players_;
  }
  if (players) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(players);
    if (message_arena != submessage_arena) {
      players = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, players, submessage_arena);
    }
    
  } else {
    
  }
  players_ = players;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.Players)
}

// .IvionOnline.List_ObjectPath Cards = 6;
inline bool Tile::_internal_has_cards() const {
  return this != internal_default_instance() && cards_ != nullptr;
}
inline bool Tile::has_cards() const {
  return _internal_has_cards();
}
inline void Tile::clear_cards() {
  if (GetArena() == nullptr && cards_ != nullptr) {
    delete cards_;
  }
  cards_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& Tile::_internal_cards() const {
  const ::IvionOnline::List_ObjectPath* p = cards_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& Tile::cards() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.Cards)
  return _internal_cards();
}
inline void Tile::unsafe_arena_set_allocated_cards(
    ::IvionOnline::List_ObjectPath* cards) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cards_);
  }
  cards_ = cards;
  if (cards) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Tile.Cards)
}
inline ::IvionOnline::List_ObjectPath* Tile::release_cards() {
  
  ::IvionOnline::List_ObjectPath* temp = cards_;
  cards_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Tile::unsafe_arena_release_cards() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.Cards)
  
  ::IvionOnline::List_ObjectPath* temp = cards_;
  cards_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* Tile::_internal_mutable_cards() {
  
  if (cards_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    cards_ = p;
  }
  return cards_;
}
inline ::IvionOnline::List_ObjectPath* Tile::mutable_cards() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.Cards)
  return _internal_mutable_cards();
}
inline void Tile::set_allocated_cards(::IvionOnline::List_ObjectPath* cards) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cards_;
  }
  if (cards) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cards);
    if (message_arena != submessage_arena) {
      cards = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cards, submessage_arena);
    }
    
  } else {
    
  }
  cards_ = cards;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.Cards)
}

// .IvionOnline.ObjectPath AbsPath = 7;
inline bool Tile::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool Tile::has_abspath() const {
  return _internal_has_abspath();
}
inline void Tile::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Tile::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Tile::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.AbsPath)
  return _internal_abspath();
}
inline void Tile::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Tile.AbsPath)
}
inline ::IvionOnline::ObjectPath* Tile::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Tile::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Tile::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* Tile::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.AbsPath)
  return _internal_mutable_abspath();
}
inline void Tile::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.AbsPath)
}

// string Name = 8;
inline void Tile::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& Tile::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Tile.Name)
  return _internal_name();
}
inline void Tile::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.Tile.Name)
}
inline std::string* Tile::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Tile.Name)
  return _internal_mutable_name();
}
inline const std::string& Tile::_internal_name() const {
  return name_.Get();
}
inline void Tile::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void Tile::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.Tile.Name)
}
inline void Tile::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.Tile.Name)
}
inline void Tile::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.Tile.Name)
}
inline std::string* Tile::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* Tile::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.Tile.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void Tile::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Tile.Name)
}

// -------------------------------------------------------------------

// List_Tile

// repeated .IvionOnline.Tile element = 1;
inline int List_Tile::_internal_element_size() const {
  return element_.size();
}
inline int List_Tile::element_size() const {
  return _internal_element_size();
}
inline void List_Tile::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Tile* List_Tile::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Tile.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Tile >*
List_Tile::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Tile.element)
  return &element_;
}
inline const ::IvionOnline::Tile& List_Tile::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Tile& List_Tile::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Tile.element)
  return _internal_element(index);
}
inline ::IvionOnline::Tile* List_Tile::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Tile* List_Tile::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Tile.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Tile >&
List_Tile::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Tile.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_Tile::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_Tile::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_Tile::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Tile::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Tile::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Tile.AbsPath)
  return _internal_abspath();
}
inline void List_Tile::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Tile.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_Tile::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Tile::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Tile.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Tile::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_Tile::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Tile.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_Tile::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Tile.AbsPath)
}

// string Name = 3;
inline void List_Tile::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_Tile::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Tile.Name)
  return _internal_name();
}
inline void List_Tile::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Tile.Name)
}
inline std::string* List_Tile::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Tile.Name)
  return _internal_mutable_name();
}
inline const std::string& List_Tile::_internal_name() const {
  return name_.Get();
}
inline void List_Tile::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_Tile::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_Tile.Name)
}
inline void List_Tile::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_Tile.Name)
}
inline void List_Tile::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_Tile.Name)
}
inline std::string* List_Tile::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_Tile::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Tile.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_Tile::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Tile.Name)
}

// -------------------------------------------------------------------

// GameState

// .IvionOnline.List_Player Players = 1;
inline bool GameState::_internal_has_players() const {
  return this != internal_default_instance() && players_ != nullptr;
}
inline bool GameState::has_players() const {
  return _internal_has_players();
}
inline void GameState::clear_players() {
  if (GetArena() == nullptr && players_ != nullptr) {
    delete players_;
  }
  players_ = nullptr;
}
inline const ::IvionOnline::List_Player& GameState::_internal_players() const {
  const ::IvionOnline::List_Player* p = players_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Player&>(
      ::IvionOnline::_List_Player_default_instance_);
}
inline const ::IvionOnline::List_Player& GameState::players() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.Players)
  return _internal_players();
}
inline void GameState::unsafe_arena_set_allocated_players(
    ::IvionOnline::List_Player* players) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(players_);
  }
  players_ = players;
  if (players) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.Players)
}
inline ::IvionOnline::List_Player* GameState::release_players() {
  
  ::IvionOnline::List_Player* temp = players_;
  players_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Player* GameState::unsafe_arena_release_players() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.Players)
  
  ::IvionOnline::List_Player* temp = players_;
  players_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Player* GameState::_internal_mutable_players() {
  
  if (players_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Player>(GetArena());
    players_ = p;
  }
  return players_;
}
inline ::IvionOnline::List_Player* GameState::mutable_players() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.Players)
  return _internal_mutable_players();
}
inline void GameState::set_allocated_players(::IvionOnline::List_Player* players) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete players_;
  }
  if (players) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(players);
    if (message_arena != submessage_arena) {
      players = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, players, submessage_arena);
    }
    
  } else {
    
  }
  players_ = players;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.Players)
}

// .IvionOnline.List_Card Cards = 2;
inline bool GameState::_internal_has_cards() const {
  return this != internal_default_instance() && cards_ != nullptr;
}
inline bool GameState::has_cards() const {
  return _internal_has_cards();
}
inline void GameState::clear_cards() {
  if (GetArena() == nullptr && cards_ != nullptr) {
    delete cards_;
  }
  cards_ = nullptr;
}
inline const ::IvionOnline::List_Card& GameState::_internal_cards() const {
  const ::IvionOnline::List_Card* p = cards_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Card&>(
      ::IvionOnline::_List_Card_default_instance_);
}
inline const ::IvionOnline::List_Card& GameState::cards() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.Cards)
  return _internal_cards();
}
inline void GameState::unsafe_arena_set_allocated_cards(
    ::IvionOnline::List_Card* cards) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(cards_);
  }
  cards_ = cards;
  if (cards) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.Cards)
}
inline ::IvionOnline::List_Card* GameState::release_cards() {
  
  ::IvionOnline::List_Card* temp = cards_;
  cards_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Card* GameState::unsafe_arena_release_cards() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.Cards)
  
  ::IvionOnline::List_Card* temp = cards_;
  cards_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Card* GameState::_internal_mutable_cards() {
  
  if (cards_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Card>(GetArena());
    cards_ = p;
  }
  return cards_;
}
inline ::IvionOnline::List_Card* GameState::mutable_cards() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.Cards)
  return _internal_mutable_cards();
}
inline void GameState::set_allocated_cards(::IvionOnline::List_Card* cards) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete cards_;
  }
  if (cards) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(cards);
    if (message_arena != submessage_arena) {
      cards = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cards, submessage_arena);
    }
    
  } else {
    
  }
  cards_ = cards;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.Cards)
}

// .IvionOnline.List_CardData CardData = 3;
inline bool GameState::_internal_has_carddata() const {
  return this != internal_default_instance() && carddata_ != nullptr;
}
inline bool GameState::has_carddata() const {
  return _internal_has_carddata();
}
inline void GameState::clear_carddata() {
  if (GetArena() == nullptr && carddata_ != nullptr) {
    delete carddata_;
  }
  carddata_ = nullptr;
}
inline const ::IvionOnline::List_CardData& GameState::_internal_carddata() const {
  const ::IvionOnline::List_CardData* p = carddata_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_CardData&>(
      ::IvionOnline::_List_CardData_default_instance_);
}
inline const ::IvionOnline::List_CardData& GameState::carddata() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.CardData)
  return _internal_carddata();
}
inline void GameState::unsafe_arena_set_allocated_carddata(
    ::IvionOnline::List_CardData* carddata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(carddata_);
  }
  carddata_ = carddata;
  if (carddata) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.CardData)
}
inline ::IvionOnline::List_CardData* GameState::release_carddata() {
  
  ::IvionOnline::List_CardData* temp = carddata_;
  carddata_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_CardData* GameState::unsafe_arena_release_carddata() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.CardData)
  
  ::IvionOnline::List_CardData* temp = carddata_;
  carddata_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_CardData* GameState::_internal_mutable_carddata() {
  
  if (carddata_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_CardData>(GetArena());
    carddata_ = p;
  }
  return carddata_;
}
inline ::IvionOnline::List_CardData* GameState::mutable_carddata() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.CardData)
  return _internal_mutable_carddata();
}
inline void GameState::set_allocated_carddata(::IvionOnline::List_CardData* carddata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete carddata_;
  }
  if (carddata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(carddata);
    if (message_arena != submessage_arena) {
      carddata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, carddata, submessage_arena);
    }
    
  } else {
    
  }
  carddata_ = carddata;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.CardData)
}

// .IvionOnline.List_Tile Tiles = 4;
inline bool GameState::_internal_has_tiles() const {
  return this != internal_default_instance() && tiles_ != nullptr;
}
inline bool GameState::has_tiles() const {
  return _internal_has_tiles();
}
inline void GameState::clear_tiles() {
  if (GetArena() == nullptr && tiles_ != nullptr) {
    delete tiles_;
  }
  tiles_ = nullptr;
}
inline const ::IvionOnline::List_Tile& GameState::_internal_tiles() const {
  const ::IvionOnline::List_Tile* p = tiles_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_Tile&>(
      ::IvionOnline::_List_Tile_default_instance_);
}
inline const ::IvionOnline::List_Tile& GameState::tiles() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.Tiles)
  return _internal_tiles();
}
inline void GameState::unsafe_arena_set_allocated_tiles(
    ::IvionOnline::List_Tile* tiles) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tiles_);
  }
  tiles_ = tiles;
  if (tiles) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.Tiles)
}
inline ::IvionOnline::List_Tile* GameState::release_tiles() {
  
  ::IvionOnline::List_Tile* temp = tiles_;
  tiles_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_Tile* GameState::unsafe_arena_release_tiles() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.Tiles)
  
  ::IvionOnline::List_Tile* temp = tiles_;
  tiles_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_Tile* GameState::_internal_mutable_tiles() {
  
  if (tiles_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_Tile>(GetArena());
    tiles_ = p;
  }
  return tiles_;
}
inline ::IvionOnline::List_Tile* GameState::mutable_tiles() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.Tiles)
  return _internal_mutable_tiles();
}
inline void GameState::set_allocated_tiles(::IvionOnline::List_Tile* tiles) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete tiles_;
  }
  if (tiles) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tiles);
    if (message_arena != submessage_arena) {
      tiles = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tiles, submessage_arena);
    }
    
  } else {
    
  }
  tiles_ = tiles;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.Tiles)
}

// .IvionOnline.List_ObjectPath Field = 5;
inline bool GameState::_internal_has_field() const {
  return this != internal_default_instance() && field_ != nullptr;
}
inline bool GameState::has_field() const {
  return _internal_has_field();
}
inline void GameState::clear_field() {
  if (GetArena() == nullptr && field_ != nullptr) {
    delete field_;
  }
  field_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& GameState::_internal_field() const {
  const ::IvionOnline::List_ObjectPath* p = field_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& GameState::field() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.Field)
  return _internal_field();
}
inline void GameState::unsafe_arena_set_allocated_field(
    ::IvionOnline::List_ObjectPath* field) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(field_);
  }
  field_ = field;
  if (field) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.Field)
}
inline ::IvionOnline::List_ObjectPath* GameState::release_field() {
  
  ::IvionOnline::List_ObjectPath* temp = field_;
  field_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* GameState::unsafe_arena_release_field() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.Field)
  
  ::IvionOnline::List_ObjectPath* temp = field_;
  field_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* GameState::_internal_mutable_field() {
  
  if (field_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    field_ = p;
  }
  return field_;
}
inline ::IvionOnline::List_ObjectPath* GameState::mutable_field() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.Field)
  return _internal_mutable_field();
}
inline void GameState::set_allocated_field(::IvionOnline::List_ObjectPath* field) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete field_;
  }
  if (field) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(field);
    if (message_arena != submessage_arena) {
      field = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, field, submessage_arena);
    }
    
  } else {
    
  }
  field_ = field;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.Field)
}

// .IvionOnline.Integer TurnNumber = 6;
inline bool GameState::_internal_has_turnnumber() const {
  return this != internal_default_instance() && turnnumber_ != nullptr;
}
inline bool GameState::has_turnnumber() const {
  return _internal_has_turnnumber();
}
inline void GameState::clear_turnnumber() {
  if (GetArena() == nullptr && turnnumber_ != nullptr) {
    delete turnnumber_;
  }
  turnnumber_ = nullptr;
}
inline const ::IvionOnline::Integer& GameState::_internal_turnnumber() const {
  const ::IvionOnline::Integer* p = turnnumber_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& GameState::turnnumber() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.TurnNumber)
  return _internal_turnnumber();
}
inline void GameState::unsafe_arena_set_allocated_turnnumber(
    ::IvionOnline::Integer* turnnumber) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(turnnumber_);
  }
  turnnumber_ = turnnumber;
  if (turnnumber) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.TurnNumber)
}
inline ::IvionOnline::Integer* GameState::release_turnnumber() {
  
  ::IvionOnline::Integer* temp = turnnumber_;
  turnnumber_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* GameState::unsafe_arena_release_turnnumber() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.TurnNumber)
  
  ::IvionOnline::Integer* temp = turnnumber_;
  turnnumber_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* GameState::_internal_mutable_turnnumber() {
  
  if (turnnumber_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    turnnumber_ = p;
  }
  return turnnumber_;
}
inline ::IvionOnline::Integer* GameState::mutable_turnnumber() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.TurnNumber)
  return _internal_mutable_turnnumber();
}
inline void GameState::set_allocated_turnnumber(::IvionOnline::Integer* turnnumber) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete turnnumber_;
  }
  if (turnnumber) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(turnnumber);
    if (message_arena != submessage_arena) {
      turnnumber = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, turnnumber, submessage_arena);
    }
    
  } else {
    
  }
  turnnumber_ = turnnumber;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.TurnNumber)
}

// .IvionOnline.ObjectPath AbsPath = 7;
inline bool GameState::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool GameState::has_abspath() const {
  return _internal_has_abspath();
}
inline void GameState::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& GameState::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& GameState::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.AbsPath)
  return _internal_abspath();
}
inline void GameState::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GameState.AbsPath)
}
inline ::IvionOnline::ObjectPath* GameState::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* GameState::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* GameState::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* GameState::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.AbsPath)
  return _internal_mutable_abspath();
}
inline void GameState::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.AbsPath)
}

// string Name = 8;
inline void GameState::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& GameState::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GameState.Name)
  return _internal_name();
}
inline void GameState::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.GameState.Name)
}
inline std::string* GameState::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GameState.Name)
  return _internal_mutable_name();
}
inline const std::string& GameState::_internal_name() const {
  return name_.Get();
}
inline void GameState::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void GameState::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.GameState.Name)
}
inline void GameState::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.GameState.Name)
}
inline void GameState::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.GameState.Name)
}
inline std::string* GameState::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* GameState::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.GameState.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GameState::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GameState.Name)
}

// -------------------------------------------------------------------

// List_GameState

// repeated .IvionOnline.GameState element = 1;
inline int List_GameState::_internal_element_size() const {
  return element_.size();
}
inline int List_GameState::element_size() const {
  return _internal_element_size();
}
inline void List_GameState::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::GameState* List_GameState::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_GameState.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::GameState >*
List_GameState::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_GameState.element)
  return &element_;
}
inline const ::IvionOnline::GameState& List_GameState::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::GameState& List_GameState::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_GameState.element)
  return _internal_element(index);
}
inline ::IvionOnline::GameState* List_GameState::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::GameState* List_GameState::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_GameState.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::GameState >&
List_GameState::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_GameState.element)
  return element_;
}

// .IvionOnline.ObjectPath AbsPath = 2;
inline bool List_GameState::_internal_has_abspath() const {
  return this != internal_default_instance() && abspath_ != nullptr;
}
inline bool List_GameState::has_abspath() const {
  return _internal_has_abspath();
}
inline void List_GameState::clear_abspath() {
  if (GetArena() == nullptr && abspath_ != nullptr) {
    delete abspath_;
  }
  abspath_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_GameState::_internal_abspath() const {
  const ::IvionOnline::ObjectPath* p = abspath_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_GameState::abspath() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_GameState.AbsPath)
  return _internal_abspath();
}
inline void List_GameState::unsafe_arena_set_allocated_abspath(
    ::IvionOnline::ObjectPath* abspath) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(abspath_);
  }
  abspath_ = abspath;
  if (abspath) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_GameState.AbsPath)
}
inline ::IvionOnline::ObjectPath* List_GameState::release_abspath() {
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_GameState::unsafe_arena_release_abspath() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_GameState.AbsPath)
  
  ::IvionOnline::ObjectPath* temp = abspath_;
  abspath_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_GameState::_internal_mutable_abspath() {
  
  if (abspath_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    abspath_ = p;
  }
  return abspath_;
}
inline ::IvionOnline::ObjectPath* List_GameState::mutable_abspath() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_GameState.AbsPath)
  return _internal_mutable_abspath();
}
inline void List_GameState::set_allocated_abspath(::IvionOnline::ObjectPath* abspath) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete abspath_;
  }
  if (abspath) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(abspath);
    if (message_arena != submessage_arena) {
      abspath = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, abspath, submessage_arena);
    }
    
  } else {
    
  }
  abspath_ = abspath;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_GameState.AbsPath)
}

// string Name = 3;
inline void List_GameState::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& List_GameState::name() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_GameState.Name)
  return _internal_name();
}
inline void List_GameState::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_GameState.Name)
}
inline std::string* List_GameState::mutable_name() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_GameState.Name)
  return _internal_mutable_name();
}
inline const std::string& List_GameState::_internal_name() const {
  return name_.Get();
}
inline void List_GameState::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void List_GameState::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:IvionOnline.List_GameState.Name)
}
inline void List_GameState::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:IvionOnline.List_GameState.Name)
}
inline void List_GameState::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:IvionOnline.List_GameState.Name)
}
inline std::string* List_GameState::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* List_GameState::release_name() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_GameState.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void List_GameState::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_GameState.Name)
}

// -------------------------------------------------------------------

// Boolean_Set_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool Boolean_Set_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool Boolean_Set_Mutation::has_path() const {
  return _internal_has_path();
}
inline void Boolean_Set_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Boolean_Set_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Boolean_Set_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean_Set_Mutation.Path)
  return _internal_path();
}
inline void Boolean_Set_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Boolean_Set_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* Boolean_Set_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Boolean_Set_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.Boolean_Set_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Boolean_Set_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* Boolean_Set_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Boolean_Set_Mutation.Path)
  return _internal_mutable_path();
}
inline void Boolean_Set_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Boolean_Set_Mutation.Path)
}

// .IvionOnline.Boolean NewValue = 2;
inline bool Boolean_Set_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool Boolean_Set_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void Boolean_Set_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Boolean& Boolean_Set_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Boolean* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& Boolean_Set_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean_Set_Mutation.NewValue)
  return _internal_newvalue();
}
inline void Boolean_Set_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Boolean* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Boolean_Set_Mutation.NewValue)
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::release_newvalue() {
  
  ::IvionOnline::Boolean* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Boolean_Set_Mutation.NewValue)
  
  ::IvionOnline::Boolean* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Boolean_Set_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void Boolean_Set_Mutation::set_allocated_newvalue(::IvionOnline::Boolean* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Boolean_Set_Mutation.NewValue)
}

// .IvionOnline.Boolean OldValue = 3;
inline bool Boolean_Set_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool Boolean_Set_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void Boolean_Set_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Boolean& Boolean_Set_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Boolean* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& Boolean_Set_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean_Set_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void Boolean_Set_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Boolean* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Boolean_Set_Mutation.OldValue)
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::release_oldvalue() {
  
  ::IvionOnline::Boolean* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Boolean_Set_Mutation.OldValue)
  
  ::IvionOnline::Boolean* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Boolean* Boolean_Set_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Boolean_Set_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void Boolean_Set_Mutation::set_allocated_oldvalue(::IvionOnline::Boolean* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Boolean_Set_Mutation.OldValue)
}

// -------------------------------------------------------------------

// List_Boolean_Insert_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Boolean_Insert_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Boolean_Insert_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Boolean_Insert_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Boolean_Insert_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Boolean_Insert_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean_Insert_Mutation.Path)
  return _internal_path();
}
inline void List_Boolean_Insert_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Boolean_Insert_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Boolean_Insert_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Boolean_Insert_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Boolean_Insert_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Boolean_Insert_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Boolean_Insert_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean_Insert_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Boolean_Insert_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Boolean_Insert_Mutation.Path)
}

// .IvionOnline.Boolean NewValue = 2;
inline bool List_Boolean_Insert_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool List_Boolean_Insert_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void List_Boolean_Insert_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Boolean& List_Boolean_Insert_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Boolean* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& List_Boolean_Insert_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean_Insert_Mutation.NewValue)
  return _internal_newvalue();
}
inline void List_Boolean_Insert_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Boolean* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Boolean_Insert_Mutation.NewValue)
}
inline ::IvionOnline::Boolean* List_Boolean_Insert_Mutation::release_newvalue() {
  
  ::IvionOnline::Boolean* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* List_Boolean_Insert_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Boolean_Insert_Mutation.NewValue)
  
  ::IvionOnline::Boolean* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* List_Boolean_Insert_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Boolean* List_Boolean_Insert_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean_Insert_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void List_Boolean_Insert_Mutation::set_allocated_newvalue(::IvionOnline::Boolean* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Boolean_Insert_Mutation.NewValue)
}

// int32 Index = 3;
inline void List_Boolean_Insert_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Boolean_Insert_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Boolean_Insert_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean_Insert_Mutation.Index)
  return _internal_index();
}
inline void List_Boolean_Insert_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Boolean_Insert_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Boolean_Insert_Mutation.Index)
}

// -------------------------------------------------------------------

// List_Boolean_Remove_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Boolean_Remove_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Boolean_Remove_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Boolean_Remove_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Boolean_Remove_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Boolean_Remove_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean_Remove_Mutation.Path)
  return _internal_path();
}
inline void List_Boolean_Remove_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Boolean_Remove_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Boolean_Remove_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Boolean_Remove_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Boolean_Remove_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Boolean_Remove_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Boolean_Remove_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean_Remove_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Boolean_Remove_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Boolean_Remove_Mutation.Path)
}

// .IvionOnline.Boolean OldValue = 2;
inline bool List_Boolean_Remove_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool List_Boolean_Remove_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void List_Boolean_Remove_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Boolean& List_Boolean_Remove_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Boolean* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& List_Boolean_Remove_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean_Remove_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void List_Boolean_Remove_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Boolean* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Boolean_Remove_Mutation.OldValue)
}
inline ::IvionOnline::Boolean* List_Boolean_Remove_Mutation::release_oldvalue() {
  
  ::IvionOnline::Boolean* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* List_Boolean_Remove_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Boolean_Remove_Mutation.OldValue)
  
  ::IvionOnline::Boolean* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* List_Boolean_Remove_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Boolean* List_Boolean_Remove_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Boolean_Remove_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void List_Boolean_Remove_Mutation::set_allocated_oldvalue(::IvionOnline::Boolean* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Boolean_Remove_Mutation.OldValue)
}

// int32 Index = 3;
inline void List_Boolean_Remove_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Boolean_Remove_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Boolean_Remove_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Boolean_Remove_Mutation.Index)
  return _internal_index();
}
inline void List_Boolean_Remove_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Boolean_Remove_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Boolean_Remove_Mutation.Index)
}

// -------------------------------------------------------------------

// Integer_Set_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool Integer_Set_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool Integer_Set_Mutation::has_path() const {
  return _internal_has_path();
}
inline void Integer_Set_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Integer_Set_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Integer_Set_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer_Set_Mutation.Path)
  return _internal_path();
}
inline void Integer_Set_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Integer_Set_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* Integer_Set_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Integer_Set_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.Integer_Set_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Integer_Set_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* Integer_Set_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Integer_Set_Mutation.Path)
  return _internal_mutable_path();
}
inline void Integer_Set_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Integer_Set_Mutation.Path)
}

// .IvionOnline.Integer NewValue = 2;
inline bool Integer_Set_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool Integer_Set_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void Integer_Set_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Integer& Integer_Set_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Integer* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Integer_Set_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer_Set_Mutation.NewValue)
  return _internal_newvalue();
}
inline void Integer_Set_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Integer* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Integer_Set_Mutation.NewValue)
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::release_newvalue() {
  
  ::IvionOnline::Integer* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Integer_Set_Mutation.NewValue)
  
  ::IvionOnline::Integer* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Integer_Set_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void Integer_Set_Mutation::set_allocated_newvalue(::IvionOnline::Integer* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Integer_Set_Mutation.NewValue)
}

// .IvionOnline.Integer OldValue = 3;
inline bool Integer_Set_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool Integer_Set_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void Integer_Set_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Integer& Integer_Set_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Integer* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Integer_Set_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer_Set_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void Integer_Set_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Integer* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Integer_Set_Mutation.OldValue)
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::release_oldvalue() {
  
  ::IvionOnline::Integer* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Integer_Set_Mutation.OldValue)
  
  ::IvionOnline::Integer* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Integer* Integer_Set_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Integer_Set_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void Integer_Set_Mutation::set_allocated_oldvalue(::IvionOnline::Integer* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Integer_Set_Mutation.OldValue)
}

// -------------------------------------------------------------------

// List_Integer_Insert_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Integer_Insert_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Integer_Insert_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Integer_Insert_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Integer_Insert_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Integer_Insert_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer_Insert_Mutation.Path)
  return _internal_path();
}
inline void List_Integer_Insert_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Integer_Insert_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Integer_Insert_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Integer_Insert_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Integer_Insert_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Integer_Insert_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Integer_Insert_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer_Insert_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Integer_Insert_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Integer_Insert_Mutation.Path)
}

// .IvionOnline.Integer NewValue = 2;
inline bool List_Integer_Insert_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool List_Integer_Insert_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void List_Integer_Insert_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Integer& List_Integer_Insert_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Integer* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& List_Integer_Insert_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer_Insert_Mutation.NewValue)
  return _internal_newvalue();
}
inline void List_Integer_Insert_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Integer* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Integer_Insert_Mutation.NewValue)
}
inline ::IvionOnline::Integer* List_Integer_Insert_Mutation::release_newvalue() {
  
  ::IvionOnline::Integer* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* List_Integer_Insert_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Integer_Insert_Mutation.NewValue)
  
  ::IvionOnline::Integer* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* List_Integer_Insert_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Integer* List_Integer_Insert_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer_Insert_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void List_Integer_Insert_Mutation::set_allocated_newvalue(::IvionOnline::Integer* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Integer_Insert_Mutation.NewValue)
}

// int32 Index = 3;
inline void List_Integer_Insert_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Integer_Insert_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Integer_Insert_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer_Insert_Mutation.Index)
  return _internal_index();
}
inline void List_Integer_Insert_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Integer_Insert_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Integer_Insert_Mutation.Index)
}

// -------------------------------------------------------------------

// List_Integer_Remove_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Integer_Remove_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Integer_Remove_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Integer_Remove_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Integer_Remove_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Integer_Remove_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer_Remove_Mutation.Path)
  return _internal_path();
}
inline void List_Integer_Remove_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Integer_Remove_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Integer_Remove_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Integer_Remove_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Integer_Remove_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Integer_Remove_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Integer_Remove_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer_Remove_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Integer_Remove_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Integer_Remove_Mutation.Path)
}

// .IvionOnline.Integer OldValue = 2;
inline bool List_Integer_Remove_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool List_Integer_Remove_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void List_Integer_Remove_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Integer& List_Integer_Remove_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Integer* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& List_Integer_Remove_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer_Remove_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void List_Integer_Remove_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Integer* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Integer_Remove_Mutation.OldValue)
}
inline ::IvionOnline::Integer* List_Integer_Remove_Mutation::release_oldvalue() {
  
  ::IvionOnline::Integer* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* List_Integer_Remove_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Integer_Remove_Mutation.OldValue)
  
  ::IvionOnline::Integer* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* List_Integer_Remove_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Integer* List_Integer_Remove_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Integer_Remove_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void List_Integer_Remove_Mutation::set_allocated_oldvalue(::IvionOnline::Integer* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Integer_Remove_Mutation.OldValue)
}

// int32 Index = 3;
inline void List_Integer_Remove_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Integer_Remove_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Integer_Remove_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Integer_Remove_Mutation.Index)
  return _internal_index();
}
inline void List_Integer_Remove_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Integer_Remove_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Integer_Remove_Mutation.Index)
}

// -------------------------------------------------------------------

// Vec2i_Set_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool Vec2i_Set_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool Vec2i_Set_Mutation::has_path() const {
  return _internal_has_path();
}
inline void Vec2i_Set_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Vec2i_Set_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Vec2i_Set_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i_Set_Mutation.Path)
  return _internal_path();
}
inline void Vec2i_Set_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Vec2i_Set_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* Vec2i_Set_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Vec2i_Set_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.Vec2i_Set_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Vec2i_Set_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* Vec2i_Set_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Vec2i_Set_Mutation.Path)
  return _internal_mutable_path();
}
inline void Vec2i_Set_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Vec2i_Set_Mutation.Path)
}

// .IvionOnline.Vec2i NewValue = 2;
inline bool Vec2i_Set_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool Vec2i_Set_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void Vec2i_Set_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Vec2i& Vec2i_Set_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Vec2i* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& Vec2i_Set_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i_Set_Mutation.NewValue)
  return _internal_newvalue();
}
inline void Vec2i_Set_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Vec2i* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Vec2i_Set_Mutation.NewValue)
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::release_newvalue() {
  
  ::IvionOnline::Vec2i* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Vec2i_Set_Mutation.NewValue)
  
  ::IvionOnline::Vec2i* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Vec2i_Set_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void Vec2i_Set_Mutation::set_allocated_newvalue(::IvionOnline::Vec2i* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Vec2i_Set_Mutation.NewValue)
}

// .IvionOnline.Vec2i OldValue = 3;
inline bool Vec2i_Set_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool Vec2i_Set_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void Vec2i_Set_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Vec2i& Vec2i_Set_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Vec2i* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& Vec2i_Set_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i_Set_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void Vec2i_Set_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Vec2i* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Vec2i_Set_Mutation.OldValue)
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::release_oldvalue() {
  
  ::IvionOnline::Vec2i* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Vec2i_Set_Mutation.OldValue)
  
  ::IvionOnline::Vec2i* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Vec2i* Vec2i_Set_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Vec2i_Set_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void Vec2i_Set_Mutation::set_allocated_oldvalue(::IvionOnline::Vec2i* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Vec2i_Set_Mutation.OldValue)
}

// -------------------------------------------------------------------

// List_Vec2i_Insert_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Vec2i_Insert_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Vec2i_Insert_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Vec2i_Insert_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Vec2i_Insert_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Vec2i_Insert_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i_Insert_Mutation.Path)
  return _internal_path();
}
inline void List_Vec2i_Insert_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Vec2i_Insert_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Insert_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Insert_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Vec2i_Insert_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Insert_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Insert_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i_Insert_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Vec2i_Insert_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Vec2i_Insert_Mutation.Path)
}

// .IvionOnline.Vec2i NewValue = 2;
inline bool List_Vec2i_Insert_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool List_Vec2i_Insert_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void List_Vec2i_Insert_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Vec2i& List_Vec2i_Insert_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Vec2i* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& List_Vec2i_Insert_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i_Insert_Mutation.NewValue)
  return _internal_newvalue();
}
inline void List_Vec2i_Insert_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Vec2i* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Vec2i_Insert_Mutation.NewValue)
}
inline ::IvionOnline::Vec2i* List_Vec2i_Insert_Mutation::release_newvalue() {
  
  ::IvionOnline::Vec2i* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* List_Vec2i_Insert_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Vec2i_Insert_Mutation.NewValue)
  
  ::IvionOnline::Vec2i* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* List_Vec2i_Insert_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Vec2i* List_Vec2i_Insert_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i_Insert_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void List_Vec2i_Insert_Mutation::set_allocated_newvalue(::IvionOnline::Vec2i* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Vec2i_Insert_Mutation.NewValue)
}

// int32 Index = 3;
inline void List_Vec2i_Insert_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Vec2i_Insert_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Vec2i_Insert_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i_Insert_Mutation.Index)
  return _internal_index();
}
inline void List_Vec2i_Insert_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Vec2i_Insert_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Vec2i_Insert_Mutation.Index)
}

// -------------------------------------------------------------------

// List_Vec2i_Remove_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Vec2i_Remove_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Vec2i_Remove_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Vec2i_Remove_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Vec2i_Remove_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Vec2i_Remove_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i_Remove_Mutation.Path)
  return _internal_path();
}
inline void List_Vec2i_Remove_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Vec2i_Remove_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Remove_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Remove_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Vec2i_Remove_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Remove_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Vec2i_Remove_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i_Remove_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Vec2i_Remove_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Vec2i_Remove_Mutation.Path)
}

// .IvionOnline.Vec2i OldValue = 2;
inline bool List_Vec2i_Remove_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool List_Vec2i_Remove_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void List_Vec2i_Remove_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Vec2i& List_Vec2i_Remove_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Vec2i* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& List_Vec2i_Remove_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i_Remove_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void List_Vec2i_Remove_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Vec2i* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Vec2i_Remove_Mutation.OldValue)
}
inline ::IvionOnline::Vec2i* List_Vec2i_Remove_Mutation::release_oldvalue() {
  
  ::IvionOnline::Vec2i* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* List_Vec2i_Remove_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Vec2i_Remove_Mutation.OldValue)
  
  ::IvionOnline::Vec2i* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* List_Vec2i_Remove_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Vec2i* List_Vec2i_Remove_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Vec2i_Remove_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void List_Vec2i_Remove_Mutation::set_allocated_oldvalue(::IvionOnline::Vec2i* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Vec2i_Remove_Mutation.OldValue)
}

// int32 Index = 3;
inline void List_Vec2i_Remove_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Vec2i_Remove_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Vec2i_Remove_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Vec2i_Remove_Mutation.Index)
  return _internal_index();
}
inline void List_Vec2i_Remove_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Vec2i_Remove_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Vec2i_Remove_Mutation.Index)
}

// -------------------------------------------------------------------

// Terrain_Set_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool Terrain_Set_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool Terrain_Set_Mutation::has_path() const {
  return _internal_has_path();
}
inline void Terrain_Set_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Terrain_Set_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Terrain_Set_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain_Set_Mutation.Path)
  return _internal_path();
}
inline void Terrain_Set_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Terrain_Set_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* Terrain_Set_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Terrain_Set_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.Terrain_Set_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Terrain_Set_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* Terrain_Set_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Terrain_Set_Mutation.Path)
  return _internal_mutable_path();
}
inline void Terrain_Set_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Terrain_Set_Mutation.Path)
}

// .IvionOnline.Terrain NewValue = 2;
inline bool Terrain_Set_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool Terrain_Set_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void Terrain_Set_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Terrain& Terrain_Set_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Terrain* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Terrain&>(
      ::IvionOnline::_Terrain_default_instance_);
}
inline const ::IvionOnline::Terrain& Terrain_Set_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain_Set_Mutation.NewValue)
  return _internal_newvalue();
}
inline void Terrain_Set_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Terrain* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Terrain_Set_Mutation.NewValue)
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::release_newvalue() {
  
  ::IvionOnline::Terrain* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Terrain_Set_Mutation.NewValue)
  
  ::IvionOnline::Terrain* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Terrain>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Terrain_Set_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void Terrain_Set_Mutation::set_allocated_newvalue(::IvionOnline::Terrain* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Terrain_Set_Mutation.NewValue)
}

// .IvionOnline.Terrain OldValue = 3;
inline bool Terrain_Set_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool Terrain_Set_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void Terrain_Set_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Terrain& Terrain_Set_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Terrain* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Terrain&>(
      ::IvionOnline::_Terrain_default_instance_);
}
inline const ::IvionOnline::Terrain& Terrain_Set_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain_Set_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void Terrain_Set_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Terrain* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Terrain_Set_Mutation.OldValue)
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::release_oldvalue() {
  
  ::IvionOnline::Terrain* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Terrain_Set_Mutation.OldValue)
  
  ::IvionOnline::Terrain* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Terrain>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Terrain* Terrain_Set_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Terrain_Set_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void Terrain_Set_Mutation::set_allocated_oldvalue(::IvionOnline::Terrain* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Terrain_Set_Mutation.OldValue)
}

// -------------------------------------------------------------------

// List_Terrain_Insert_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Terrain_Insert_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Terrain_Insert_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Terrain_Insert_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Terrain_Insert_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Terrain_Insert_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain_Insert_Mutation.Path)
  return _internal_path();
}
inline void List_Terrain_Insert_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Terrain_Insert_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Terrain_Insert_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Terrain_Insert_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Terrain_Insert_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Terrain_Insert_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Terrain_Insert_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain_Insert_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Terrain_Insert_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Terrain_Insert_Mutation.Path)
}

// .IvionOnline.Terrain NewValue = 2;
inline bool List_Terrain_Insert_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool List_Terrain_Insert_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void List_Terrain_Insert_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Terrain& List_Terrain_Insert_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Terrain* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Terrain&>(
      ::IvionOnline::_Terrain_default_instance_);
}
inline const ::IvionOnline::Terrain& List_Terrain_Insert_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain_Insert_Mutation.NewValue)
  return _internal_newvalue();
}
inline void List_Terrain_Insert_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Terrain* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Terrain_Insert_Mutation.NewValue)
}
inline ::IvionOnline::Terrain* List_Terrain_Insert_Mutation::release_newvalue() {
  
  ::IvionOnline::Terrain* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Terrain* List_Terrain_Insert_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Terrain_Insert_Mutation.NewValue)
  
  ::IvionOnline::Terrain* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Terrain* List_Terrain_Insert_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Terrain>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Terrain* List_Terrain_Insert_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain_Insert_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void List_Terrain_Insert_Mutation::set_allocated_newvalue(::IvionOnline::Terrain* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Terrain_Insert_Mutation.NewValue)
}

// int32 Index = 3;
inline void List_Terrain_Insert_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Terrain_Insert_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Terrain_Insert_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain_Insert_Mutation.Index)
  return _internal_index();
}
inline void List_Terrain_Insert_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Terrain_Insert_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Terrain_Insert_Mutation.Index)
}

// -------------------------------------------------------------------

// List_Terrain_Remove_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Terrain_Remove_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Terrain_Remove_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Terrain_Remove_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Terrain_Remove_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Terrain_Remove_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain_Remove_Mutation.Path)
  return _internal_path();
}
inline void List_Terrain_Remove_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Terrain_Remove_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Terrain_Remove_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Terrain_Remove_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Terrain_Remove_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Terrain_Remove_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Terrain_Remove_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain_Remove_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Terrain_Remove_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Terrain_Remove_Mutation.Path)
}

// .IvionOnline.Terrain OldValue = 2;
inline bool List_Terrain_Remove_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool List_Terrain_Remove_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void List_Terrain_Remove_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Terrain& List_Terrain_Remove_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Terrain* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Terrain&>(
      ::IvionOnline::_Terrain_default_instance_);
}
inline const ::IvionOnline::Terrain& List_Terrain_Remove_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain_Remove_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void List_Terrain_Remove_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Terrain* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Terrain_Remove_Mutation.OldValue)
}
inline ::IvionOnline::Terrain* List_Terrain_Remove_Mutation::release_oldvalue() {
  
  ::IvionOnline::Terrain* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Terrain* List_Terrain_Remove_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Terrain_Remove_Mutation.OldValue)
  
  ::IvionOnline::Terrain* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Terrain* List_Terrain_Remove_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Terrain>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Terrain* List_Terrain_Remove_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Terrain_Remove_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void List_Terrain_Remove_Mutation::set_allocated_oldvalue(::IvionOnline::Terrain* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Terrain_Remove_Mutation.OldValue)
}

// int32 Index = 3;
inline void List_Terrain_Remove_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Terrain_Remove_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Terrain_Remove_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Terrain_Remove_Mutation.Index)
  return _internal_index();
}
inline void List_Terrain_Remove_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Terrain_Remove_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Terrain_Remove_Mutation.Index)
}

// -------------------------------------------------------------------

// Color_Set_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool Color_Set_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool Color_Set_Mutation::has_path() const {
  return _internal_has_path();
}
inline void Color_Set_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Color_Set_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Color_Set_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color_Set_Mutation.Path)
  return _internal_path();
}
inline void Color_Set_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Color_Set_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* Color_Set_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Color_Set_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.Color_Set_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Color_Set_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* Color_Set_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Color_Set_Mutation.Path)
  return _internal_mutable_path();
}
inline void Color_Set_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Color_Set_Mutation.Path)
}

// .IvionOnline.Color NewValue = 2;
inline bool Color_Set_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool Color_Set_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void Color_Set_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Color& Color_Set_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Color* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Color&>(
      ::IvionOnline::_Color_default_instance_);
}
inline const ::IvionOnline::Color& Color_Set_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color_Set_Mutation.NewValue)
  return _internal_newvalue();
}
inline void Color_Set_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Color* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Color_Set_Mutation.NewValue)
}
inline ::IvionOnline::Color* Color_Set_Mutation::release_newvalue() {
  
  ::IvionOnline::Color* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Color* Color_Set_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Color_Set_Mutation.NewValue)
  
  ::IvionOnline::Color* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Color* Color_Set_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Color>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Color* Color_Set_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Color_Set_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void Color_Set_Mutation::set_allocated_newvalue(::IvionOnline::Color* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Color_Set_Mutation.NewValue)
}

// .IvionOnline.Color OldValue = 3;
inline bool Color_Set_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool Color_Set_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void Color_Set_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Color& Color_Set_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Color* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Color&>(
      ::IvionOnline::_Color_default_instance_);
}
inline const ::IvionOnline::Color& Color_Set_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color_Set_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void Color_Set_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Color* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Color_Set_Mutation.OldValue)
}
inline ::IvionOnline::Color* Color_Set_Mutation::release_oldvalue() {
  
  ::IvionOnline::Color* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Color* Color_Set_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.Color_Set_Mutation.OldValue)
  
  ::IvionOnline::Color* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Color* Color_Set_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Color>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Color* Color_Set_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Color_Set_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void Color_Set_Mutation::set_allocated_oldvalue(::IvionOnline::Color* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Color_Set_Mutation.OldValue)
}

// -------------------------------------------------------------------

// List_Color_Insert_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Color_Insert_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Color_Insert_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Color_Insert_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Color_Insert_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Color_Insert_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color_Insert_Mutation.Path)
  return _internal_path();
}
inline void List_Color_Insert_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Color_Insert_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Color_Insert_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Color_Insert_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Color_Insert_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Color_Insert_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Color_Insert_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color_Insert_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Color_Insert_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Color_Insert_Mutation.Path)
}

// .IvionOnline.Color NewValue = 2;
inline bool List_Color_Insert_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool List_Color_Insert_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void List_Color_Insert_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::Color& List_Color_Insert_Mutation::_internal_newvalue() const {
  const ::IvionOnline::Color* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Color&>(
      ::IvionOnline::_Color_default_instance_);
}
inline const ::IvionOnline::Color& List_Color_Insert_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color_Insert_Mutation.NewValue)
  return _internal_newvalue();
}
inline void List_Color_Insert_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::Color* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Color_Insert_Mutation.NewValue)
}
inline ::IvionOnline::Color* List_Color_Insert_Mutation::release_newvalue() {
  
  ::IvionOnline::Color* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Color* List_Color_Insert_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Color_Insert_Mutation.NewValue)
  
  ::IvionOnline::Color* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Color* List_Color_Insert_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Color>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::Color* List_Color_Insert_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color_Insert_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void List_Color_Insert_Mutation::set_allocated_newvalue(::IvionOnline::Color* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Color_Insert_Mutation.NewValue)
}

// int32 Index = 3;
inline void List_Color_Insert_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Color_Insert_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Color_Insert_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color_Insert_Mutation.Index)
  return _internal_index();
}
inline void List_Color_Insert_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Color_Insert_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Color_Insert_Mutation.Index)
}

// -------------------------------------------------------------------

// List_Color_Remove_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_Color_Remove_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_Color_Remove_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_Color_Remove_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_Color_Remove_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_Color_Remove_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color_Remove_Mutation.Path)
  return _internal_path();
}
inline void List_Color_Remove_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Color_Remove_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_Color_Remove_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Color_Remove_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Color_Remove_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_Color_Remove_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_Color_Remove_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color_Remove_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_Color_Remove_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Color_Remove_Mutation.Path)
}

// .IvionOnline.Color OldValue = 2;
inline bool List_Color_Remove_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool List_Color_Remove_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void List_Color_Remove_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::Color& List_Color_Remove_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::Color* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Color&>(
      ::IvionOnline::_Color_default_instance_);
}
inline const ::IvionOnline::Color& List_Color_Remove_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color_Remove_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void List_Color_Remove_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::Color* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_Color_Remove_Mutation.OldValue)
}
inline ::IvionOnline::Color* List_Color_Remove_Mutation::release_oldvalue() {
  
  ::IvionOnline::Color* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Color* List_Color_Remove_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_Color_Remove_Mutation.OldValue)
  
  ::IvionOnline::Color* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::Color* List_Color_Remove_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Color>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::Color* List_Color_Remove_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Color_Remove_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void List_Color_Remove_Mutation::set_allocated_oldvalue(::IvionOnline::Color* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_Color_Remove_Mutation.OldValue)
}

// int32 Index = 3;
inline void List_Color_Remove_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Color_Remove_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_Color_Remove_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Color_Remove_Mutation.Index)
  return _internal_index();
}
inline void List_Color_Remove_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_Color_Remove_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_Color_Remove_Mutation.Index)
}

// -------------------------------------------------------------------

// ObjectPath_Set_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool ObjectPath_Set_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool ObjectPath_Set_Mutation::has_path() const {
  return _internal_has_path();
}
inline void ObjectPath_Set_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Set_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Set_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.ObjectPath_Set_Mutation.Path)
  return _internal_path();
}
inline void ObjectPath_Set_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.ObjectPath_Set_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.ObjectPath_Set_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.ObjectPath_Set_Mutation.Path)
  return _internal_mutable_path();
}
inline void ObjectPath_Set_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.ObjectPath_Set_Mutation.Path)
}

// .IvionOnline.ObjectPath NewValue = 2;
inline bool ObjectPath_Set_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool ObjectPath_Set_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void ObjectPath_Set_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Set_Mutation::_internal_newvalue() const {
  const ::IvionOnline::ObjectPath* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Set_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.ObjectPath_Set_Mutation.NewValue)
  return _internal_newvalue();
}
inline void ObjectPath_Set_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::ObjectPath* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.ObjectPath_Set_Mutation.NewValue)
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::release_newvalue() {
  
  ::IvionOnline::ObjectPath* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.ObjectPath_Set_Mutation.NewValue)
  
  ::IvionOnline::ObjectPath* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.ObjectPath_Set_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void ObjectPath_Set_Mutation::set_allocated_newvalue(::IvionOnline::ObjectPath* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.ObjectPath_Set_Mutation.NewValue)
}

// .IvionOnline.ObjectPath OldValue = 3;
inline bool ObjectPath_Set_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool ObjectPath_Set_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void ObjectPath_Set_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Set_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::ObjectPath* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Set_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.ObjectPath_Set_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void ObjectPath_Set_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::ObjectPath* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.ObjectPath_Set_Mutation.OldValue)
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::release_oldvalue() {
  
  ::IvionOnline::ObjectPath* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.ObjectPath_Set_Mutation.OldValue)
  
  ::IvionOnline::ObjectPath* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Set_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.ObjectPath_Set_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void ObjectPath_Set_Mutation::set_allocated_oldvalue(::IvionOnline::ObjectPath* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.ObjectPath_Set_Mutation.OldValue)
}

// -------------------------------------------------------------------

// List_ObjectPath_Insert_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_ObjectPath_Insert_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_ObjectPath_Insert_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_ObjectPath_Insert_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Insert_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Insert_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath_Insert_Mutation.Path)
  return _internal_path();
}
inline void List_ObjectPath_Insert_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_ObjectPath_Insert_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_ObjectPath_Insert_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath_Insert_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_ObjectPath_Insert_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_ObjectPath_Insert_Mutation.Path)
}

// .IvionOnline.ObjectPath NewValue = 2;
inline bool List_ObjectPath_Insert_Mutation::_internal_has_newvalue() const {
  return this != internal_default_instance() && newvalue_ != nullptr;
}
inline bool List_ObjectPath_Insert_Mutation::has_newvalue() const {
  return _internal_has_newvalue();
}
inline void List_ObjectPath_Insert_Mutation::clear_newvalue() {
  if (GetArena() == nullptr && newvalue_ != nullptr) {
    delete newvalue_;
  }
  newvalue_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Insert_Mutation::_internal_newvalue() const {
  const ::IvionOnline::ObjectPath* p = newvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Insert_Mutation::newvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath_Insert_Mutation.NewValue)
  return _internal_newvalue();
}
inline void List_ObjectPath_Insert_Mutation::unsafe_arena_set_allocated_newvalue(
    ::IvionOnline::ObjectPath* newvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(newvalue_);
  }
  newvalue_ = newvalue;
  if (newvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_ObjectPath_Insert_Mutation.NewValue)
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::release_newvalue() {
  
  ::IvionOnline::ObjectPath* temp = newvalue_;
  newvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::unsafe_arena_release_newvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_ObjectPath_Insert_Mutation.NewValue)
  
  ::IvionOnline::ObjectPath* temp = newvalue_;
  newvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::_internal_mutable_newvalue() {
  
  if (newvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    newvalue_ = p;
  }
  return newvalue_;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Insert_Mutation::mutable_newvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath_Insert_Mutation.NewValue)
  return _internal_mutable_newvalue();
}
inline void List_ObjectPath_Insert_Mutation::set_allocated_newvalue(::IvionOnline::ObjectPath* newvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete newvalue_;
  }
  if (newvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(newvalue);
    if (message_arena != submessage_arena) {
      newvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, newvalue, submessage_arena);
    }
    
  } else {
    
  }
  newvalue_ = newvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_ObjectPath_Insert_Mutation.NewValue)
}

// int32 Index = 3;
inline void List_ObjectPath_Insert_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_ObjectPath_Insert_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_ObjectPath_Insert_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath_Insert_Mutation.Index)
  return _internal_index();
}
inline void List_ObjectPath_Insert_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_ObjectPath_Insert_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_ObjectPath_Insert_Mutation.Index)
}

// -------------------------------------------------------------------

// List_ObjectPath_Remove_Mutation

// .IvionOnline.ObjectPath Path = 1;
inline bool List_ObjectPath_Remove_Mutation::_internal_has_path() const {
  return this != internal_default_instance() && path_ != nullptr;
}
inline bool List_ObjectPath_Remove_Mutation::has_path() const {
  return _internal_has_path();
}
inline void List_ObjectPath_Remove_Mutation::clear_path() {
  if (GetArena() == nullptr && path_ != nullptr) {
    delete path_;
  }
  path_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Remove_Mutation::_internal_path() const {
  const ::IvionOnline::ObjectPath* p = path_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Remove_Mutation::path() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath_Remove_Mutation.Path)
  return _internal_path();
}
inline void List_ObjectPath_Remove_Mutation::unsafe_arena_set_allocated_path(
    ::IvionOnline::ObjectPath* path) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(path_);
  }
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_ObjectPath_Remove_Mutation.Path)
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::release_path() {
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::unsafe_arena_release_path() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_ObjectPath_Remove_Mutation.Path)
  
  ::IvionOnline::ObjectPath* temp = path_;
  path_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::_internal_mutable_path() {
  
  if (path_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    path_ = p;
  }
  return path_;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::mutable_path() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath_Remove_Mutation.Path)
  return _internal_mutable_path();
}
inline void List_ObjectPath_Remove_Mutation::set_allocated_path(::IvionOnline::ObjectPath* path) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete path_;
  }
  if (path) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path);
    if (message_arena != submessage_arena) {
      path = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_ObjectPath_Remove_Mutation.Path)
}

// .IvionOnline.ObjectPath OldValue = 2;
inline bool List_ObjectPath_Remove_Mutation::_internal_has_oldvalue() const {
  return this != internal_default_instance() && oldvalue_ != nullptr;
}
inline bool List_ObjectPath_Remove_Mutation::has_oldvalue() const {
  return _internal_has_oldvalue();
}
inline void List_ObjectPath_Remove_Mutation::clear_oldvalue() {
  if (GetArena() == nullptr && oldvalue_ != nullptr) {
    delete oldvalue_;
  }
  oldvalue_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Remove_Mutation::_internal_oldvalue() const {
  const ::IvionOnline::ObjectPath* p = oldvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& List_ObjectPath_Remove_Mutation::oldvalue() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath_Remove_Mutation.OldValue)
  return _internal_oldvalue();
}
inline void List_ObjectPath_Remove_Mutation::unsafe_arena_set_allocated_oldvalue(
    ::IvionOnline::ObjectPath* oldvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oldvalue_);
  }
  oldvalue_ = oldvalue;
  if (oldvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.List_ObjectPath_Remove_Mutation.OldValue)
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::release_oldvalue() {
  
  ::IvionOnline::ObjectPath* temp = oldvalue_;
  oldvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::unsafe_arena_release_oldvalue() {
  // @@protoc_insertion_point(field_release:IvionOnline.List_ObjectPath_Remove_Mutation.OldValue)
  
  ::IvionOnline::ObjectPath* temp = oldvalue_;
  oldvalue_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::_internal_mutable_oldvalue() {
  
  if (oldvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    oldvalue_ = p;
  }
  return oldvalue_;
}
inline ::IvionOnline::ObjectPath* List_ObjectPath_Remove_Mutation::mutable_oldvalue() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_ObjectPath_Remove_Mutation.OldValue)
  return _internal_mutable_oldvalue();
}
inline void List_ObjectPath_Remove_Mutation::set_allocated_oldvalue(::IvionOnline::ObjectPath* oldvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oldvalue_;
  }
  if (oldvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oldvalue);
    if (message_arena != submessage_arena) {
      oldvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oldvalue, submessage_arena);
    }
    
  } else {
    
  }
  oldvalue_ = oldvalue;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.List_ObjectPath_Remove_Mutation.OldValue)
}

// int32 Index = 3;
inline void List_ObjectPath_Remove_Mutation::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_ObjectPath_Remove_Mutation::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 List_ObjectPath_Remove_Mutation::index() const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_ObjectPath_Remove_Mutation.Index)
  return _internal_index();
}
inline void List_ObjectPath_Remove_Mutation::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void List_ObjectPath_Remove_Mutation::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:IvionOnline.List_ObjectPath_Remove_Mutation.Index)
}

// -------------------------------------------------------------------

// Mutation

// .IvionOnline.Boolean_Set_Mutation Boolean_Set_Mutation = 1;
inline bool Mutation::_internal_has_boolean_set_mutation() const {
  return mut_case() == kBooleanSetMutation;
}
inline bool Mutation::has_boolean_set_mutation() const {
  return _internal_has_boolean_set_mutation();
}
inline void Mutation::set_has_boolean_set_mutation() {
  _oneof_case_[0] = kBooleanSetMutation;
}
inline void Mutation::clear_boolean_set_mutation() {
  if (_internal_has_boolean_set_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.boolean_set_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::Boolean_Set_Mutation* Mutation::release_boolean_set_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.Boolean_Set_Mutation)
  if (_internal_has_boolean_set_mutation()) {
    clear_has_mut();
      ::IvionOnline::Boolean_Set_Mutation* temp = mut_.boolean_set_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.boolean_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Boolean_Set_Mutation& Mutation::_internal_boolean_set_mutation() const {
  return _internal_has_boolean_set_mutation()
      ? *mut_.boolean_set_mutation_
      : reinterpret_cast< ::IvionOnline::Boolean_Set_Mutation&>(::IvionOnline::_Boolean_Set_Mutation_default_instance_);
}
inline const ::IvionOnline::Boolean_Set_Mutation& Mutation::boolean_set_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.Boolean_Set_Mutation)
  return _internal_boolean_set_mutation();
}
inline ::IvionOnline::Boolean_Set_Mutation* Mutation::unsafe_arena_release_boolean_set_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.Boolean_Set_Mutation)
  if (_internal_has_boolean_set_mutation()) {
    clear_has_mut();
    ::IvionOnline::Boolean_Set_Mutation* temp = mut_.boolean_set_mutation_;
    mut_.boolean_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_boolean_set_mutation(::IvionOnline::Boolean_Set_Mutation* boolean_set_mutation) {
  clear_mut();
  if (boolean_set_mutation) {
    set_has_boolean_set_mutation();
    mut_.boolean_set_mutation_ = boolean_set_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.Boolean_Set_Mutation)
}
inline ::IvionOnline::Boolean_Set_Mutation* Mutation::_internal_mutable_boolean_set_mutation() {
  if (!_internal_has_boolean_set_mutation()) {
    clear_mut();
    set_has_boolean_set_mutation();
    mut_.boolean_set_mutation_ = CreateMaybeMessage< ::IvionOnline::Boolean_Set_Mutation >(GetArena());
  }
  return mut_.boolean_set_mutation_;
}
inline ::IvionOnline::Boolean_Set_Mutation* Mutation::mutable_boolean_set_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.Boolean_Set_Mutation)
  return _internal_mutable_boolean_set_mutation();
}

// .IvionOnline.List_Boolean_Insert_Mutation List_Boolean_Insert_Mutation = 2;
inline bool Mutation::_internal_has_list_boolean_insert_mutation() const {
  return mut_case() == kListBooleanInsertMutation;
}
inline bool Mutation::has_list_boolean_insert_mutation() const {
  return _internal_has_list_boolean_insert_mutation();
}
inline void Mutation::set_has_list_boolean_insert_mutation() {
  _oneof_case_[0] = kListBooleanInsertMutation;
}
inline void Mutation::clear_list_boolean_insert_mutation() {
  if (_internal_has_list_boolean_insert_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_boolean_insert_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Boolean_Insert_Mutation* Mutation::release_list_boolean_insert_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Boolean_Insert_Mutation)
  if (_internal_has_list_boolean_insert_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Boolean_Insert_Mutation* temp = mut_.list_boolean_insert_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_boolean_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Boolean_Insert_Mutation& Mutation::_internal_list_boolean_insert_mutation() const {
  return _internal_has_list_boolean_insert_mutation()
      ? *mut_.list_boolean_insert_mutation_
      : reinterpret_cast< ::IvionOnline::List_Boolean_Insert_Mutation&>(::IvionOnline::_List_Boolean_Insert_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Boolean_Insert_Mutation& Mutation::list_boolean_insert_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Boolean_Insert_Mutation)
  return _internal_list_boolean_insert_mutation();
}
inline ::IvionOnline::List_Boolean_Insert_Mutation* Mutation::unsafe_arena_release_list_boolean_insert_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Boolean_Insert_Mutation)
  if (_internal_has_list_boolean_insert_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Boolean_Insert_Mutation* temp = mut_.list_boolean_insert_mutation_;
    mut_.list_boolean_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_boolean_insert_mutation(::IvionOnline::List_Boolean_Insert_Mutation* list_boolean_insert_mutation) {
  clear_mut();
  if (list_boolean_insert_mutation) {
    set_has_list_boolean_insert_mutation();
    mut_.list_boolean_insert_mutation_ = list_boolean_insert_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Boolean_Insert_Mutation)
}
inline ::IvionOnline::List_Boolean_Insert_Mutation* Mutation::_internal_mutable_list_boolean_insert_mutation() {
  if (!_internal_has_list_boolean_insert_mutation()) {
    clear_mut();
    set_has_list_boolean_insert_mutation();
    mut_.list_boolean_insert_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Boolean_Insert_Mutation >(GetArena());
  }
  return mut_.list_boolean_insert_mutation_;
}
inline ::IvionOnline::List_Boolean_Insert_Mutation* Mutation::mutable_list_boolean_insert_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Boolean_Insert_Mutation)
  return _internal_mutable_list_boolean_insert_mutation();
}

// .IvionOnline.List_Boolean_Remove_Mutation List_Boolean_Remove_Mutation = 3;
inline bool Mutation::_internal_has_list_boolean_remove_mutation() const {
  return mut_case() == kListBooleanRemoveMutation;
}
inline bool Mutation::has_list_boolean_remove_mutation() const {
  return _internal_has_list_boolean_remove_mutation();
}
inline void Mutation::set_has_list_boolean_remove_mutation() {
  _oneof_case_[0] = kListBooleanRemoveMutation;
}
inline void Mutation::clear_list_boolean_remove_mutation() {
  if (_internal_has_list_boolean_remove_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_boolean_remove_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Boolean_Remove_Mutation* Mutation::release_list_boolean_remove_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Boolean_Remove_Mutation)
  if (_internal_has_list_boolean_remove_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Boolean_Remove_Mutation* temp = mut_.list_boolean_remove_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_boolean_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Boolean_Remove_Mutation& Mutation::_internal_list_boolean_remove_mutation() const {
  return _internal_has_list_boolean_remove_mutation()
      ? *mut_.list_boolean_remove_mutation_
      : reinterpret_cast< ::IvionOnline::List_Boolean_Remove_Mutation&>(::IvionOnline::_List_Boolean_Remove_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Boolean_Remove_Mutation& Mutation::list_boolean_remove_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Boolean_Remove_Mutation)
  return _internal_list_boolean_remove_mutation();
}
inline ::IvionOnline::List_Boolean_Remove_Mutation* Mutation::unsafe_arena_release_list_boolean_remove_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Boolean_Remove_Mutation)
  if (_internal_has_list_boolean_remove_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Boolean_Remove_Mutation* temp = mut_.list_boolean_remove_mutation_;
    mut_.list_boolean_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_boolean_remove_mutation(::IvionOnline::List_Boolean_Remove_Mutation* list_boolean_remove_mutation) {
  clear_mut();
  if (list_boolean_remove_mutation) {
    set_has_list_boolean_remove_mutation();
    mut_.list_boolean_remove_mutation_ = list_boolean_remove_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Boolean_Remove_Mutation)
}
inline ::IvionOnline::List_Boolean_Remove_Mutation* Mutation::_internal_mutable_list_boolean_remove_mutation() {
  if (!_internal_has_list_boolean_remove_mutation()) {
    clear_mut();
    set_has_list_boolean_remove_mutation();
    mut_.list_boolean_remove_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Boolean_Remove_Mutation >(GetArena());
  }
  return mut_.list_boolean_remove_mutation_;
}
inline ::IvionOnline::List_Boolean_Remove_Mutation* Mutation::mutable_list_boolean_remove_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Boolean_Remove_Mutation)
  return _internal_mutable_list_boolean_remove_mutation();
}

// .IvionOnline.Integer_Set_Mutation Integer_Set_Mutation = 4;
inline bool Mutation::_internal_has_integer_set_mutation() const {
  return mut_case() == kIntegerSetMutation;
}
inline bool Mutation::has_integer_set_mutation() const {
  return _internal_has_integer_set_mutation();
}
inline void Mutation::set_has_integer_set_mutation() {
  _oneof_case_[0] = kIntegerSetMutation;
}
inline void Mutation::clear_integer_set_mutation() {
  if (_internal_has_integer_set_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.integer_set_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::Integer_Set_Mutation* Mutation::release_integer_set_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.Integer_Set_Mutation)
  if (_internal_has_integer_set_mutation()) {
    clear_has_mut();
      ::IvionOnline::Integer_Set_Mutation* temp = mut_.integer_set_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.integer_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Integer_Set_Mutation& Mutation::_internal_integer_set_mutation() const {
  return _internal_has_integer_set_mutation()
      ? *mut_.integer_set_mutation_
      : reinterpret_cast< ::IvionOnline::Integer_Set_Mutation&>(::IvionOnline::_Integer_Set_Mutation_default_instance_);
}
inline const ::IvionOnline::Integer_Set_Mutation& Mutation::integer_set_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.Integer_Set_Mutation)
  return _internal_integer_set_mutation();
}
inline ::IvionOnline::Integer_Set_Mutation* Mutation::unsafe_arena_release_integer_set_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.Integer_Set_Mutation)
  if (_internal_has_integer_set_mutation()) {
    clear_has_mut();
    ::IvionOnline::Integer_Set_Mutation* temp = mut_.integer_set_mutation_;
    mut_.integer_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_integer_set_mutation(::IvionOnline::Integer_Set_Mutation* integer_set_mutation) {
  clear_mut();
  if (integer_set_mutation) {
    set_has_integer_set_mutation();
    mut_.integer_set_mutation_ = integer_set_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.Integer_Set_Mutation)
}
inline ::IvionOnline::Integer_Set_Mutation* Mutation::_internal_mutable_integer_set_mutation() {
  if (!_internal_has_integer_set_mutation()) {
    clear_mut();
    set_has_integer_set_mutation();
    mut_.integer_set_mutation_ = CreateMaybeMessage< ::IvionOnline::Integer_Set_Mutation >(GetArena());
  }
  return mut_.integer_set_mutation_;
}
inline ::IvionOnline::Integer_Set_Mutation* Mutation::mutable_integer_set_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.Integer_Set_Mutation)
  return _internal_mutable_integer_set_mutation();
}

// .IvionOnline.List_Integer_Insert_Mutation List_Integer_Insert_Mutation = 5;
inline bool Mutation::_internal_has_list_integer_insert_mutation() const {
  return mut_case() == kListIntegerInsertMutation;
}
inline bool Mutation::has_list_integer_insert_mutation() const {
  return _internal_has_list_integer_insert_mutation();
}
inline void Mutation::set_has_list_integer_insert_mutation() {
  _oneof_case_[0] = kListIntegerInsertMutation;
}
inline void Mutation::clear_list_integer_insert_mutation() {
  if (_internal_has_list_integer_insert_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_integer_insert_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Integer_Insert_Mutation* Mutation::release_list_integer_insert_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Integer_Insert_Mutation)
  if (_internal_has_list_integer_insert_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Integer_Insert_Mutation* temp = mut_.list_integer_insert_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_integer_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Integer_Insert_Mutation& Mutation::_internal_list_integer_insert_mutation() const {
  return _internal_has_list_integer_insert_mutation()
      ? *mut_.list_integer_insert_mutation_
      : reinterpret_cast< ::IvionOnline::List_Integer_Insert_Mutation&>(::IvionOnline::_List_Integer_Insert_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Integer_Insert_Mutation& Mutation::list_integer_insert_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Integer_Insert_Mutation)
  return _internal_list_integer_insert_mutation();
}
inline ::IvionOnline::List_Integer_Insert_Mutation* Mutation::unsafe_arena_release_list_integer_insert_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Integer_Insert_Mutation)
  if (_internal_has_list_integer_insert_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Integer_Insert_Mutation* temp = mut_.list_integer_insert_mutation_;
    mut_.list_integer_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_integer_insert_mutation(::IvionOnline::List_Integer_Insert_Mutation* list_integer_insert_mutation) {
  clear_mut();
  if (list_integer_insert_mutation) {
    set_has_list_integer_insert_mutation();
    mut_.list_integer_insert_mutation_ = list_integer_insert_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Integer_Insert_Mutation)
}
inline ::IvionOnline::List_Integer_Insert_Mutation* Mutation::_internal_mutable_list_integer_insert_mutation() {
  if (!_internal_has_list_integer_insert_mutation()) {
    clear_mut();
    set_has_list_integer_insert_mutation();
    mut_.list_integer_insert_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Integer_Insert_Mutation >(GetArena());
  }
  return mut_.list_integer_insert_mutation_;
}
inline ::IvionOnline::List_Integer_Insert_Mutation* Mutation::mutable_list_integer_insert_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Integer_Insert_Mutation)
  return _internal_mutable_list_integer_insert_mutation();
}

// .IvionOnline.List_Integer_Remove_Mutation List_Integer_Remove_Mutation = 6;
inline bool Mutation::_internal_has_list_integer_remove_mutation() const {
  return mut_case() == kListIntegerRemoveMutation;
}
inline bool Mutation::has_list_integer_remove_mutation() const {
  return _internal_has_list_integer_remove_mutation();
}
inline void Mutation::set_has_list_integer_remove_mutation() {
  _oneof_case_[0] = kListIntegerRemoveMutation;
}
inline void Mutation::clear_list_integer_remove_mutation() {
  if (_internal_has_list_integer_remove_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_integer_remove_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Integer_Remove_Mutation* Mutation::release_list_integer_remove_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Integer_Remove_Mutation)
  if (_internal_has_list_integer_remove_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Integer_Remove_Mutation* temp = mut_.list_integer_remove_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_integer_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Integer_Remove_Mutation& Mutation::_internal_list_integer_remove_mutation() const {
  return _internal_has_list_integer_remove_mutation()
      ? *mut_.list_integer_remove_mutation_
      : reinterpret_cast< ::IvionOnline::List_Integer_Remove_Mutation&>(::IvionOnline::_List_Integer_Remove_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Integer_Remove_Mutation& Mutation::list_integer_remove_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Integer_Remove_Mutation)
  return _internal_list_integer_remove_mutation();
}
inline ::IvionOnline::List_Integer_Remove_Mutation* Mutation::unsafe_arena_release_list_integer_remove_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Integer_Remove_Mutation)
  if (_internal_has_list_integer_remove_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Integer_Remove_Mutation* temp = mut_.list_integer_remove_mutation_;
    mut_.list_integer_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_integer_remove_mutation(::IvionOnline::List_Integer_Remove_Mutation* list_integer_remove_mutation) {
  clear_mut();
  if (list_integer_remove_mutation) {
    set_has_list_integer_remove_mutation();
    mut_.list_integer_remove_mutation_ = list_integer_remove_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Integer_Remove_Mutation)
}
inline ::IvionOnline::List_Integer_Remove_Mutation* Mutation::_internal_mutable_list_integer_remove_mutation() {
  if (!_internal_has_list_integer_remove_mutation()) {
    clear_mut();
    set_has_list_integer_remove_mutation();
    mut_.list_integer_remove_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Integer_Remove_Mutation >(GetArena());
  }
  return mut_.list_integer_remove_mutation_;
}
inline ::IvionOnline::List_Integer_Remove_Mutation* Mutation::mutable_list_integer_remove_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Integer_Remove_Mutation)
  return _internal_mutable_list_integer_remove_mutation();
}

// .IvionOnline.Vec2i_Set_Mutation Vec2i_Set_Mutation = 7;
inline bool Mutation::_internal_has_vec2i_set_mutation() const {
  return mut_case() == kVec2ISetMutation;
}
inline bool Mutation::has_vec2i_set_mutation() const {
  return _internal_has_vec2i_set_mutation();
}
inline void Mutation::set_has_vec2i_set_mutation() {
  _oneof_case_[0] = kVec2ISetMutation;
}
inline void Mutation::clear_vec2i_set_mutation() {
  if (_internal_has_vec2i_set_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.vec2i_set_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::Vec2i_Set_Mutation* Mutation::release_vec2i_set_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.Vec2i_Set_Mutation)
  if (_internal_has_vec2i_set_mutation()) {
    clear_has_mut();
      ::IvionOnline::Vec2i_Set_Mutation* temp = mut_.vec2i_set_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.vec2i_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Vec2i_Set_Mutation& Mutation::_internal_vec2i_set_mutation() const {
  return _internal_has_vec2i_set_mutation()
      ? *mut_.vec2i_set_mutation_
      : reinterpret_cast< ::IvionOnline::Vec2i_Set_Mutation&>(::IvionOnline::_Vec2i_Set_Mutation_default_instance_);
}
inline const ::IvionOnline::Vec2i_Set_Mutation& Mutation::vec2i_set_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.Vec2i_Set_Mutation)
  return _internal_vec2i_set_mutation();
}
inline ::IvionOnline::Vec2i_Set_Mutation* Mutation::unsafe_arena_release_vec2i_set_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.Vec2i_Set_Mutation)
  if (_internal_has_vec2i_set_mutation()) {
    clear_has_mut();
    ::IvionOnline::Vec2i_Set_Mutation* temp = mut_.vec2i_set_mutation_;
    mut_.vec2i_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_vec2i_set_mutation(::IvionOnline::Vec2i_Set_Mutation* vec2i_set_mutation) {
  clear_mut();
  if (vec2i_set_mutation) {
    set_has_vec2i_set_mutation();
    mut_.vec2i_set_mutation_ = vec2i_set_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.Vec2i_Set_Mutation)
}
inline ::IvionOnline::Vec2i_Set_Mutation* Mutation::_internal_mutable_vec2i_set_mutation() {
  if (!_internal_has_vec2i_set_mutation()) {
    clear_mut();
    set_has_vec2i_set_mutation();
    mut_.vec2i_set_mutation_ = CreateMaybeMessage< ::IvionOnline::Vec2i_Set_Mutation >(GetArena());
  }
  return mut_.vec2i_set_mutation_;
}
inline ::IvionOnline::Vec2i_Set_Mutation* Mutation::mutable_vec2i_set_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.Vec2i_Set_Mutation)
  return _internal_mutable_vec2i_set_mutation();
}

// .IvionOnline.List_Vec2i_Insert_Mutation List_Vec2i_Insert_Mutation = 8;
inline bool Mutation::_internal_has_list_vec2i_insert_mutation() const {
  return mut_case() == kListVec2IInsertMutation;
}
inline bool Mutation::has_list_vec2i_insert_mutation() const {
  return _internal_has_list_vec2i_insert_mutation();
}
inline void Mutation::set_has_list_vec2i_insert_mutation() {
  _oneof_case_[0] = kListVec2IInsertMutation;
}
inline void Mutation::clear_list_vec2i_insert_mutation() {
  if (_internal_has_list_vec2i_insert_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_vec2i_insert_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Vec2i_Insert_Mutation* Mutation::release_list_vec2i_insert_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Vec2i_Insert_Mutation)
  if (_internal_has_list_vec2i_insert_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Vec2i_Insert_Mutation* temp = mut_.list_vec2i_insert_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_vec2i_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Vec2i_Insert_Mutation& Mutation::_internal_list_vec2i_insert_mutation() const {
  return _internal_has_list_vec2i_insert_mutation()
      ? *mut_.list_vec2i_insert_mutation_
      : reinterpret_cast< ::IvionOnline::List_Vec2i_Insert_Mutation&>(::IvionOnline::_List_Vec2i_Insert_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Vec2i_Insert_Mutation& Mutation::list_vec2i_insert_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Vec2i_Insert_Mutation)
  return _internal_list_vec2i_insert_mutation();
}
inline ::IvionOnline::List_Vec2i_Insert_Mutation* Mutation::unsafe_arena_release_list_vec2i_insert_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Vec2i_Insert_Mutation)
  if (_internal_has_list_vec2i_insert_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Vec2i_Insert_Mutation* temp = mut_.list_vec2i_insert_mutation_;
    mut_.list_vec2i_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_vec2i_insert_mutation(::IvionOnline::List_Vec2i_Insert_Mutation* list_vec2i_insert_mutation) {
  clear_mut();
  if (list_vec2i_insert_mutation) {
    set_has_list_vec2i_insert_mutation();
    mut_.list_vec2i_insert_mutation_ = list_vec2i_insert_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Vec2i_Insert_Mutation)
}
inline ::IvionOnline::List_Vec2i_Insert_Mutation* Mutation::_internal_mutable_list_vec2i_insert_mutation() {
  if (!_internal_has_list_vec2i_insert_mutation()) {
    clear_mut();
    set_has_list_vec2i_insert_mutation();
    mut_.list_vec2i_insert_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Vec2i_Insert_Mutation >(GetArena());
  }
  return mut_.list_vec2i_insert_mutation_;
}
inline ::IvionOnline::List_Vec2i_Insert_Mutation* Mutation::mutable_list_vec2i_insert_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Vec2i_Insert_Mutation)
  return _internal_mutable_list_vec2i_insert_mutation();
}

// .IvionOnline.List_Vec2i_Remove_Mutation List_Vec2i_Remove_Mutation = 9;
inline bool Mutation::_internal_has_list_vec2i_remove_mutation() const {
  return mut_case() == kListVec2IRemoveMutation;
}
inline bool Mutation::has_list_vec2i_remove_mutation() const {
  return _internal_has_list_vec2i_remove_mutation();
}
inline void Mutation::set_has_list_vec2i_remove_mutation() {
  _oneof_case_[0] = kListVec2IRemoveMutation;
}
inline void Mutation::clear_list_vec2i_remove_mutation() {
  if (_internal_has_list_vec2i_remove_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_vec2i_remove_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Vec2i_Remove_Mutation* Mutation::release_list_vec2i_remove_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Vec2i_Remove_Mutation)
  if (_internal_has_list_vec2i_remove_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Vec2i_Remove_Mutation* temp = mut_.list_vec2i_remove_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_vec2i_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Vec2i_Remove_Mutation& Mutation::_internal_list_vec2i_remove_mutation() const {
  return _internal_has_list_vec2i_remove_mutation()
      ? *mut_.list_vec2i_remove_mutation_
      : reinterpret_cast< ::IvionOnline::List_Vec2i_Remove_Mutation&>(::IvionOnline::_List_Vec2i_Remove_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Vec2i_Remove_Mutation& Mutation::list_vec2i_remove_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Vec2i_Remove_Mutation)
  return _internal_list_vec2i_remove_mutation();
}
inline ::IvionOnline::List_Vec2i_Remove_Mutation* Mutation::unsafe_arena_release_list_vec2i_remove_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Vec2i_Remove_Mutation)
  if (_internal_has_list_vec2i_remove_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Vec2i_Remove_Mutation* temp = mut_.list_vec2i_remove_mutation_;
    mut_.list_vec2i_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_vec2i_remove_mutation(::IvionOnline::List_Vec2i_Remove_Mutation* list_vec2i_remove_mutation) {
  clear_mut();
  if (list_vec2i_remove_mutation) {
    set_has_list_vec2i_remove_mutation();
    mut_.list_vec2i_remove_mutation_ = list_vec2i_remove_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Vec2i_Remove_Mutation)
}
inline ::IvionOnline::List_Vec2i_Remove_Mutation* Mutation::_internal_mutable_list_vec2i_remove_mutation() {
  if (!_internal_has_list_vec2i_remove_mutation()) {
    clear_mut();
    set_has_list_vec2i_remove_mutation();
    mut_.list_vec2i_remove_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Vec2i_Remove_Mutation >(GetArena());
  }
  return mut_.list_vec2i_remove_mutation_;
}
inline ::IvionOnline::List_Vec2i_Remove_Mutation* Mutation::mutable_list_vec2i_remove_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Vec2i_Remove_Mutation)
  return _internal_mutable_list_vec2i_remove_mutation();
}

// .IvionOnline.Terrain_Set_Mutation Terrain_Set_Mutation = 10;
inline bool Mutation::_internal_has_terrain_set_mutation() const {
  return mut_case() == kTerrainSetMutation;
}
inline bool Mutation::has_terrain_set_mutation() const {
  return _internal_has_terrain_set_mutation();
}
inline void Mutation::set_has_terrain_set_mutation() {
  _oneof_case_[0] = kTerrainSetMutation;
}
inline void Mutation::clear_terrain_set_mutation() {
  if (_internal_has_terrain_set_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.terrain_set_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::Terrain_Set_Mutation* Mutation::release_terrain_set_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.Terrain_Set_Mutation)
  if (_internal_has_terrain_set_mutation()) {
    clear_has_mut();
      ::IvionOnline::Terrain_Set_Mutation* temp = mut_.terrain_set_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.terrain_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Terrain_Set_Mutation& Mutation::_internal_terrain_set_mutation() const {
  return _internal_has_terrain_set_mutation()
      ? *mut_.terrain_set_mutation_
      : reinterpret_cast< ::IvionOnline::Terrain_Set_Mutation&>(::IvionOnline::_Terrain_Set_Mutation_default_instance_);
}
inline const ::IvionOnline::Terrain_Set_Mutation& Mutation::terrain_set_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.Terrain_Set_Mutation)
  return _internal_terrain_set_mutation();
}
inline ::IvionOnline::Terrain_Set_Mutation* Mutation::unsafe_arena_release_terrain_set_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.Terrain_Set_Mutation)
  if (_internal_has_terrain_set_mutation()) {
    clear_has_mut();
    ::IvionOnline::Terrain_Set_Mutation* temp = mut_.terrain_set_mutation_;
    mut_.terrain_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_terrain_set_mutation(::IvionOnline::Terrain_Set_Mutation* terrain_set_mutation) {
  clear_mut();
  if (terrain_set_mutation) {
    set_has_terrain_set_mutation();
    mut_.terrain_set_mutation_ = terrain_set_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.Terrain_Set_Mutation)
}
inline ::IvionOnline::Terrain_Set_Mutation* Mutation::_internal_mutable_terrain_set_mutation() {
  if (!_internal_has_terrain_set_mutation()) {
    clear_mut();
    set_has_terrain_set_mutation();
    mut_.terrain_set_mutation_ = CreateMaybeMessage< ::IvionOnline::Terrain_Set_Mutation >(GetArena());
  }
  return mut_.terrain_set_mutation_;
}
inline ::IvionOnline::Terrain_Set_Mutation* Mutation::mutable_terrain_set_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.Terrain_Set_Mutation)
  return _internal_mutable_terrain_set_mutation();
}

// .IvionOnline.List_Terrain_Insert_Mutation List_Terrain_Insert_Mutation = 11;
inline bool Mutation::_internal_has_list_terrain_insert_mutation() const {
  return mut_case() == kListTerrainInsertMutation;
}
inline bool Mutation::has_list_terrain_insert_mutation() const {
  return _internal_has_list_terrain_insert_mutation();
}
inline void Mutation::set_has_list_terrain_insert_mutation() {
  _oneof_case_[0] = kListTerrainInsertMutation;
}
inline void Mutation::clear_list_terrain_insert_mutation() {
  if (_internal_has_list_terrain_insert_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_terrain_insert_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Terrain_Insert_Mutation* Mutation::release_list_terrain_insert_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Terrain_Insert_Mutation)
  if (_internal_has_list_terrain_insert_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Terrain_Insert_Mutation* temp = mut_.list_terrain_insert_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_terrain_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Terrain_Insert_Mutation& Mutation::_internal_list_terrain_insert_mutation() const {
  return _internal_has_list_terrain_insert_mutation()
      ? *mut_.list_terrain_insert_mutation_
      : reinterpret_cast< ::IvionOnline::List_Terrain_Insert_Mutation&>(::IvionOnline::_List_Terrain_Insert_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Terrain_Insert_Mutation& Mutation::list_terrain_insert_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Terrain_Insert_Mutation)
  return _internal_list_terrain_insert_mutation();
}
inline ::IvionOnline::List_Terrain_Insert_Mutation* Mutation::unsafe_arena_release_list_terrain_insert_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Terrain_Insert_Mutation)
  if (_internal_has_list_terrain_insert_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Terrain_Insert_Mutation* temp = mut_.list_terrain_insert_mutation_;
    mut_.list_terrain_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_terrain_insert_mutation(::IvionOnline::List_Terrain_Insert_Mutation* list_terrain_insert_mutation) {
  clear_mut();
  if (list_terrain_insert_mutation) {
    set_has_list_terrain_insert_mutation();
    mut_.list_terrain_insert_mutation_ = list_terrain_insert_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Terrain_Insert_Mutation)
}
inline ::IvionOnline::List_Terrain_Insert_Mutation* Mutation::_internal_mutable_list_terrain_insert_mutation() {
  if (!_internal_has_list_terrain_insert_mutation()) {
    clear_mut();
    set_has_list_terrain_insert_mutation();
    mut_.list_terrain_insert_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Terrain_Insert_Mutation >(GetArena());
  }
  return mut_.list_terrain_insert_mutation_;
}
inline ::IvionOnline::List_Terrain_Insert_Mutation* Mutation::mutable_list_terrain_insert_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Terrain_Insert_Mutation)
  return _internal_mutable_list_terrain_insert_mutation();
}

// .IvionOnline.List_Terrain_Remove_Mutation List_Terrain_Remove_Mutation = 12;
inline bool Mutation::_internal_has_list_terrain_remove_mutation() const {
  return mut_case() == kListTerrainRemoveMutation;
}
inline bool Mutation::has_list_terrain_remove_mutation() const {
  return _internal_has_list_terrain_remove_mutation();
}
inline void Mutation::set_has_list_terrain_remove_mutation() {
  _oneof_case_[0] = kListTerrainRemoveMutation;
}
inline void Mutation::clear_list_terrain_remove_mutation() {
  if (_internal_has_list_terrain_remove_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_terrain_remove_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Terrain_Remove_Mutation* Mutation::release_list_terrain_remove_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Terrain_Remove_Mutation)
  if (_internal_has_list_terrain_remove_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Terrain_Remove_Mutation* temp = mut_.list_terrain_remove_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_terrain_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Terrain_Remove_Mutation& Mutation::_internal_list_terrain_remove_mutation() const {
  return _internal_has_list_terrain_remove_mutation()
      ? *mut_.list_terrain_remove_mutation_
      : reinterpret_cast< ::IvionOnline::List_Terrain_Remove_Mutation&>(::IvionOnline::_List_Terrain_Remove_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Terrain_Remove_Mutation& Mutation::list_terrain_remove_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Terrain_Remove_Mutation)
  return _internal_list_terrain_remove_mutation();
}
inline ::IvionOnline::List_Terrain_Remove_Mutation* Mutation::unsafe_arena_release_list_terrain_remove_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Terrain_Remove_Mutation)
  if (_internal_has_list_terrain_remove_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Terrain_Remove_Mutation* temp = mut_.list_terrain_remove_mutation_;
    mut_.list_terrain_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_terrain_remove_mutation(::IvionOnline::List_Terrain_Remove_Mutation* list_terrain_remove_mutation) {
  clear_mut();
  if (list_terrain_remove_mutation) {
    set_has_list_terrain_remove_mutation();
    mut_.list_terrain_remove_mutation_ = list_terrain_remove_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Terrain_Remove_Mutation)
}
inline ::IvionOnline::List_Terrain_Remove_Mutation* Mutation::_internal_mutable_list_terrain_remove_mutation() {
  if (!_internal_has_list_terrain_remove_mutation()) {
    clear_mut();
    set_has_list_terrain_remove_mutation();
    mut_.list_terrain_remove_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Terrain_Remove_Mutation >(GetArena());
  }
  return mut_.list_terrain_remove_mutation_;
}
inline ::IvionOnline::List_Terrain_Remove_Mutation* Mutation::mutable_list_terrain_remove_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Terrain_Remove_Mutation)
  return _internal_mutable_list_terrain_remove_mutation();
}

// .IvionOnline.Color_Set_Mutation Color_Set_Mutation = 13;
inline bool Mutation::_internal_has_color_set_mutation() const {
  return mut_case() == kColorSetMutation;
}
inline bool Mutation::has_color_set_mutation() const {
  return _internal_has_color_set_mutation();
}
inline void Mutation::set_has_color_set_mutation() {
  _oneof_case_[0] = kColorSetMutation;
}
inline void Mutation::clear_color_set_mutation() {
  if (_internal_has_color_set_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.color_set_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::Color_Set_Mutation* Mutation::release_color_set_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.Color_Set_Mutation)
  if (_internal_has_color_set_mutation()) {
    clear_has_mut();
      ::IvionOnline::Color_Set_Mutation* temp = mut_.color_set_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.color_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Color_Set_Mutation& Mutation::_internal_color_set_mutation() const {
  return _internal_has_color_set_mutation()
      ? *mut_.color_set_mutation_
      : reinterpret_cast< ::IvionOnline::Color_Set_Mutation&>(::IvionOnline::_Color_Set_Mutation_default_instance_);
}
inline const ::IvionOnline::Color_Set_Mutation& Mutation::color_set_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.Color_Set_Mutation)
  return _internal_color_set_mutation();
}
inline ::IvionOnline::Color_Set_Mutation* Mutation::unsafe_arena_release_color_set_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.Color_Set_Mutation)
  if (_internal_has_color_set_mutation()) {
    clear_has_mut();
    ::IvionOnline::Color_Set_Mutation* temp = mut_.color_set_mutation_;
    mut_.color_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_color_set_mutation(::IvionOnline::Color_Set_Mutation* color_set_mutation) {
  clear_mut();
  if (color_set_mutation) {
    set_has_color_set_mutation();
    mut_.color_set_mutation_ = color_set_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.Color_Set_Mutation)
}
inline ::IvionOnline::Color_Set_Mutation* Mutation::_internal_mutable_color_set_mutation() {
  if (!_internal_has_color_set_mutation()) {
    clear_mut();
    set_has_color_set_mutation();
    mut_.color_set_mutation_ = CreateMaybeMessage< ::IvionOnline::Color_Set_Mutation >(GetArena());
  }
  return mut_.color_set_mutation_;
}
inline ::IvionOnline::Color_Set_Mutation* Mutation::mutable_color_set_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.Color_Set_Mutation)
  return _internal_mutable_color_set_mutation();
}

// .IvionOnline.List_Color_Insert_Mutation List_Color_Insert_Mutation = 14;
inline bool Mutation::_internal_has_list_color_insert_mutation() const {
  return mut_case() == kListColorInsertMutation;
}
inline bool Mutation::has_list_color_insert_mutation() const {
  return _internal_has_list_color_insert_mutation();
}
inline void Mutation::set_has_list_color_insert_mutation() {
  _oneof_case_[0] = kListColorInsertMutation;
}
inline void Mutation::clear_list_color_insert_mutation() {
  if (_internal_has_list_color_insert_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_color_insert_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Color_Insert_Mutation* Mutation::release_list_color_insert_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Color_Insert_Mutation)
  if (_internal_has_list_color_insert_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Color_Insert_Mutation* temp = mut_.list_color_insert_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_color_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Color_Insert_Mutation& Mutation::_internal_list_color_insert_mutation() const {
  return _internal_has_list_color_insert_mutation()
      ? *mut_.list_color_insert_mutation_
      : reinterpret_cast< ::IvionOnline::List_Color_Insert_Mutation&>(::IvionOnline::_List_Color_Insert_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Color_Insert_Mutation& Mutation::list_color_insert_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Color_Insert_Mutation)
  return _internal_list_color_insert_mutation();
}
inline ::IvionOnline::List_Color_Insert_Mutation* Mutation::unsafe_arena_release_list_color_insert_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Color_Insert_Mutation)
  if (_internal_has_list_color_insert_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Color_Insert_Mutation* temp = mut_.list_color_insert_mutation_;
    mut_.list_color_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_color_insert_mutation(::IvionOnline::List_Color_Insert_Mutation* list_color_insert_mutation) {
  clear_mut();
  if (list_color_insert_mutation) {
    set_has_list_color_insert_mutation();
    mut_.list_color_insert_mutation_ = list_color_insert_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Color_Insert_Mutation)
}
inline ::IvionOnline::List_Color_Insert_Mutation* Mutation::_internal_mutable_list_color_insert_mutation() {
  if (!_internal_has_list_color_insert_mutation()) {
    clear_mut();
    set_has_list_color_insert_mutation();
    mut_.list_color_insert_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Color_Insert_Mutation >(GetArena());
  }
  return mut_.list_color_insert_mutation_;
}
inline ::IvionOnline::List_Color_Insert_Mutation* Mutation::mutable_list_color_insert_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Color_Insert_Mutation)
  return _internal_mutable_list_color_insert_mutation();
}

// .IvionOnline.List_Color_Remove_Mutation List_Color_Remove_Mutation = 15;
inline bool Mutation::_internal_has_list_color_remove_mutation() const {
  return mut_case() == kListColorRemoveMutation;
}
inline bool Mutation::has_list_color_remove_mutation() const {
  return _internal_has_list_color_remove_mutation();
}
inline void Mutation::set_has_list_color_remove_mutation() {
  _oneof_case_[0] = kListColorRemoveMutation;
}
inline void Mutation::clear_list_color_remove_mutation() {
  if (_internal_has_list_color_remove_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_color_remove_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_Color_Remove_Mutation* Mutation::release_list_color_remove_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_Color_Remove_Mutation)
  if (_internal_has_list_color_remove_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_Color_Remove_Mutation* temp = mut_.list_color_remove_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_color_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_Color_Remove_Mutation& Mutation::_internal_list_color_remove_mutation() const {
  return _internal_has_list_color_remove_mutation()
      ? *mut_.list_color_remove_mutation_
      : reinterpret_cast< ::IvionOnline::List_Color_Remove_Mutation&>(::IvionOnline::_List_Color_Remove_Mutation_default_instance_);
}
inline const ::IvionOnline::List_Color_Remove_Mutation& Mutation::list_color_remove_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_Color_Remove_Mutation)
  return _internal_list_color_remove_mutation();
}
inline ::IvionOnline::List_Color_Remove_Mutation* Mutation::unsafe_arena_release_list_color_remove_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_Color_Remove_Mutation)
  if (_internal_has_list_color_remove_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_Color_Remove_Mutation* temp = mut_.list_color_remove_mutation_;
    mut_.list_color_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_color_remove_mutation(::IvionOnline::List_Color_Remove_Mutation* list_color_remove_mutation) {
  clear_mut();
  if (list_color_remove_mutation) {
    set_has_list_color_remove_mutation();
    mut_.list_color_remove_mutation_ = list_color_remove_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_Color_Remove_Mutation)
}
inline ::IvionOnline::List_Color_Remove_Mutation* Mutation::_internal_mutable_list_color_remove_mutation() {
  if (!_internal_has_list_color_remove_mutation()) {
    clear_mut();
    set_has_list_color_remove_mutation();
    mut_.list_color_remove_mutation_ = CreateMaybeMessage< ::IvionOnline::List_Color_Remove_Mutation >(GetArena());
  }
  return mut_.list_color_remove_mutation_;
}
inline ::IvionOnline::List_Color_Remove_Mutation* Mutation::mutable_list_color_remove_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_Color_Remove_Mutation)
  return _internal_mutable_list_color_remove_mutation();
}

// .IvionOnline.ObjectPath_Set_Mutation ObjectPath_Set_Mutation = 16;
inline bool Mutation::_internal_has_objectpath_set_mutation() const {
  return mut_case() == kObjectPathSetMutation;
}
inline bool Mutation::has_objectpath_set_mutation() const {
  return _internal_has_objectpath_set_mutation();
}
inline void Mutation::set_has_objectpath_set_mutation() {
  _oneof_case_[0] = kObjectPathSetMutation;
}
inline void Mutation::clear_objectpath_set_mutation() {
  if (_internal_has_objectpath_set_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.objectpath_set_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::ObjectPath_Set_Mutation* Mutation::release_objectpath_set_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.ObjectPath_Set_Mutation)
  if (_internal_has_objectpath_set_mutation()) {
    clear_has_mut();
      ::IvionOnline::ObjectPath_Set_Mutation* temp = mut_.objectpath_set_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.objectpath_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::ObjectPath_Set_Mutation& Mutation::_internal_objectpath_set_mutation() const {
  return _internal_has_objectpath_set_mutation()
      ? *mut_.objectpath_set_mutation_
      : reinterpret_cast< ::IvionOnline::ObjectPath_Set_Mutation&>(::IvionOnline::_ObjectPath_Set_Mutation_default_instance_);
}
inline const ::IvionOnline::ObjectPath_Set_Mutation& Mutation::objectpath_set_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.ObjectPath_Set_Mutation)
  return _internal_objectpath_set_mutation();
}
inline ::IvionOnline::ObjectPath_Set_Mutation* Mutation::unsafe_arena_release_objectpath_set_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.ObjectPath_Set_Mutation)
  if (_internal_has_objectpath_set_mutation()) {
    clear_has_mut();
    ::IvionOnline::ObjectPath_Set_Mutation* temp = mut_.objectpath_set_mutation_;
    mut_.objectpath_set_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_objectpath_set_mutation(::IvionOnline::ObjectPath_Set_Mutation* objectpath_set_mutation) {
  clear_mut();
  if (objectpath_set_mutation) {
    set_has_objectpath_set_mutation();
    mut_.objectpath_set_mutation_ = objectpath_set_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.ObjectPath_Set_Mutation)
}
inline ::IvionOnline::ObjectPath_Set_Mutation* Mutation::_internal_mutable_objectpath_set_mutation() {
  if (!_internal_has_objectpath_set_mutation()) {
    clear_mut();
    set_has_objectpath_set_mutation();
    mut_.objectpath_set_mutation_ = CreateMaybeMessage< ::IvionOnline::ObjectPath_Set_Mutation >(GetArena());
  }
  return mut_.objectpath_set_mutation_;
}
inline ::IvionOnline::ObjectPath_Set_Mutation* Mutation::mutable_objectpath_set_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.ObjectPath_Set_Mutation)
  return _internal_mutable_objectpath_set_mutation();
}

// .IvionOnline.List_ObjectPath_Insert_Mutation List_ObjectPath_Insert_Mutation = 17;
inline bool Mutation::_internal_has_list_objectpath_insert_mutation() const {
  return mut_case() == kListObjectPathInsertMutation;
}
inline bool Mutation::has_list_objectpath_insert_mutation() const {
  return _internal_has_list_objectpath_insert_mutation();
}
inline void Mutation::set_has_list_objectpath_insert_mutation() {
  _oneof_case_[0] = kListObjectPathInsertMutation;
}
inline void Mutation::clear_list_objectpath_insert_mutation() {
  if (_internal_has_list_objectpath_insert_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_objectpath_insert_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_ObjectPath_Insert_Mutation* Mutation::release_list_objectpath_insert_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_ObjectPath_Insert_Mutation)
  if (_internal_has_list_objectpath_insert_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_ObjectPath_Insert_Mutation* temp = mut_.list_objectpath_insert_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_objectpath_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_ObjectPath_Insert_Mutation& Mutation::_internal_list_objectpath_insert_mutation() const {
  return _internal_has_list_objectpath_insert_mutation()
      ? *mut_.list_objectpath_insert_mutation_
      : reinterpret_cast< ::IvionOnline::List_ObjectPath_Insert_Mutation&>(::IvionOnline::_List_ObjectPath_Insert_Mutation_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath_Insert_Mutation& Mutation::list_objectpath_insert_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_ObjectPath_Insert_Mutation)
  return _internal_list_objectpath_insert_mutation();
}
inline ::IvionOnline::List_ObjectPath_Insert_Mutation* Mutation::unsafe_arena_release_list_objectpath_insert_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_ObjectPath_Insert_Mutation)
  if (_internal_has_list_objectpath_insert_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_ObjectPath_Insert_Mutation* temp = mut_.list_objectpath_insert_mutation_;
    mut_.list_objectpath_insert_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_objectpath_insert_mutation(::IvionOnline::List_ObjectPath_Insert_Mutation* list_objectpath_insert_mutation) {
  clear_mut();
  if (list_objectpath_insert_mutation) {
    set_has_list_objectpath_insert_mutation();
    mut_.list_objectpath_insert_mutation_ = list_objectpath_insert_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_ObjectPath_Insert_Mutation)
}
inline ::IvionOnline::List_ObjectPath_Insert_Mutation* Mutation::_internal_mutable_list_objectpath_insert_mutation() {
  if (!_internal_has_list_objectpath_insert_mutation()) {
    clear_mut();
    set_has_list_objectpath_insert_mutation();
    mut_.list_objectpath_insert_mutation_ = CreateMaybeMessage< ::IvionOnline::List_ObjectPath_Insert_Mutation >(GetArena());
  }
  return mut_.list_objectpath_insert_mutation_;
}
inline ::IvionOnline::List_ObjectPath_Insert_Mutation* Mutation::mutable_list_objectpath_insert_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_ObjectPath_Insert_Mutation)
  return _internal_mutable_list_objectpath_insert_mutation();
}

// .IvionOnline.List_ObjectPath_Remove_Mutation List_ObjectPath_Remove_Mutation = 18;
inline bool Mutation::_internal_has_list_objectpath_remove_mutation() const {
  return mut_case() == kListObjectPathRemoveMutation;
}
inline bool Mutation::has_list_objectpath_remove_mutation() const {
  return _internal_has_list_objectpath_remove_mutation();
}
inline void Mutation::set_has_list_objectpath_remove_mutation() {
  _oneof_case_[0] = kListObjectPathRemoveMutation;
}
inline void Mutation::clear_list_objectpath_remove_mutation() {
  if (_internal_has_list_objectpath_remove_mutation()) {
    if (GetArena() == nullptr) {
      delete mut_.list_objectpath_remove_mutation_;
    }
    clear_has_mut();
  }
}
inline ::IvionOnline::List_ObjectPath_Remove_Mutation* Mutation::release_list_objectpath_remove_mutation() {
  // @@protoc_insertion_point(field_release:IvionOnline.Mutation.List_ObjectPath_Remove_Mutation)
  if (_internal_has_list_objectpath_remove_mutation()) {
    clear_has_mut();
      ::IvionOnline::List_ObjectPath_Remove_Mutation* temp = mut_.list_objectpath_remove_mutation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    mut_.list_objectpath_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::List_ObjectPath_Remove_Mutation& Mutation::_internal_list_objectpath_remove_mutation() const {
  return _internal_has_list_objectpath_remove_mutation()
      ? *mut_.list_objectpath_remove_mutation_
      : reinterpret_cast< ::IvionOnline::List_ObjectPath_Remove_Mutation&>(::IvionOnline::_List_ObjectPath_Remove_Mutation_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath_Remove_Mutation& Mutation::list_objectpath_remove_mutation() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Mutation.List_ObjectPath_Remove_Mutation)
  return _internal_list_objectpath_remove_mutation();
}
inline ::IvionOnline::List_ObjectPath_Remove_Mutation* Mutation::unsafe_arena_release_list_objectpath_remove_mutation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Mutation.List_ObjectPath_Remove_Mutation)
  if (_internal_has_list_objectpath_remove_mutation()) {
    clear_has_mut();
    ::IvionOnline::List_ObjectPath_Remove_Mutation* temp = mut_.list_objectpath_remove_mutation_;
    mut_.list_objectpath_remove_mutation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Mutation::unsafe_arena_set_allocated_list_objectpath_remove_mutation(::IvionOnline::List_ObjectPath_Remove_Mutation* list_objectpath_remove_mutation) {
  clear_mut();
  if (list_objectpath_remove_mutation) {
    set_has_list_objectpath_remove_mutation();
    mut_.list_objectpath_remove_mutation_ = list_objectpath_remove_mutation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Mutation.List_ObjectPath_Remove_Mutation)
}
inline ::IvionOnline::List_ObjectPath_Remove_Mutation* Mutation::_internal_mutable_list_objectpath_remove_mutation() {
  if (!_internal_has_list_objectpath_remove_mutation()) {
    clear_mut();
    set_has_list_objectpath_remove_mutation();
    mut_.list_objectpath_remove_mutation_ = CreateMaybeMessage< ::IvionOnline::List_ObjectPath_Remove_Mutation >(GetArena());
  }
  return mut_.list_objectpath_remove_mutation_;
}
inline ::IvionOnline::List_ObjectPath_Remove_Mutation* Mutation::mutable_list_objectpath_remove_mutation() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Mutation.List_ObjectPath_Remove_Mutation)
  return _internal_mutable_list_objectpath_remove_mutation();
}

inline bool Mutation::has_mut() const {
  return mut_case() != MUT_NOT_SET;
}
inline void Mutation::clear_has_mut() {
  _oneof_case_[0] = MUT_NOT_SET;
}
inline Mutation::MutCase Mutation::mut_case() const {
  return Mutation::MutCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GetList

// .IvionOnline.ObjectPath Source = 1;
inline bool GetList::_internal_has_source() const {
  return this != internal_default_instance() && source_ != nullptr;
}
inline bool GetList::has_source() const {
  return _internal_has_source();
}
inline void GetList::clear_source() {
  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& GetList::_internal_source() const {
  const ::IvionOnline::ObjectPath* p = source_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& GetList::source() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GetList.Source)
  return _internal_source();
}
inline void GetList::unsafe_arena_set_allocated_source(
    ::IvionOnline::ObjectPath* source) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GetList.Source)
}
inline ::IvionOnline::ObjectPath* GetList::release_source() {
  
  ::IvionOnline::ObjectPath* temp = source_;
  source_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* GetList::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_release:IvionOnline.GetList.Source)
  
  ::IvionOnline::ObjectPath* temp = source_;
  source_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* GetList::_internal_mutable_source() {
  
  if (source_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    source_ = p;
  }
  return source_;
}
inline ::IvionOnline::ObjectPath* GetList::mutable_source() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GetList.Source)
  return _internal_mutable_source();
}
inline void GetList::set_allocated_source(::IvionOnline::ObjectPath* source) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete source_;
  }
  if (source) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(source);
    if (message_arena != submessage_arena) {
      source = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GetList.Source)
}

// .IvionOnline.List_ObjectPath Result = 2;
inline bool GetList::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool GetList::has_result() const {
  return _internal_has_result();
}
inline void GetList::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& GetList::_internal_result() const {
  const ::IvionOnline::List_ObjectPath* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& GetList::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GetList.Result)
  return _internal_result();
}
inline void GetList::unsafe_arena_set_allocated_result(
    ::IvionOnline::List_ObjectPath* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GetList.Result)
}
inline ::IvionOnline::List_ObjectPath* GetList::release_result() {
  
  ::IvionOnline::List_ObjectPath* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* GetList::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.GetList.Result)
  
  ::IvionOnline::List_ObjectPath* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* GetList::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::List_ObjectPath* GetList::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GetList.Result)
  return _internal_mutable_result();
}
inline void GetList::set_allocated_result(::IvionOnline::List_ObjectPath* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GetList.Result)
}

// -------------------------------------------------------------------

// SelectMultiple

// .IvionOnline.ObjectPath Source = 1;
inline bool SelectMultiple::_internal_has_source() const {
  return this != internal_default_instance() && source_ != nullptr;
}
inline bool SelectMultiple::has_source() const {
  return _internal_has_source();
}
inline void SelectMultiple::clear_source() {
  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& SelectMultiple::_internal_source() const {
  const ::IvionOnline::ObjectPath* p = source_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& SelectMultiple::source() const {
  // @@protoc_insertion_point(field_get:IvionOnline.SelectMultiple.Source)
  return _internal_source();
}
inline void SelectMultiple::unsafe_arena_set_allocated_source(
    ::IvionOnline::ObjectPath* source) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.SelectMultiple.Source)
}
inline ::IvionOnline::ObjectPath* SelectMultiple::release_source() {
  
  ::IvionOnline::ObjectPath* temp = source_;
  source_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_release:IvionOnline.SelectMultiple.Source)
  
  ::IvionOnline::ObjectPath* temp = source_;
  source_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::_internal_mutable_source() {
  
  if (source_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    source_ = p;
  }
  return source_;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::mutable_source() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.SelectMultiple.Source)
  return _internal_mutable_source();
}
inline void SelectMultiple::set_allocated_source(::IvionOnline::ObjectPath* source) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete source_;
  }
  if (source) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(source);
    if (message_arena != submessage_arena) {
      source = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.SelectMultiple.Source)
}

// .IvionOnline.ObjectPath Number = 2;
inline bool SelectMultiple::_internal_has_number() const {
  return this != internal_default_instance() && number_ != nullptr;
}
inline bool SelectMultiple::has_number() const {
  return _internal_has_number();
}
inline void SelectMultiple::clear_number() {
  if (GetArena() == nullptr && number_ != nullptr) {
    delete number_;
  }
  number_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& SelectMultiple::_internal_number() const {
  const ::IvionOnline::ObjectPath* p = number_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& SelectMultiple::number() const {
  // @@protoc_insertion_point(field_get:IvionOnline.SelectMultiple.Number)
  return _internal_number();
}
inline void SelectMultiple::unsafe_arena_set_allocated_number(
    ::IvionOnline::ObjectPath* number) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(number_);
  }
  number_ = number;
  if (number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.SelectMultiple.Number)
}
inline ::IvionOnline::ObjectPath* SelectMultiple::release_number() {
  
  ::IvionOnline::ObjectPath* temp = number_;
  number_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::unsafe_arena_release_number() {
  // @@protoc_insertion_point(field_release:IvionOnline.SelectMultiple.Number)
  
  ::IvionOnline::ObjectPath* temp = number_;
  number_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::_internal_mutable_number() {
  
  if (number_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    number_ = p;
  }
  return number_;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::mutable_number() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.SelectMultiple.Number)
  return _internal_mutable_number();
}
inline void SelectMultiple::set_allocated_number(::IvionOnline::ObjectPath* number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete number_;
  }
  if (number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(number);
    if (message_arena != submessage_arena) {
      number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, number, submessage_arena);
    }
    
  } else {
    
  }
  number_ = number;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.SelectMultiple.Number)
}

// .IvionOnline.ObjectPath UpTo = 3;
inline bool SelectMultiple::_internal_has_upto() const {
  return this != internal_default_instance() && upto_ != nullptr;
}
inline bool SelectMultiple::has_upto() const {
  return _internal_has_upto();
}
inline void SelectMultiple::clear_upto() {
  if (GetArena() == nullptr && upto_ != nullptr) {
    delete upto_;
  }
  upto_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& SelectMultiple::_internal_upto() const {
  const ::IvionOnline::ObjectPath* p = upto_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& SelectMultiple::upto() const {
  // @@protoc_insertion_point(field_get:IvionOnline.SelectMultiple.UpTo)
  return _internal_upto();
}
inline void SelectMultiple::unsafe_arena_set_allocated_upto(
    ::IvionOnline::ObjectPath* upto) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(upto_);
  }
  upto_ = upto;
  if (upto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.SelectMultiple.UpTo)
}
inline ::IvionOnline::ObjectPath* SelectMultiple::release_upto() {
  
  ::IvionOnline::ObjectPath* temp = upto_;
  upto_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::unsafe_arena_release_upto() {
  // @@protoc_insertion_point(field_release:IvionOnline.SelectMultiple.UpTo)
  
  ::IvionOnline::ObjectPath* temp = upto_;
  upto_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::_internal_mutable_upto() {
  
  if (upto_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    upto_ = p;
  }
  return upto_;
}
inline ::IvionOnline::ObjectPath* SelectMultiple::mutable_upto() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.SelectMultiple.UpTo)
  return _internal_mutable_upto();
}
inline void SelectMultiple::set_allocated_upto(::IvionOnline::ObjectPath* upto) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete upto_;
  }
  if (upto) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(upto);
    if (message_arena != submessage_arena) {
      upto = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, upto, submessage_arena);
    }
    
  } else {
    
  }
  upto_ = upto;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.SelectMultiple.UpTo)
}

// .IvionOnline.List_ObjectPath Result = 4;
inline bool SelectMultiple::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool SelectMultiple::has_result() const {
  return _internal_has_result();
}
inline void SelectMultiple::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::List_ObjectPath& SelectMultiple::_internal_result() const {
  const ::IvionOnline::List_ObjectPath* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::List_ObjectPath&>(
      ::IvionOnline::_List_ObjectPath_default_instance_);
}
inline const ::IvionOnline::List_ObjectPath& SelectMultiple::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.SelectMultiple.Result)
  return _internal_result();
}
inline void SelectMultiple::unsafe_arena_set_allocated_result(
    ::IvionOnline::List_ObjectPath* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.SelectMultiple.Result)
}
inline ::IvionOnline::List_ObjectPath* SelectMultiple::release_result() {
  
  ::IvionOnline::List_ObjectPath* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::List_ObjectPath* SelectMultiple::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.SelectMultiple.Result)
  
  ::IvionOnline::List_ObjectPath* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::List_ObjectPath* SelectMultiple::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::List_ObjectPath>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::List_ObjectPath* SelectMultiple::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.SelectMultiple.Result)
  return _internal_mutable_result();
}
inline void SelectMultiple::set_allocated_result(::IvionOnline::List_ObjectPath* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.SelectMultiple.Result)
}

// -------------------------------------------------------------------

// SelectExactlyOne

// .IvionOnline.ObjectPath Source = 1;
inline bool SelectExactlyOne::_internal_has_source() const {
  return this != internal_default_instance() && source_ != nullptr;
}
inline bool SelectExactlyOne::has_source() const {
  return _internal_has_source();
}
inline void SelectExactlyOne::clear_source() {
  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& SelectExactlyOne::_internal_source() const {
  const ::IvionOnline::ObjectPath* p = source_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& SelectExactlyOne::source() const {
  // @@protoc_insertion_point(field_get:IvionOnline.SelectExactlyOne.Source)
  return _internal_source();
}
inline void SelectExactlyOne::unsafe_arena_set_allocated_source(
    ::IvionOnline::ObjectPath* source) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(source_);
  }
  source_ = source;
  if (source) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.SelectExactlyOne.Source)
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::release_source() {
  
  ::IvionOnline::ObjectPath* temp = source_;
  source_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::unsafe_arena_release_source() {
  // @@protoc_insertion_point(field_release:IvionOnline.SelectExactlyOne.Source)
  
  ::IvionOnline::ObjectPath* temp = source_;
  source_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::_internal_mutable_source() {
  
  if (source_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    source_ = p;
  }
  return source_;
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::mutable_source() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.SelectExactlyOne.Source)
  return _internal_mutable_source();
}
inline void SelectExactlyOne::set_allocated_source(::IvionOnline::ObjectPath* source) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete source_;
  }
  if (source) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(source);
    if (message_arena != submessage_arena) {
      source = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.SelectExactlyOne.Source)
}

// .IvionOnline.ObjectPath Result = 2;
inline bool SelectExactlyOne::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool SelectExactlyOne::has_result() const {
  return _internal_has_result();
}
inline void SelectExactlyOne::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& SelectExactlyOne::_internal_result() const {
  const ::IvionOnline::ObjectPath* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& SelectExactlyOne::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.SelectExactlyOne.Result)
  return _internal_result();
}
inline void SelectExactlyOne::unsafe_arena_set_allocated_result(
    ::IvionOnline::ObjectPath* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.SelectExactlyOne.Result)
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::release_result() {
  
  ::IvionOnline::ObjectPath* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.SelectExactlyOne.Result)
  
  ::IvionOnline::ObjectPath* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::ObjectPath* SelectExactlyOne::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.SelectExactlyOne.Result)
  return _internal_mutable_result();
}
inline void SelectExactlyOne::set_allocated_result(::IvionOnline::ObjectPath* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.SelectExactlyOne.Result)
}

// -------------------------------------------------------------------

// AssertControlOrHeroic

// -------------------------------------------------------------------

// AssertControllerHasPriority

// -------------------------------------------------------------------

// AssertStackEmptyOrInstant

// -------------------------------------------------------------------

// PayCost

// .IvionOnline.ObjectPath Player = 1;
inline bool PayCost::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool PayCost::has_player() const {
  return _internal_has_player();
}
inline void PayCost::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PayCost::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PayCost::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PayCost.Player)
  return _internal_player();
}
inline void PayCost::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PayCost.Player)
}
inline ::IvionOnline::ObjectPath* PayCost::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.PayCost.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* PayCost::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PayCost.Player)
  return _internal_mutable_player();
}
inline void PayCost::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PayCost.Player)
}

// .IvionOnline.ObjectPath Card = 2;
inline bool PayCost::_internal_has_card() const {
  return this != internal_default_instance() && card_ != nullptr;
}
inline bool PayCost::has_card() const {
  return _internal_has_card();
}
inline void PayCost::clear_card() {
  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PayCost::_internal_card() const {
  const ::IvionOnline::ObjectPath* p = card_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PayCost::card() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PayCost.Card)
  return _internal_card();
}
inline void PayCost::unsafe_arena_set_allocated_card(
    ::IvionOnline::ObjectPath* card) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(card_);
  }
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PayCost.Card)
}
inline ::IvionOnline::ObjectPath* PayCost::release_card() {
  
  ::IvionOnline::ObjectPath* temp = card_;
  card_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::unsafe_arena_release_card() {
  // @@protoc_insertion_point(field_release:IvionOnline.PayCost.Card)
  
  ::IvionOnline::ObjectPath* temp = card_;
  card_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::_internal_mutable_card() {
  
  if (card_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    card_ = p;
  }
  return card_;
}
inline ::IvionOnline::ObjectPath* PayCost::mutable_card() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PayCost.Card)
  return _internal_mutable_card();
}
inline void PayCost::set_allocated_card(::IvionOnline::ObjectPath* card) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete card_;
  }
  if (card) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(card);
    if (message_arena != submessage_arena) {
      card = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    
  } else {
    
  }
  card_ = card;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PayCost.Card)
}

// .IvionOnline.ObjectPath ActionCostReduction = 3;
inline bool PayCost::_internal_has_actioncostreduction() const {
  return this != internal_default_instance() && actioncostreduction_ != nullptr;
}
inline bool PayCost::has_actioncostreduction() const {
  return _internal_has_actioncostreduction();
}
inline void PayCost::clear_actioncostreduction() {
  if (GetArena() == nullptr && actioncostreduction_ != nullptr) {
    delete actioncostreduction_;
  }
  actioncostreduction_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PayCost::_internal_actioncostreduction() const {
  const ::IvionOnline::ObjectPath* p = actioncostreduction_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PayCost::actioncostreduction() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PayCost.ActionCostReduction)
  return _internal_actioncostreduction();
}
inline void PayCost::unsafe_arena_set_allocated_actioncostreduction(
    ::IvionOnline::ObjectPath* actioncostreduction) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(actioncostreduction_);
  }
  actioncostreduction_ = actioncostreduction;
  if (actioncostreduction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PayCost.ActionCostReduction)
}
inline ::IvionOnline::ObjectPath* PayCost::release_actioncostreduction() {
  
  ::IvionOnline::ObjectPath* temp = actioncostreduction_;
  actioncostreduction_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::unsafe_arena_release_actioncostreduction() {
  // @@protoc_insertion_point(field_release:IvionOnline.PayCost.ActionCostReduction)
  
  ::IvionOnline::ObjectPath* temp = actioncostreduction_;
  actioncostreduction_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::_internal_mutable_actioncostreduction() {
  
  if (actioncostreduction_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    actioncostreduction_ = p;
  }
  return actioncostreduction_;
}
inline ::IvionOnline::ObjectPath* PayCost::mutable_actioncostreduction() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PayCost.ActionCostReduction)
  return _internal_mutable_actioncostreduction();
}
inline void PayCost::set_allocated_actioncostreduction(::IvionOnline::ObjectPath* actioncostreduction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete actioncostreduction_;
  }
  if (actioncostreduction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(actioncostreduction);
    if (message_arena != submessage_arena) {
      actioncostreduction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, actioncostreduction, submessage_arena);
    }
    
  } else {
    
  }
  actioncostreduction_ = actioncostreduction;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PayCost.ActionCostReduction)
}

// .IvionOnline.ObjectPath PowerCostReduction = 4;
inline bool PayCost::_internal_has_powercostreduction() const {
  return this != internal_default_instance() && powercostreduction_ != nullptr;
}
inline bool PayCost::has_powercostreduction() const {
  return _internal_has_powercostreduction();
}
inline void PayCost::clear_powercostreduction() {
  if (GetArena() == nullptr && powercostreduction_ != nullptr) {
    delete powercostreduction_;
  }
  powercostreduction_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PayCost::_internal_powercostreduction() const {
  const ::IvionOnline::ObjectPath* p = powercostreduction_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PayCost::powercostreduction() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PayCost.PowerCostReduction)
  return _internal_powercostreduction();
}
inline void PayCost::unsafe_arena_set_allocated_powercostreduction(
    ::IvionOnline::ObjectPath* powercostreduction) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(powercostreduction_);
  }
  powercostreduction_ = powercostreduction;
  if (powercostreduction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PayCost.PowerCostReduction)
}
inline ::IvionOnline::ObjectPath* PayCost::release_powercostreduction() {
  
  ::IvionOnline::ObjectPath* temp = powercostreduction_;
  powercostreduction_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::unsafe_arena_release_powercostreduction() {
  // @@protoc_insertion_point(field_release:IvionOnline.PayCost.PowerCostReduction)
  
  ::IvionOnline::ObjectPath* temp = powercostreduction_;
  powercostreduction_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::_internal_mutable_powercostreduction() {
  
  if (powercostreduction_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    powercostreduction_ = p;
  }
  return powercostreduction_;
}
inline ::IvionOnline::ObjectPath* PayCost::mutable_powercostreduction() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PayCost.PowerCostReduction)
  return _internal_mutable_powercostreduction();
}
inline void PayCost::set_allocated_powercostreduction(::IvionOnline::ObjectPath* powercostreduction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete powercostreduction_;
  }
  if (powercostreduction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(powercostreduction);
    if (message_arena != submessage_arena) {
      powercostreduction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, powercostreduction, submessage_arena);
    }
    
  } else {
    
  }
  powercostreduction_ = powercostreduction;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PayCost.PowerCostReduction)
}

// .IvionOnline.ObjectPath CostReduction = 5;
inline bool PayCost::_internal_has_costreduction() const {
  return this != internal_default_instance() && costreduction_ != nullptr;
}
inline bool PayCost::has_costreduction() const {
  return _internal_has_costreduction();
}
inline void PayCost::clear_costreduction() {
  if (GetArena() == nullptr && costreduction_ != nullptr) {
    delete costreduction_;
  }
  costreduction_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PayCost::_internal_costreduction() const {
  const ::IvionOnline::ObjectPath* p = costreduction_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PayCost::costreduction() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PayCost.CostReduction)
  return _internal_costreduction();
}
inline void PayCost::unsafe_arena_set_allocated_costreduction(
    ::IvionOnline::ObjectPath* costreduction) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(costreduction_);
  }
  costreduction_ = costreduction;
  if (costreduction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PayCost.CostReduction)
}
inline ::IvionOnline::ObjectPath* PayCost::release_costreduction() {
  
  ::IvionOnline::ObjectPath* temp = costreduction_;
  costreduction_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::unsafe_arena_release_costreduction() {
  // @@protoc_insertion_point(field_release:IvionOnline.PayCost.CostReduction)
  
  ::IvionOnline::ObjectPath* temp = costreduction_;
  costreduction_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::_internal_mutable_costreduction() {
  
  if (costreduction_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    costreduction_ = p;
  }
  return costreduction_;
}
inline ::IvionOnline::ObjectPath* PayCost::mutable_costreduction() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PayCost.CostReduction)
  return _internal_mutable_costreduction();
}
inline void PayCost::set_allocated_costreduction(::IvionOnline::ObjectPath* costreduction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete costreduction_;
  }
  if (costreduction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(costreduction);
    if (message_arena != submessage_arena) {
      costreduction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, costreduction, submessage_arena);
    }
    
  } else {
    
  }
  costreduction_ = costreduction;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PayCost.CostReduction)
}

// .IvionOnline.ObjectPath Free = 6;
inline bool PayCost::_internal_has_free() const {
  return this != internal_default_instance() && free_ != nullptr;
}
inline bool PayCost::has_free() const {
  return _internal_has_free();
}
inline void PayCost::clear_free() {
  if (GetArena() == nullptr && free_ != nullptr) {
    delete free_;
  }
  free_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PayCost::_internal_free() const {
  const ::IvionOnline::ObjectPath* p = free_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PayCost::free() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PayCost.Free)
  return _internal_free();
}
inline void PayCost::unsafe_arena_set_allocated_free(
    ::IvionOnline::ObjectPath* free) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(free_);
  }
  free_ = free;
  if (free) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PayCost.Free)
}
inline ::IvionOnline::ObjectPath* PayCost::release_free() {
  
  ::IvionOnline::ObjectPath* temp = free_;
  free_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::unsafe_arena_release_free() {
  // @@protoc_insertion_point(field_release:IvionOnline.PayCost.Free)
  
  ::IvionOnline::ObjectPath* temp = free_;
  free_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PayCost::_internal_mutable_free() {
  
  if (free_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    free_ = p;
  }
  return free_;
}
inline ::IvionOnline::ObjectPath* PayCost::mutable_free() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PayCost.Free)
  return _internal_mutable_free();
}
inline void PayCost::set_allocated_free(::IvionOnline::ObjectPath* free) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete free_;
  }
  if (free) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(free);
    if (message_arena != submessage_arena) {
      free = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, free, submessage_arena);
    }
    
  } else {
    
  }
  free_ = free;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PayCost.Free)
}

// -------------------------------------------------------------------

// PlayGainResources

// .IvionOnline.ObjectPath Player = 1;
inline bool PlayGainResources::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool PlayGainResources::has_player() const {
  return _internal_has_player();
}
inline void PlayGainResources::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PlayGainResources::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PlayGainResources::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PlayGainResources.Player)
  return _internal_player();
}
inline void PlayGainResources::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PlayGainResources.Player)
}
inline ::IvionOnline::ObjectPath* PlayGainResources::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PlayGainResources::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.PlayGainResources.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PlayGainResources::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* PlayGainResources::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PlayGainResources.Player)
  return _internal_mutable_player();
}
inline void PlayGainResources::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PlayGainResources.Player)
}

// .IvionOnline.ObjectPath Card = 2;
inline bool PlayGainResources::_internal_has_card() const {
  return this != internal_default_instance() && card_ != nullptr;
}
inline bool PlayGainResources::has_card() const {
  return _internal_has_card();
}
inline void PlayGainResources::clear_card() {
  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& PlayGainResources::_internal_card() const {
  const ::IvionOnline::ObjectPath* p = card_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& PlayGainResources::card() const {
  // @@protoc_insertion_point(field_get:IvionOnline.PlayGainResources.Card)
  return _internal_card();
}
inline void PlayGainResources::unsafe_arena_set_allocated_card(
    ::IvionOnline::ObjectPath* card) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(card_);
  }
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.PlayGainResources.Card)
}
inline ::IvionOnline::ObjectPath* PlayGainResources::release_card() {
  
  ::IvionOnline::ObjectPath* temp = card_;
  card_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* PlayGainResources::unsafe_arena_release_card() {
  // @@protoc_insertion_point(field_release:IvionOnline.PlayGainResources.Card)
  
  ::IvionOnline::ObjectPath* temp = card_;
  card_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* PlayGainResources::_internal_mutable_card() {
  
  if (card_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    card_ = p;
  }
  return card_;
}
inline ::IvionOnline::ObjectPath* PlayGainResources::mutable_card() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.PlayGainResources.Card)
  return _internal_mutable_card();
}
inline void PlayGainResources::set_allocated_card(::IvionOnline::ObjectPath* card) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete card_;
  }
  if (card) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(card);
    if (message_arena != submessage_arena) {
      card = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    
  } else {
    
  }
  card_ = card;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.PlayGainResources.Card)
}

// -------------------------------------------------------------------

// RefundCost

// .IvionOnline.ObjectPath Player = 1;
inline bool RefundCost::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool RefundCost::has_player() const {
  return _internal_has_player();
}
inline void RefundCost::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& RefundCost::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& RefundCost::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.RefundCost.Player)
  return _internal_player();
}
inline void RefundCost::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.RefundCost.Player)
}
inline ::IvionOnline::ObjectPath* RefundCost::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* RefundCost::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.RefundCost.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* RefundCost::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* RefundCost::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.RefundCost.Player)
  return _internal_mutable_player();
}
inline void RefundCost::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.RefundCost.Player)
}

// .IvionOnline.ObjectPath Card = 2;
inline bool RefundCost::_internal_has_card() const {
  return this != internal_default_instance() && card_ != nullptr;
}
inline bool RefundCost::has_card() const {
  return _internal_has_card();
}
inline void RefundCost::clear_card() {
  if (GetArena() == nullptr && card_ != nullptr) {
    delete card_;
  }
  card_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& RefundCost::_internal_card() const {
  const ::IvionOnline::ObjectPath* p = card_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& RefundCost::card() const {
  // @@protoc_insertion_point(field_get:IvionOnline.RefundCost.Card)
  return _internal_card();
}
inline void RefundCost::unsafe_arena_set_allocated_card(
    ::IvionOnline::ObjectPath* card) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(card_);
  }
  card_ = card;
  if (card) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.RefundCost.Card)
}
inline ::IvionOnline::ObjectPath* RefundCost::release_card() {
  
  ::IvionOnline::ObjectPath* temp = card_;
  card_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* RefundCost::unsafe_arena_release_card() {
  // @@protoc_insertion_point(field_release:IvionOnline.RefundCost.Card)
  
  ::IvionOnline::ObjectPath* temp = card_;
  card_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* RefundCost::_internal_mutable_card() {
  
  if (card_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    card_ = p;
  }
  return card_;
}
inline ::IvionOnline::ObjectPath* RefundCost::mutable_card() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.RefundCost.Card)
  return _internal_mutable_card();
}
inline void RefundCost::set_allocated_card(::IvionOnline::ObjectPath* card) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete card_;
  }
  if (card) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(card);
    if (message_arena != submessage_arena) {
      card = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, card, submessage_arena);
    }
    
  } else {
    
  }
  card_ = card;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.RefundCost.Card)
}

// -------------------------------------------------------------------

// GainActions

// .IvionOnline.ObjectPath Player = 1;
inline bool GainActions::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool GainActions::has_player() const {
  return _internal_has_player();
}
inline void GainActions::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& GainActions::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& GainActions::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GainActions.Player)
  return _internal_player();
}
inline void GainActions::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GainActions.Player)
}
inline ::IvionOnline::ObjectPath* GainActions::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* GainActions::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.GainActions.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* GainActions::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* GainActions::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GainActions.Player)
  return _internal_mutable_player();
}
inline void GainActions::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GainActions.Player)
}

// .IvionOnline.ObjectPath Value = 2;
inline bool GainActions::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool GainActions::has_value() const {
  return _internal_has_value();
}
inline void GainActions::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& GainActions::_internal_value() const {
  const ::IvionOnline::ObjectPath* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& GainActions::value() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GainActions.Value)
  return _internal_value();
}
inline void GainActions::unsafe_arena_set_allocated_value(
    ::IvionOnline::ObjectPath* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GainActions.Value)
}
inline ::IvionOnline::ObjectPath* GainActions::release_value() {
  
  ::IvionOnline::ObjectPath* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* GainActions::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:IvionOnline.GainActions.Value)
  
  ::IvionOnline::ObjectPath* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* GainActions::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::IvionOnline::ObjectPath* GainActions::mutable_value() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GainActions.Value)
  return _internal_mutable_value();
}
inline void GainActions::set_allocated_value(::IvionOnline::ObjectPath* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GainActions.Value)
}

// -------------------------------------------------------------------

// GainPower

// .IvionOnline.ObjectPath Player = 1;
inline bool GainPower::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool GainPower::has_player() const {
  return _internal_has_player();
}
inline void GainPower::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& GainPower::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& GainPower::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GainPower.Player)
  return _internal_player();
}
inline void GainPower::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GainPower.Player)
}
inline ::IvionOnline::ObjectPath* GainPower::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* GainPower::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.GainPower.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* GainPower::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* GainPower::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GainPower.Player)
  return _internal_mutable_player();
}
inline void GainPower::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GainPower.Player)
}

// .IvionOnline.ObjectPath Value = 2;
inline bool GainPower::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool GainPower::has_value() const {
  return _internal_has_value();
}
inline void GainPower::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& GainPower::_internal_value() const {
  const ::IvionOnline::ObjectPath* p = value_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& GainPower::value() const {
  // @@protoc_insertion_point(field_get:IvionOnline.GainPower.Value)
  return _internal_value();
}
inline void GainPower::unsafe_arena_set_allocated_value(
    ::IvionOnline::ObjectPath* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.GainPower.Value)
}
inline ::IvionOnline::ObjectPath* GainPower::release_value() {
  
  ::IvionOnline::ObjectPath* temp = value_;
  value_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* GainPower::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:IvionOnline.GainPower.Value)
  
  ::IvionOnline::ObjectPath* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* GainPower::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::IvionOnline::ObjectPath* GainPower::mutable_value() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.GainPower.Value)
  return _internal_mutable_value();
}
inline void GainPower::set_allocated_value(::IvionOnline::ObjectPath* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.GainPower.Value)
}

// -------------------------------------------------------------------

// Move

// .IvionOnline.ObjectPath Player = 1;
inline bool Move::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool Move::has_player() const {
  return _internal_has_player();
}
inline void Move::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Move::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Move::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Move.Player)
  return _internal_player();
}
inline void Move::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Move.Player)
}
inline ::IvionOnline::ObjectPath* Move::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Move::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.Move.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Move::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* Move::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Move.Player)
  return _internal_mutable_player();
}
inline void Move::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Move.Player)
}

// .IvionOnline.ObjectPath Destination = 2;
inline bool Move::_internal_has_destination() const {
  return this != internal_default_instance() && destination_ != nullptr;
}
inline bool Move::has_destination() const {
  return _internal_has_destination();
}
inline void Move::clear_destination() {
  if (GetArena() == nullptr && destination_ != nullptr) {
    delete destination_;
  }
  destination_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Move::_internal_destination() const {
  const ::IvionOnline::ObjectPath* p = destination_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Move::destination() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Move.Destination)
  return _internal_destination();
}
inline void Move::unsafe_arena_set_allocated_destination(
    ::IvionOnline::ObjectPath* destination) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(destination_);
  }
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Move.Destination)
}
inline ::IvionOnline::ObjectPath* Move::release_destination() {
  
  ::IvionOnline::ObjectPath* temp = destination_;
  destination_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Move::unsafe_arena_release_destination() {
  // @@protoc_insertion_point(field_release:IvionOnline.Move.Destination)
  
  ::IvionOnline::ObjectPath* temp = destination_;
  destination_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Move::_internal_mutable_destination() {
  
  if (destination_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    destination_ = p;
  }
  return destination_;
}
inline ::IvionOnline::ObjectPath* Move::mutable_destination() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Move.Destination)
  return _internal_mutable_destination();
}
inline void Move::set_allocated_destination(::IvionOnline::ObjectPath* destination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete destination_;
  }
  if (destination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(destination);
    if (message_arena != submessage_arena) {
      destination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, destination, submessage_arena);
    }
    
  } else {
    
  }
  destination_ = destination;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Move.Destination)
}

// -------------------------------------------------------------------

// Travel

// .IvionOnline.ObjectPath Player = 1;
inline bool Travel::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool Travel::has_player() const {
  return _internal_has_player();
}
inline void Travel::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Travel::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Travel::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Travel.Player)
  return _internal_player();
}
inline void Travel::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Travel.Player)
}
inline ::IvionOnline::ObjectPath* Travel::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Travel::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.Travel.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Travel::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* Travel::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Travel.Player)
  return _internal_mutable_player();
}
inline void Travel::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Travel.Player)
}

// .IvionOnline.ObjectPath Destination = 2;
inline bool Travel::_internal_has_destination() const {
  return this != internal_default_instance() && destination_ != nullptr;
}
inline bool Travel::has_destination() const {
  return _internal_has_destination();
}
inline void Travel::clear_destination() {
  if (GetArena() == nullptr && destination_ != nullptr) {
    delete destination_;
  }
  destination_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Travel::_internal_destination() const {
  const ::IvionOnline::ObjectPath* p = destination_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Travel::destination() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Travel.Destination)
  return _internal_destination();
}
inline void Travel::unsafe_arena_set_allocated_destination(
    ::IvionOnline::ObjectPath* destination) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(destination_);
  }
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Travel.Destination)
}
inline ::IvionOnline::ObjectPath* Travel::release_destination() {
  
  ::IvionOnline::ObjectPath* temp = destination_;
  destination_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Travel::unsafe_arena_release_destination() {
  // @@protoc_insertion_point(field_release:IvionOnline.Travel.Destination)
  
  ::IvionOnline::ObjectPath* temp = destination_;
  destination_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Travel::_internal_mutable_destination() {
  
  if (destination_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    destination_ = p;
  }
  return destination_;
}
inline ::IvionOnline::ObjectPath* Travel::mutable_destination() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Travel.Destination)
  return _internal_mutable_destination();
}
inline void Travel::set_allocated_destination(::IvionOnline::ObjectPath* destination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete destination_;
  }
  if (destination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(destination);
    if (message_arena != submessage_arena) {
      destination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, destination, submessage_arena);
    }
    
  } else {
    
  }
  destination_ = destination;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Travel.Destination)
}

// -------------------------------------------------------------------

// Damage

// .IvionOnline.ObjectPath Player = 1;
inline bool Damage::_internal_has_player() const {
  return this != internal_default_instance() && player_ != nullptr;
}
inline bool Damage::has_player() const {
  return _internal_has_player();
}
inline void Damage::clear_player() {
  if (GetArena() == nullptr && player_ != nullptr) {
    delete player_;
  }
  player_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Damage::_internal_player() const {
  const ::IvionOnline::ObjectPath* p = player_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Damage::player() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Damage.Player)
  return _internal_player();
}
inline void Damage::unsafe_arena_set_allocated_player(
    ::IvionOnline::ObjectPath* player) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(player_);
  }
  player_ = player;
  if (player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Damage.Player)
}
inline ::IvionOnline::ObjectPath* Damage::release_player() {
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Damage::unsafe_arena_release_player() {
  // @@protoc_insertion_point(field_release:IvionOnline.Damage.Player)
  
  ::IvionOnline::ObjectPath* temp = player_;
  player_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Damage::_internal_mutable_player() {
  
  if (player_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    player_ = p;
  }
  return player_;
}
inline ::IvionOnline::ObjectPath* Damage::mutable_player() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Damage.Player)
  return _internal_mutable_player();
}
inline void Damage::set_allocated_player(::IvionOnline::ObjectPath* player) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete player_;
  }
  if (player) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(player);
    if (message_arena != submessage_arena) {
      player = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Damage.Player)
}

// .IvionOnline.ObjectPath Amount = 2;
inline bool Damage::_internal_has_amount() const {
  return this != internal_default_instance() && amount_ != nullptr;
}
inline bool Damage::has_amount() const {
  return _internal_has_amount();
}
inline void Damage::clear_amount() {
  if (GetArena() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& Damage::_internal_amount() const {
  const ::IvionOnline::ObjectPath* p = amount_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& Damage::amount() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Damage.Amount)
  return _internal_amount();
}
inline void Damage::unsafe_arena_set_allocated_amount(
    ::IvionOnline::ObjectPath* amount) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(amount_);
  }
  amount_ = amount;
  if (amount) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Damage.Amount)
}
inline ::IvionOnline::ObjectPath* Damage::release_amount() {
  
  ::IvionOnline::ObjectPath* temp = amount_;
  amount_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* Damage::unsafe_arena_release_amount() {
  // @@protoc_insertion_point(field_release:IvionOnline.Damage.Amount)
  
  ::IvionOnline::ObjectPath* temp = amount_;
  amount_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* Damage::_internal_mutable_amount() {
  
  if (amount_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    amount_ = p;
  }
  return amount_;
}
inline ::IvionOnline::ObjectPath* Damage::mutable_amount() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Damage.Amount)
  return _internal_mutable_amount();
}
inline void Damage::set_allocated_amount(::IvionOnline::ObjectPath* amount) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete amount_;
  }
  if (amount) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(amount);
    if (message_arena != submessage_arena) {
      amount = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, amount, submessage_arena);
    }
    
  } else {
    
  }
  amount_ = amount;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Damage.Amount)
}

// -------------------------------------------------------------------

// Boolean_Constant

// .IvionOnline.Boolean Result = 1;
inline bool Boolean_Constant::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool Boolean_Constant::has_result() const {
  return _internal_has_result();
}
inline void Boolean_Constant::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::Boolean& Boolean_Constant::_internal_result() const {
  const ::IvionOnline::Boolean* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Boolean&>(
      ::IvionOnline::_Boolean_default_instance_);
}
inline const ::IvionOnline::Boolean& Boolean_Constant::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Boolean_Constant.Result)
  return _internal_result();
}
inline void Boolean_Constant::unsafe_arena_set_allocated_result(
    ::IvionOnline::Boolean* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Boolean_Constant.Result)
}
inline ::IvionOnline::Boolean* Boolean_Constant::release_result() {
  
  ::IvionOnline::Boolean* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Boolean* Boolean_Constant::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.Boolean_Constant.Result)
  
  ::IvionOnline::Boolean* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::Boolean* Boolean_Constant::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Boolean>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::Boolean* Boolean_Constant::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Boolean_Constant.Result)
  return _internal_mutable_result();
}
inline void Boolean_Constant::set_allocated_result(::IvionOnline::Boolean* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Boolean_Constant.Result)
}

// -------------------------------------------------------------------

// Integer_Constant

// .IvionOnline.Integer Result = 1;
inline bool Integer_Constant::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool Integer_Constant::has_result() const {
  return _internal_has_result();
}
inline void Integer_Constant::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::Integer& Integer_Constant::_internal_result() const {
  const ::IvionOnline::Integer* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Integer&>(
      ::IvionOnline::_Integer_default_instance_);
}
inline const ::IvionOnline::Integer& Integer_Constant::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Integer_Constant.Result)
  return _internal_result();
}
inline void Integer_Constant::unsafe_arena_set_allocated_result(
    ::IvionOnline::Integer* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Integer_Constant.Result)
}
inline ::IvionOnline::Integer* Integer_Constant::release_result() {
  
  ::IvionOnline::Integer* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Integer* Integer_Constant::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.Integer_Constant.Result)
  
  ::IvionOnline::Integer* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::Integer* Integer_Constant::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Integer>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::Integer* Integer_Constant::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Integer_Constant.Result)
  return _internal_mutable_result();
}
inline void Integer_Constant::set_allocated_result(::IvionOnline::Integer* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Integer_Constant.Result)
}

// -------------------------------------------------------------------

// Vec2i_Constant

// .IvionOnline.Vec2i Result = 1;
inline bool Vec2i_Constant::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool Vec2i_Constant::has_result() const {
  return _internal_has_result();
}
inline void Vec2i_Constant::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::Vec2i& Vec2i_Constant::_internal_result() const {
  const ::IvionOnline::Vec2i* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Vec2i&>(
      ::IvionOnline::_Vec2i_default_instance_);
}
inline const ::IvionOnline::Vec2i& Vec2i_Constant::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Vec2i_Constant.Result)
  return _internal_result();
}
inline void Vec2i_Constant::unsafe_arena_set_allocated_result(
    ::IvionOnline::Vec2i* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Vec2i_Constant.Result)
}
inline ::IvionOnline::Vec2i* Vec2i_Constant::release_result() {
  
  ::IvionOnline::Vec2i* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Vec2i* Vec2i_Constant::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.Vec2i_Constant.Result)
  
  ::IvionOnline::Vec2i* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::Vec2i* Vec2i_Constant::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Vec2i>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::Vec2i* Vec2i_Constant::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Vec2i_Constant.Result)
  return _internal_mutable_result();
}
inline void Vec2i_Constant::set_allocated_result(::IvionOnline::Vec2i* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Vec2i_Constant.Result)
}

// -------------------------------------------------------------------

// Terrain_Constant

// .IvionOnline.Terrain Result = 1;
inline bool Terrain_Constant::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool Terrain_Constant::has_result() const {
  return _internal_has_result();
}
inline void Terrain_Constant::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::Terrain& Terrain_Constant::_internal_result() const {
  const ::IvionOnline::Terrain* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Terrain&>(
      ::IvionOnline::_Terrain_default_instance_);
}
inline const ::IvionOnline::Terrain& Terrain_Constant::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Terrain_Constant.Result)
  return _internal_result();
}
inline void Terrain_Constant::unsafe_arena_set_allocated_result(
    ::IvionOnline::Terrain* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Terrain_Constant.Result)
}
inline ::IvionOnline::Terrain* Terrain_Constant::release_result() {
  
  ::IvionOnline::Terrain* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Terrain* Terrain_Constant::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.Terrain_Constant.Result)
  
  ::IvionOnline::Terrain* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::Terrain* Terrain_Constant::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Terrain>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::Terrain* Terrain_Constant::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Terrain_Constant.Result)
  return _internal_mutable_result();
}
inline void Terrain_Constant::set_allocated_result(::IvionOnline::Terrain* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Terrain_Constant.Result)
}

// -------------------------------------------------------------------

// Color_Constant

// .IvionOnline.Color Result = 1;
inline bool Color_Constant::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool Color_Constant::has_result() const {
  return _internal_has_result();
}
inline void Color_Constant::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::Color& Color_Constant::_internal_result() const {
  const ::IvionOnline::Color* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::Color&>(
      ::IvionOnline::_Color_default_instance_);
}
inline const ::IvionOnline::Color& Color_Constant::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Color_Constant.Result)
  return _internal_result();
}
inline void Color_Constant::unsafe_arena_set_allocated_result(
    ::IvionOnline::Color* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Color_Constant.Result)
}
inline ::IvionOnline::Color* Color_Constant::release_result() {
  
  ::IvionOnline::Color* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::Color* Color_Constant::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.Color_Constant.Result)
  
  ::IvionOnline::Color* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::Color* Color_Constant::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::Color>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::Color* Color_Constant::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Color_Constant.Result)
  return _internal_mutable_result();
}
inline void Color_Constant::set_allocated_result(::IvionOnline::Color* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.Color_Constant.Result)
}

// -------------------------------------------------------------------

// ObjectPath_Constant

// .IvionOnline.ObjectPath Result = 1;
inline bool ObjectPath_Constant::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool ObjectPath_Constant::has_result() const {
  return _internal_has_result();
}
inline void ObjectPath_Constant::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Constant::_internal_result() const {
  const ::IvionOnline::ObjectPath* p = result_;
  return p != nullptr ? *p : reinterpret_cast<const ::IvionOnline::ObjectPath&>(
      ::IvionOnline::_ObjectPath_default_instance_);
}
inline const ::IvionOnline::ObjectPath& ObjectPath_Constant::result() const {
  // @@protoc_insertion_point(field_get:IvionOnline.ObjectPath_Constant.Result)
  return _internal_result();
}
inline void ObjectPath_Constant::unsafe_arena_set_allocated_result(
    ::IvionOnline::ObjectPath* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.ObjectPath_Constant.Result)
}
inline ::IvionOnline::ObjectPath* ObjectPath_Constant::release_result() {
  
  ::IvionOnline::ObjectPath* temp = result_;
  result_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Constant::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:IvionOnline.ObjectPath_Constant.Result)
  
  ::IvionOnline::ObjectPath* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Constant::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::IvionOnline::ObjectPath>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::IvionOnline::ObjectPath* ObjectPath_Constant::mutable_result() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.ObjectPath_Constant.Result)
  return _internal_mutable_result();
}
inline void ObjectPath_Constant::set_allocated_result(::IvionOnline::ObjectPath* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete result_;
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(result);
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:IvionOnline.ObjectPath_Constant.Result)
}

// -------------------------------------------------------------------

// Method

// .IvionOnline.GetList GetList = 1;
inline bool Method::_internal_has_getlist() const {
  return methods_case() == kGetList;
}
inline bool Method::has_getlist() const {
  return _internal_has_getlist();
}
inline void Method::set_has_getlist() {
  _oneof_case_[0] = kGetList;
}
inline void Method::clear_getlist() {
  if (_internal_has_getlist()) {
    if (GetArena() == nullptr) {
      delete methods_.getlist_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::GetList* Method::release_getlist() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.GetList)
  if (_internal_has_getlist()) {
    clear_has_methods();
      ::IvionOnline::GetList* temp = methods_.getlist_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.getlist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::GetList& Method::_internal_getlist() const {
  return _internal_has_getlist()
      ? *methods_.getlist_
      : reinterpret_cast< ::IvionOnline::GetList&>(::IvionOnline::_GetList_default_instance_);
}
inline const ::IvionOnline::GetList& Method::getlist() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.GetList)
  return _internal_getlist();
}
inline ::IvionOnline::GetList* Method::unsafe_arena_release_getlist() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.GetList)
  if (_internal_has_getlist()) {
    clear_has_methods();
    ::IvionOnline::GetList* temp = methods_.getlist_;
    methods_.getlist_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_getlist(::IvionOnline::GetList* getlist) {
  clear_methods();
  if (getlist) {
    set_has_getlist();
    methods_.getlist_ = getlist;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.GetList)
}
inline ::IvionOnline::GetList* Method::_internal_mutable_getlist() {
  if (!_internal_has_getlist()) {
    clear_methods();
    set_has_getlist();
    methods_.getlist_ = CreateMaybeMessage< ::IvionOnline::GetList >(GetArena());
  }
  return methods_.getlist_;
}
inline ::IvionOnline::GetList* Method::mutable_getlist() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.GetList)
  return _internal_mutable_getlist();
}

// .IvionOnline.SelectMultiple SelectMultiple = 2;
inline bool Method::_internal_has_selectmultiple() const {
  return methods_case() == kSelectMultiple;
}
inline bool Method::has_selectmultiple() const {
  return _internal_has_selectmultiple();
}
inline void Method::set_has_selectmultiple() {
  _oneof_case_[0] = kSelectMultiple;
}
inline void Method::clear_selectmultiple() {
  if (_internal_has_selectmultiple()) {
    if (GetArena() == nullptr) {
      delete methods_.selectmultiple_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::SelectMultiple* Method::release_selectmultiple() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.SelectMultiple)
  if (_internal_has_selectmultiple()) {
    clear_has_methods();
      ::IvionOnline::SelectMultiple* temp = methods_.selectmultiple_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.selectmultiple_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::SelectMultiple& Method::_internal_selectmultiple() const {
  return _internal_has_selectmultiple()
      ? *methods_.selectmultiple_
      : reinterpret_cast< ::IvionOnline::SelectMultiple&>(::IvionOnline::_SelectMultiple_default_instance_);
}
inline const ::IvionOnline::SelectMultiple& Method::selectmultiple() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.SelectMultiple)
  return _internal_selectmultiple();
}
inline ::IvionOnline::SelectMultiple* Method::unsafe_arena_release_selectmultiple() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.SelectMultiple)
  if (_internal_has_selectmultiple()) {
    clear_has_methods();
    ::IvionOnline::SelectMultiple* temp = methods_.selectmultiple_;
    methods_.selectmultiple_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_selectmultiple(::IvionOnline::SelectMultiple* selectmultiple) {
  clear_methods();
  if (selectmultiple) {
    set_has_selectmultiple();
    methods_.selectmultiple_ = selectmultiple;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.SelectMultiple)
}
inline ::IvionOnline::SelectMultiple* Method::_internal_mutable_selectmultiple() {
  if (!_internal_has_selectmultiple()) {
    clear_methods();
    set_has_selectmultiple();
    methods_.selectmultiple_ = CreateMaybeMessage< ::IvionOnline::SelectMultiple >(GetArena());
  }
  return methods_.selectmultiple_;
}
inline ::IvionOnline::SelectMultiple* Method::mutable_selectmultiple() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.SelectMultiple)
  return _internal_mutable_selectmultiple();
}

// .IvionOnline.SelectExactlyOne SelectExactlyOne = 3;
inline bool Method::_internal_has_selectexactlyone() const {
  return methods_case() == kSelectExactlyOne;
}
inline bool Method::has_selectexactlyone() const {
  return _internal_has_selectexactlyone();
}
inline void Method::set_has_selectexactlyone() {
  _oneof_case_[0] = kSelectExactlyOne;
}
inline void Method::clear_selectexactlyone() {
  if (_internal_has_selectexactlyone()) {
    if (GetArena() == nullptr) {
      delete methods_.selectexactlyone_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::SelectExactlyOne* Method::release_selectexactlyone() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.SelectExactlyOne)
  if (_internal_has_selectexactlyone()) {
    clear_has_methods();
      ::IvionOnline::SelectExactlyOne* temp = methods_.selectexactlyone_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.selectexactlyone_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::SelectExactlyOne& Method::_internal_selectexactlyone() const {
  return _internal_has_selectexactlyone()
      ? *methods_.selectexactlyone_
      : reinterpret_cast< ::IvionOnline::SelectExactlyOne&>(::IvionOnline::_SelectExactlyOne_default_instance_);
}
inline const ::IvionOnline::SelectExactlyOne& Method::selectexactlyone() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.SelectExactlyOne)
  return _internal_selectexactlyone();
}
inline ::IvionOnline::SelectExactlyOne* Method::unsafe_arena_release_selectexactlyone() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.SelectExactlyOne)
  if (_internal_has_selectexactlyone()) {
    clear_has_methods();
    ::IvionOnline::SelectExactlyOne* temp = methods_.selectexactlyone_;
    methods_.selectexactlyone_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_selectexactlyone(::IvionOnline::SelectExactlyOne* selectexactlyone) {
  clear_methods();
  if (selectexactlyone) {
    set_has_selectexactlyone();
    methods_.selectexactlyone_ = selectexactlyone;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.SelectExactlyOne)
}
inline ::IvionOnline::SelectExactlyOne* Method::_internal_mutable_selectexactlyone() {
  if (!_internal_has_selectexactlyone()) {
    clear_methods();
    set_has_selectexactlyone();
    methods_.selectexactlyone_ = CreateMaybeMessage< ::IvionOnline::SelectExactlyOne >(GetArena());
  }
  return methods_.selectexactlyone_;
}
inline ::IvionOnline::SelectExactlyOne* Method::mutable_selectexactlyone() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.SelectExactlyOne)
  return _internal_mutable_selectexactlyone();
}

// .IvionOnline.AssertControlOrHeroic AssertControlOrHeroic = 4;
inline bool Method::_internal_has_assertcontrolorheroic() const {
  return methods_case() == kAssertControlOrHeroic;
}
inline bool Method::has_assertcontrolorheroic() const {
  return _internal_has_assertcontrolorheroic();
}
inline void Method::set_has_assertcontrolorheroic() {
  _oneof_case_[0] = kAssertControlOrHeroic;
}
inline void Method::clear_assertcontrolorheroic() {
  if (_internal_has_assertcontrolorheroic()) {
    if (GetArena() == nullptr) {
      delete methods_.assertcontrolorheroic_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::AssertControlOrHeroic* Method::release_assertcontrolorheroic() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.AssertControlOrHeroic)
  if (_internal_has_assertcontrolorheroic()) {
    clear_has_methods();
      ::IvionOnline::AssertControlOrHeroic* temp = methods_.assertcontrolorheroic_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.assertcontrolorheroic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::AssertControlOrHeroic& Method::_internal_assertcontrolorheroic() const {
  return _internal_has_assertcontrolorheroic()
      ? *methods_.assertcontrolorheroic_
      : reinterpret_cast< ::IvionOnline::AssertControlOrHeroic&>(::IvionOnline::_AssertControlOrHeroic_default_instance_);
}
inline const ::IvionOnline::AssertControlOrHeroic& Method::assertcontrolorheroic() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.AssertControlOrHeroic)
  return _internal_assertcontrolorheroic();
}
inline ::IvionOnline::AssertControlOrHeroic* Method::unsafe_arena_release_assertcontrolorheroic() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.AssertControlOrHeroic)
  if (_internal_has_assertcontrolorheroic()) {
    clear_has_methods();
    ::IvionOnline::AssertControlOrHeroic* temp = methods_.assertcontrolorheroic_;
    methods_.assertcontrolorheroic_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_assertcontrolorheroic(::IvionOnline::AssertControlOrHeroic* assertcontrolorheroic) {
  clear_methods();
  if (assertcontrolorheroic) {
    set_has_assertcontrolorheroic();
    methods_.assertcontrolorheroic_ = assertcontrolorheroic;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.AssertControlOrHeroic)
}
inline ::IvionOnline::AssertControlOrHeroic* Method::_internal_mutable_assertcontrolorheroic() {
  if (!_internal_has_assertcontrolorheroic()) {
    clear_methods();
    set_has_assertcontrolorheroic();
    methods_.assertcontrolorheroic_ = CreateMaybeMessage< ::IvionOnline::AssertControlOrHeroic >(GetArena());
  }
  return methods_.assertcontrolorheroic_;
}
inline ::IvionOnline::AssertControlOrHeroic* Method::mutable_assertcontrolorheroic() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.AssertControlOrHeroic)
  return _internal_mutable_assertcontrolorheroic();
}

// .IvionOnline.AssertControllerHasPriority AssertControllerHasPriority = 5;
inline bool Method::_internal_has_assertcontrollerhaspriority() const {
  return methods_case() == kAssertControllerHasPriority;
}
inline bool Method::has_assertcontrollerhaspriority() const {
  return _internal_has_assertcontrollerhaspriority();
}
inline void Method::set_has_assertcontrollerhaspriority() {
  _oneof_case_[0] = kAssertControllerHasPriority;
}
inline void Method::clear_assertcontrollerhaspriority() {
  if (_internal_has_assertcontrollerhaspriority()) {
    if (GetArena() == nullptr) {
      delete methods_.assertcontrollerhaspriority_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::AssertControllerHasPriority* Method::release_assertcontrollerhaspriority() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.AssertControllerHasPriority)
  if (_internal_has_assertcontrollerhaspriority()) {
    clear_has_methods();
      ::IvionOnline::AssertControllerHasPriority* temp = methods_.assertcontrollerhaspriority_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.assertcontrollerhaspriority_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::AssertControllerHasPriority& Method::_internal_assertcontrollerhaspriority() const {
  return _internal_has_assertcontrollerhaspriority()
      ? *methods_.assertcontrollerhaspriority_
      : reinterpret_cast< ::IvionOnline::AssertControllerHasPriority&>(::IvionOnline::_AssertControllerHasPriority_default_instance_);
}
inline const ::IvionOnline::AssertControllerHasPriority& Method::assertcontrollerhaspriority() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.AssertControllerHasPriority)
  return _internal_assertcontrollerhaspriority();
}
inline ::IvionOnline::AssertControllerHasPriority* Method::unsafe_arena_release_assertcontrollerhaspriority() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.AssertControllerHasPriority)
  if (_internal_has_assertcontrollerhaspriority()) {
    clear_has_methods();
    ::IvionOnline::AssertControllerHasPriority* temp = methods_.assertcontrollerhaspriority_;
    methods_.assertcontrollerhaspriority_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_assertcontrollerhaspriority(::IvionOnline::AssertControllerHasPriority* assertcontrollerhaspriority) {
  clear_methods();
  if (assertcontrollerhaspriority) {
    set_has_assertcontrollerhaspriority();
    methods_.assertcontrollerhaspriority_ = assertcontrollerhaspriority;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.AssertControllerHasPriority)
}
inline ::IvionOnline::AssertControllerHasPriority* Method::_internal_mutable_assertcontrollerhaspriority() {
  if (!_internal_has_assertcontrollerhaspriority()) {
    clear_methods();
    set_has_assertcontrollerhaspriority();
    methods_.assertcontrollerhaspriority_ = CreateMaybeMessage< ::IvionOnline::AssertControllerHasPriority >(GetArena());
  }
  return methods_.assertcontrollerhaspriority_;
}
inline ::IvionOnline::AssertControllerHasPriority* Method::mutable_assertcontrollerhaspriority() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.AssertControllerHasPriority)
  return _internal_mutable_assertcontrollerhaspriority();
}

// .IvionOnline.AssertStackEmptyOrInstant AssertStackEmptyOrInstant = 6;
inline bool Method::_internal_has_assertstackemptyorinstant() const {
  return methods_case() == kAssertStackEmptyOrInstant;
}
inline bool Method::has_assertstackemptyorinstant() const {
  return _internal_has_assertstackemptyorinstant();
}
inline void Method::set_has_assertstackemptyorinstant() {
  _oneof_case_[0] = kAssertStackEmptyOrInstant;
}
inline void Method::clear_assertstackemptyorinstant() {
  if (_internal_has_assertstackemptyorinstant()) {
    if (GetArena() == nullptr) {
      delete methods_.assertstackemptyorinstant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::AssertStackEmptyOrInstant* Method::release_assertstackemptyorinstant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.AssertStackEmptyOrInstant)
  if (_internal_has_assertstackemptyorinstant()) {
    clear_has_methods();
      ::IvionOnline::AssertStackEmptyOrInstant* temp = methods_.assertstackemptyorinstant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.assertstackemptyorinstant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::AssertStackEmptyOrInstant& Method::_internal_assertstackemptyorinstant() const {
  return _internal_has_assertstackemptyorinstant()
      ? *methods_.assertstackemptyorinstant_
      : reinterpret_cast< ::IvionOnline::AssertStackEmptyOrInstant&>(::IvionOnline::_AssertStackEmptyOrInstant_default_instance_);
}
inline const ::IvionOnline::AssertStackEmptyOrInstant& Method::assertstackemptyorinstant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.AssertStackEmptyOrInstant)
  return _internal_assertstackemptyorinstant();
}
inline ::IvionOnline::AssertStackEmptyOrInstant* Method::unsafe_arena_release_assertstackemptyorinstant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.AssertStackEmptyOrInstant)
  if (_internal_has_assertstackemptyorinstant()) {
    clear_has_methods();
    ::IvionOnline::AssertStackEmptyOrInstant* temp = methods_.assertstackemptyorinstant_;
    methods_.assertstackemptyorinstant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_assertstackemptyorinstant(::IvionOnline::AssertStackEmptyOrInstant* assertstackemptyorinstant) {
  clear_methods();
  if (assertstackemptyorinstant) {
    set_has_assertstackemptyorinstant();
    methods_.assertstackemptyorinstant_ = assertstackemptyorinstant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.AssertStackEmptyOrInstant)
}
inline ::IvionOnline::AssertStackEmptyOrInstant* Method::_internal_mutable_assertstackemptyorinstant() {
  if (!_internal_has_assertstackemptyorinstant()) {
    clear_methods();
    set_has_assertstackemptyorinstant();
    methods_.assertstackemptyorinstant_ = CreateMaybeMessage< ::IvionOnline::AssertStackEmptyOrInstant >(GetArena());
  }
  return methods_.assertstackemptyorinstant_;
}
inline ::IvionOnline::AssertStackEmptyOrInstant* Method::mutable_assertstackemptyorinstant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.AssertStackEmptyOrInstant)
  return _internal_mutable_assertstackemptyorinstant();
}

// .IvionOnline.PayCost PayCost = 7;
inline bool Method::_internal_has_paycost() const {
  return methods_case() == kPayCost;
}
inline bool Method::has_paycost() const {
  return _internal_has_paycost();
}
inline void Method::set_has_paycost() {
  _oneof_case_[0] = kPayCost;
}
inline void Method::clear_paycost() {
  if (_internal_has_paycost()) {
    if (GetArena() == nullptr) {
      delete methods_.paycost_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::PayCost* Method::release_paycost() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.PayCost)
  if (_internal_has_paycost()) {
    clear_has_methods();
      ::IvionOnline::PayCost* temp = methods_.paycost_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.paycost_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::PayCost& Method::_internal_paycost() const {
  return _internal_has_paycost()
      ? *methods_.paycost_
      : reinterpret_cast< ::IvionOnline::PayCost&>(::IvionOnline::_PayCost_default_instance_);
}
inline const ::IvionOnline::PayCost& Method::paycost() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.PayCost)
  return _internal_paycost();
}
inline ::IvionOnline::PayCost* Method::unsafe_arena_release_paycost() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.PayCost)
  if (_internal_has_paycost()) {
    clear_has_methods();
    ::IvionOnline::PayCost* temp = methods_.paycost_;
    methods_.paycost_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_paycost(::IvionOnline::PayCost* paycost) {
  clear_methods();
  if (paycost) {
    set_has_paycost();
    methods_.paycost_ = paycost;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.PayCost)
}
inline ::IvionOnline::PayCost* Method::_internal_mutable_paycost() {
  if (!_internal_has_paycost()) {
    clear_methods();
    set_has_paycost();
    methods_.paycost_ = CreateMaybeMessage< ::IvionOnline::PayCost >(GetArena());
  }
  return methods_.paycost_;
}
inline ::IvionOnline::PayCost* Method::mutable_paycost() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.PayCost)
  return _internal_mutable_paycost();
}

// .IvionOnline.PlayGainResources PlayGainResources = 8;
inline bool Method::_internal_has_playgainresources() const {
  return methods_case() == kPlayGainResources;
}
inline bool Method::has_playgainresources() const {
  return _internal_has_playgainresources();
}
inline void Method::set_has_playgainresources() {
  _oneof_case_[0] = kPlayGainResources;
}
inline void Method::clear_playgainresources() {
  if (_internal_has_playgainresources()) {
    if (GetArena() == nullptr) {
      delete methods_.playgainresources_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::PlayGainResources* Method::release_playgainresources() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.PlayGainResources)
  if (_internal_has_playgainresources()) {
    clear_has_methods();
      ::IvionOnline::PlayGainResources* temp = methods_.playgainresources_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.playgainresources_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::PlayGainResources& Method::_internal_playgainresources() const {
  return _internal_has_playgainresources()
      ? *methods_.playgainresources_
      : reinterpret_cast< ::IvionOnline::PlayGainResources&>(::IvionOnline::_PlayGainResources_default_instance_);
}
inline const ::IvionOnline::PlayGainResources& Method::playgainresources() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.PlayGainResources)
  return _internal_playgainresources();
}
inline ::IvionOnline::PlayGainResources* Method::unsafe_arena_release_playgainresources() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.PlayGainResources)
  if (_internal_has_playgainresources()) {
    clear_has_methods();
    ::IvionOnline::PlayGainResources* temp = methods_.playgainresources_;
    methods_.playgainresources_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_playgainresources(::IvionOnline::PlayGainResources* playgainresources) {
  clear_methods();
  if (playgainresources) {
    set_has_playgainresources();
    methods_.playgainresources_ = playgainresources;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.PlayGainResources)
}
inline ::IvionOnline::PlayGainResources* Method::_internal_mutable_playgainresources() {
  if (!_internal_has_playgainresources()) {
    clear_methods();
    set_has_playgainresources();
    methods_.playgainresources_ = CreateMaybeMessage< ::IvionOnline::PlayGainResources >(GetArena());
  }
  return methods_.playgainresources_;
}
inline ::IvionOnline::PlayGainResources* Method::mutable_playgainresources() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.PlayGainResources)
  return _internal_mutable_playgainresources();
}

// .IvionOnline.RefundCost RefundCost = 9;
inline bool Method::_internal_has_refundcost() const {
  return methods_case() == kRefundCost;
}
inline bool Method::has_refundcost() const {
  return _internal_has_refundcost();
}
inline void Method::set_has_refundcost() {
  _oneof_case_[0] = kRefundCost;
}
inline void Method::clear_refundcost() {
  if (_internal_has_refundcost()) {
    if (GetArena() == nullptr) {
      delete methods_.refundcost_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::RefundCost* Method::release_refundcost() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.RefundCost)
  if (_internal_has_refundcost()) {
    clear_has_methods();
      ::IvionOnline::RefundCost* temp = methods_.refundcost_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.refundcost_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::RefundCost& Method::_internal_refundcost() const {
  return _internal_has_refundcost()
      ? *methods_.refundcost_
      : reinterpret_cast< ::IvionOnline::RefundCost&>(::IvionOnline::_RefundCost_default_instance_);
}
inline const ::IvionOnline::RefundCost& Method::refundcost() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.RefundCost)
  return _internal_refundcost();
}
inline ::IvionOnline::RefundCost* Method::unsafe_arena_release_refundcost() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.RefundCost)
  if (_internal_has_refundcost()) {
    clear_has_methods();
    ::IvionOnline::RefundCost* temp = methods_.refundcost_;
    methods_.refundcost_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_refundcost(::IvionOnline::RefundCost* refundcost) {
  clear_methods();
  if (refundcost) {
    set_has_refundcost();
    methods_.refundcost_ = refundcost;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.RefundCost)
}
inline ::IvionOnline::RefundCost* Method::_internal_mutable_refundcost() {
  if (!_internal_has_refundcost()) {
    clear_methods();
    set_has_refundcost();
    methods_.refundcost_ = CreateMaybeMessage< ::IvionOnline::RefundCost >(GetArena());
  }
  return methods_.refundcost_;
}
inline ::IvionOnline::RefundCost* Method::mutable_refundcost() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.RefundCost)
  return _internal_mutable_refundcost();
}

// .IvionOnline.GainActions GainActions = 10;
inline bool Method::_internal_has_gainactions() const {
  return methods_case() == kGainActions;
}
inline bool Method::has_gainactions() const {
  return _internal_has_gainactions();
}
inline void Method::set_has_gainactions() {
  _oneof_case_[0] = kGainActions;
}
inline void Method::clear_gainactions() {
  if (_internal_has_gainactions()) {
    if (GetArena() == nullptr) {
      delete methods_.gainactions_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::GainActions* Method::release_gainactions() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.GainActions)
  if (_internal_has_gainactions()) {
    clear_has_methods();
      ::IvionOnline::GainActions* temp = methods_.gainactions_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.gainactions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::GainActions& Method::_internal_gainactions() const {
  return _internal_has_gainactions()
      ? *methods_.gainactions_
      : reinterpret_cast< ::IvionOnline::GainActions&>(::IvionOnline::_GainActions_default_instance_);
}
inline const ::IvionOnline::GainActions& Method::gainactions() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.GainActions)
  return _internal_gainactions();
}
inline ::IvionOnline::GainActions* Method::unsafe_arena_release_gainactions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.GainActions)
  if (_internal_has_gainactions()) {
    clear_has_methods();
    ::IvionOnline::GainActions* temp = methods_.gainactions_;
    methods_.gainactions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_gainactions(::IvionOnline::GainActions* gainactions) {
  clear_methods();
  if (gainactions) {
    set_has_gainactions();
    methods_.gainactions_ = gainactions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.GainActions)
}
inline ::IvionOnline::GainActions* Method::_internal_mutable_gainactions() {
  if (!_internal_has_gainactions()) {
    clear_methods();
    set_has_gainactions();
    methods_.gainactions_ = CreateMaybeMessage< ::IvionOnline::GainActions >(GetArena());
  }
  return methods_.gainactions_;
}
inline ::IvionOnline::GainActions* Method::mutable_gainactions() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.GainActions)
  return _internal_mutable_gainactions();
}

// .IvionOnline.GainPower GainPower = 11;
inline bool Method::_internal_has_gainpower() const {
  return methods_case() == kGainPower;
}
inline bool Method::has_gainpower() const {
  return _internal_has_gainpower();
}
inline void Method::set_has_gainpower() {
  _oneof_case_[0] = kGainPower;
}
inline void Method::clear_gainpower() {
  if (_internal_has_gainpower()) {
    if (GetArena() == nullptr) {
      delete methods_.gainpower_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::GainPower* Method::release_gainpower() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.GainPower)
  if (_internal_has_gainpower()) {
    clear_has_methods();
      ::IvionOnline::GainPower* temp = methods_.gainpower_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.gainpower_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::GainPower& Method::_internal_gainpower() const {
  return _internal_has_gainpower()
      ? *methods_.gainpower_
      : reinterpret_cast< ::IvionOnline::GainPower&>(::IvionOnline::_GainPower_default_instance_);
}
inline const ::IvionOnline::GainPower& Method::gainpower() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.GainPower)
  return _internal_gainpower();
}
inline ::IvionOnline::GainPower* Method::unsafe_arena_release_gainpower() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.GainPower)
  if (_internal_has_gainpower()) {
    clear_has_methods();
    ::IvionOnline::GainPower* temp = methods_.gainpower_;
    methods_.gainpower_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_gainpower(::IvionOnline::GainPower* gainpower) {
  clear_methods();
  if (gainpower) {
    set_has_gainpower();
    methods_.gainpower_ = gainpower;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.GainPower)
}
inline ::IvionOnline::GainPower* Method::_internal_mutable_gainpower() {
  if (!_internal_has_gainpower()) {
    clear_methods();
    set_has_gainpower();
    methods_.gainpower_ = CreateMaybeMessage< ::IvionOnline::GainPower >(GetArena());
  }
  return methods_.gainpower_;
}
inline ::IvionOnline::GainPower* Method::mutable_gainpower() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.GainPower)
  return _internal_mutable_gainpower();
}

// .IvionOnline.Move Move = 12;
inline bool Method::_internal_has_move() const {
  return methods_case() == kMove;
}
inline bool Method::has_move() const {
  return _internal_has_move();
}
inline void Method::set_has_move() {
  _oneof_case_[0] = kMove;
}
inline void Method::clear_move() {
  if (_internal_has_move()) {
    if (GetArena() == nullptr) {
      delete methods_.move_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Move* Method::release_move() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Move)
  if (_internal_has_move()) {
    clear_has_methods();
      ::IvionOnline::Move* temp = methods_.move_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Move& Method::_internal_move() const {
  return _internal_has_move()
      ? *methods_.move_
      : reinterpret_cast< ::IvionOnline::Move&>(::IvionOnline::_Move_default_instance_);
}
inline const ::IvionOnline::Move& Method::move() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Move)
  return _internal_move();
}
inline ::IvionOnline::Move* Method::unsafe_arena_release_move() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Move)
  if (_internal_has_move()) {
    clear_has_methods();
    ::IvionOnline::Move* temp = methods_.move_;
    methods_.move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_move(::IvionOnline::Move* move) {
  clear_methods();
  if (move) {
    set_has_move();
    methods_.move_ = move;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Move)
}
inline ::IvionOnline::Move* Method::_internal_mutable_move() {
  if (!_internal_has_move()) {
    clear_methods();
    set_has_move();
    methods_.move_ = CreateMaybeMessage< ::IvionOnline::Move >(GetArena());
  }
  return methods_.move_;
}
inline ::IvionOnline::Move* Method::mutable_move() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Move)
  return _internal_mutable_move();
}

// .IvionOnline.Travel Travel = 13;
inline bool Method::_internal_has_travel() const {
  return methods_case() == kTravel;
}
inline bool Method::has_travel() const {
  return _internal_has_travel();
}
inline void Method::set_has_travel() {
  _oneof_case_[0] = kTravel;
}
inline void Method::clear_travel() {
  if (_internal_has_travel()) {
    if (GetArena() == nullptr) {
      delete methods_.travel_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Travel* Method::release_travel() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Travel)
  if (_internal_has_travel()) {
    clear_has_methods();
      ::IvionOnline::Travel* temp = methods_.travel_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.travel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Travel& Method::_internal_travel() const {
  return _internal_has_travel()
      ? *methods_.travel_
      : reinterpret_cast< ::IvionOnline::Travel&>(::IvionOnline::_Travel_default_instance_);
}
inline const ::IvionOnline::Travel& Method::travel() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Travel)
  return _internal_travel();
}
inline ::IvionOnline::Travel* Method::unsafe_arena_release_travel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Travel)
  if (_internal_has_travel()) {
    clear_has_methods();
    ::IvionOnline::Travel* temp = methods_.travel_;
    methods_.travel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_travel(::IvionOnline::Travel* travel) {
  clear_methods();
  if (travel) {
    set_has_travel();
    methods_.travel_ = travel;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Travel)
}
inline ::IvionOnline::Travel* Method::_internal_mutable_travel() {
  if (!_internal_has_travel()) {
    clear_methods();
    set_has_travel();
    methods_.travel_ = CreateMaybeMessage< ::IvionOnline::Travel >(GetArena());
  }
  return methods_.travel_;
}
inline ::IvionOnline::Travel* Method::mutable_travel() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Travel)
  return _internal_mutable_travel();
}

// .IvionOnline.Damage Damage = 14;
inline bool Method::_internal_has_damage() const {
  return methods_case() == kDamage;
}
inline bool Method::has_damage() const {
  return _internal_has_damage();
}
inline void Method::set_has_damage() {
  _oneof_case_[0] = kDamage;
}
inline void Method::clear_damage() {
  if (_internal_has_damage()) {
    if (GetArena() == nullptr) {
      delete methods_.damage_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Damage* Method::release_damage() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Damage)
  if (_internal_has_damage()) {
    clear_has_methods();
      ::IvionOnline::Damage* temp = methods_.damage_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.damage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Damage& Method::_internal_damage() const {
  return _internal_has_damage()
      ? *methods_.damage_
      : reinterpret_cast< ::IvionOnline::Damage&>(::IvionOnline::_Damage_default_instance_);
}
inline const ::IvionOnline::Damage& Method::damage() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Damage)
  return _internal_damage();
}
inline ::IvionOnline::Damage* Method::unsafe_arena_release_damage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Damage)
  if (_internal_has_damage()) {
    clear_has_methods();
    ::IvionOnline::Damage* temp = methods_.damage_;
    methods_.damage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_damage(::IvionOnline::Damage* damage) {
  clear_methods();
  if (damage) {
    set_has_damage();
    methods_.damage_ = damage;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Damage)
}
inline ::IvionOnline::Damage* Method::_internal_mutable_damage() {
  if (!_internal_has_damage()) {
    clear_methods();
    set_has_damage();
    methods_.damage_ = CreateMaybeMessage< ::IvionOnline::Damage >(GetArena());
  }
  return methods_.damage_;
}
inline ::IvionOnline::Damage* Method::mutable_damage() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Damage)
  return _internal_mutable_damage();
}

// .IvionOnline.Boolean_Constant Boolean_Constant = 15;
inline bool Method::_internal_has_boolean_constant() const {
  return methods_case() == kBooleanConstant;
}
inline bool Method::has_boolean_constant() const {
  return _internal_has_boolean_constant();
}
inline void Method::set_has_boolean_constant() {
  _oneof_case_[0] = kBooleanConstant;
}
inline void Method::clear_boolean_constant() {
  if (_internal_has_boolean_constant()) {
    if (GetArena() == nullptr) {
      delete methods_.boolean_constant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Boolean_Constant* Method::release_boolean_constant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Boolean_Constant)
  if (_internal_has_boolean_constant()) {
    clear_has_methods();
      ::IvionOnline::Boolean_Constant* temp = methods_.boolean_constant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.boolean_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Boolean_Constant& Method::_internal_boolean_constant() const {
  return _internal_has_boolean_constant()
      ? *methods_.boolean_constant_
      : reinterpret_cast< ::IvionOnline::Boolean_Constant&>(::IvionOnline::_Boolean_Constant_default_instance_);
}
inline const ::IvionOnline::Boolean_Constant& Method::boolean_constant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Boolean_Constant)
  return _internal_boolean_constant();
}
inline ::IvionOnline::Boolean_Constant* Method::unsafe_arena_release_boolean_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Boolean_Constant)
  if (_internal_has_boolean_constant()) {
    clear_has_methods();
    ::IvionOnline::Boolean_Constant* temp = methods_.boolean_constant_;
    methods_.boolean_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_boolean_constant(::IvionOnline::Boolean_Constant* boolean_constant) {
  clear_methods();
  if (boolean_constant) {
    set_has_boolean_constant();
    methods_.boolean_constant_ = boolean_constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Boolean_Constant)
}
inline ::IvionOnline::Boolean_Constant* Method::_internal_mutable_boolean_constant() {
  if (!_internal_has_boolean_constant()) {
    clear_methods();
    set_has_boolean_constant();
    methods_.boolean_constant_ = CreateMaybeMessage< ::IvionOnline::Boolean_Constant >(GetArena());
  }
  return methods_.boolean_constant_;
}
inline ::IvionOnline::Boolean_Constant* Method::mutable_boolean_constant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Boolean_Constant)
  return _internal_mutable_boolean_constant();
}

// .IvionOnline.Integer_Constant Integer_Constant = 16;
inline bool Method::_internal_has_integer_constant() const {
  return methods_case() == kIntegerConstant;
}
inline bool Method::has_integer_constant() const {
  return _internal_has_integer_constant();
}
inline void Method::set_has_integer_constant() {
  _oneof_case_[0] = kIntegerConstant;
}
inline void Method::clear_integer_constant() {
  if (_internal_has_integer_constant()) {
    if (GetArena() == nullptr) {
      delete methods_.integer_constant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Integer_Constant* Method::release_integer_constant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Integer_Constant)
  if (_internal_has_integer_constant()) {
    clear_has_methods();
      ::IvionOnline::Integer_Constant* temp = methods_.integer_constant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.integer_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Integer_Constant& Method::_internal_integer_constant() const {
  return _internal_has_integer_constant()
      ? *methods_.integer_constant_
      : reinterpret_cast< ::IvionOnline::Integer_Constant&>(::IvionOnline::_Integer_Constant_default_instance_);
}
inline const ::IvionOnline::Integer_Constant& Method::integer_constant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Integer_Constant)
  return _internal_integer_constant();
}
inline ::IvionOnline::Integer_Constant* Method::unsafe_arena_release_integer_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Integer_Constant)
  if (_internal_has_integer_constant()) {
    clear_has_methods();
    ::IvionOnline::Integer_Constant* temp = methods_.integer_constant_;
    methods_.integer_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_integer_constant(::IvionOnline::Integer_Constant* integer_constant) {
  clear_methods();
  if (integer_constant) {
    set_has_integer_constant();
    methods_.integer_constant_ = integer_constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Integer_Constant)
}
inline ::IvionOnline::Integer_Constant* Method::_internal_mutable_integer_constant() {
  if (!_internal_has_integer_constant()) {
    clear_methods();
    set_has_integer_constant();
    methods_.integer_constant_ = CreateMaybeMessage< ::IvionOnline::Integer_Constant >(GetArena());
  }
  return methods_.integer_constant_;
}
inline ::IvionOnline::Integer_Constant* Method::mutable_integer_constant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Integer_Constant)
  return _internal_mutable_integer_constant();
}

// .IvionOnline.Vec2i_Constant Vec2i_Constant = 17;
inline bool Method::_internal_has_vec2i_constant() const {
  return methods_case() == kVec2IConstant;
}
inline bool Method::has_vec2i_constant() const {
  return _internal_has_vec2i_constant();
}
inline void Method::set_has_vec2i_constant() {
  _oneof_case_[0] = kVec2IConstant;
}
inline void Method::clear_vec2i_constant() {
  if (_internal_has_vec2i_constant()) {
    if (GetArena() == nullptr) {
      delete methods_.vec2i_constant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Vec2i_Constant* Method::release_vec2i_constant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Vec2i_Constant)
  if (_internal_has_vec2i_constant()) {
    clear_has_methods();
      ::IvionOnline::Vec2i_Constant* temp = methods_.vec2i_constant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.vec2i_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Vec2i_Constant& Method::_internal_vec2i_constant() const {
  return _internal_has_vec2i_constant()
      ? *methods_.vec2i_constant_
      : reinterpret_cast< ::IvionOnline::Vec2i_Constant&>(::IvionOnline::_Vec2i_Constant_default_instance_);
}
inline const ::IvionOnline::Vec2i_Constant& Method::vec2i_constant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Vec2i_Constant)
  return _internal_vec2i_constant();
}
inline ::IvionOnline::Vec2i_Constant* Method::unsafe_arena_release_vec2i_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Vec2i_Constant)
  if (_internal_has_vec2i_constant()) {
    clear_has_methods();
    ::IvionOnline::Vec2i_Constant* temp = methods_.vec2i_constant_;
    methods_.vec2i_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_vec2i_constant(::IvionOnline::Vec2i_Constant* vec2i_constant) {
  clear_methods();
  if (vec2i_constant) {
    set_has_vec2i_constant();
    methods_.vec2i_constant_ = vec2i_constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Vec2i_Constant)
}
inline ::IvionOnline::Vec2i_Constant* Method::_internal_mutable_vec2i_constant() {
  if (!_internal_has_vec2i_constant()) {
    clear_methods();
    set_has_vec2i_constant();
    methods_.vec2i_constant_ = CreateMaybeMessage< ::IvionOnline::Vec2i_Constant >(GetArena());
  }
  return methods_.vec2i_constant_;
}
inline ::IvionOnline::Vec2i_Constant* Method::mutable_vec2i_constant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Vec2i_Constant)
  return _internal_mutable_vec2i_constant();
}

// .IvionOnline.Terrain_Constant Terrain_Constant = 18;
inline bool Method::_internal_has_terrain_constant() const {
  return methods_case() == kTerrainConstant;
}
inline bool Method::has_terrain_constant() const {
  return _internal_has_terrain_constant();
}
inline void Method::set_has_terrain_constant() {
  _oneof_case_[0] = kTerrainConstant;
}
inline void Method::clear_terrain_constant() {
  if (_internal_has_terrain_constant()) {
    if (GetArena() == nullptr) {
      delete methods_.terrain_constant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Terrain_Constant* Method::release_terrain_constant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Terrain_Constant)
  if (_internal_has_terrain_constant()) {
    clear_has_methods();
      ::IvionOnline::Terrain_Constant* temp = methods_.terrain_constant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.terrain_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Terrain_Constant& Method::_internal_terrain_constant() const {
  return _internal_has_terrain_constant()
      ? *methods_.terrain_constant_
      : reinterpret_cast< ::IvionOnline::Terrain_Constant&>(::IvionOnline::_Terrain_Constant_default_instance_);
}
inline const ::IvionOnline::Terrain_Constant& Method::terrain_constant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Terrain_Constant)
  return _internal_terrain_constant();
}
inline ::IvionOnline::Terrain_Constant* Method::unsafe_arena_release_terrain_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Terrain_Constant)
  if (_internal_has_terrain_constant()) {
    clear_has_methods();
    ::IvionOnline::Terrain_Constant* temp = methods_.terrain_constant_;
    methods_.terrain_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_terrain_constant(::IvionOnline::Terrain_Constant* terrain_constant) {
  clear_methods();
  if (terrain_constant) {
    set_has_terrain_constant();
    methods_.terrain_constant_ = terrain_constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Terrain_Constant)
}
inline ::IvionOnline::Terrain_Constant* Method::_internal_mutable_terrain_constant() {
  if (!_internal_has_terrain_constant()) {
    clear_methods();
    set_has_terrain_constant();
    methods_.terrain_constant_ = CreateMaybeMessage< ::IvionOnline::Terrain_Constant >(GetArena());
  }
  return methods_.terrain_constant_;
}
inline ::IvionOnline::Terrain_Constant* Method::mutable_terrain_constant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Terrain_Constant)
  return _internal_mutable_terrain_constant();
}

// .IvionOnline.Color_Constant Color_Constant = 19;
inline bool Method::_internal_has_color_constant() const {
  return methods_case() == kColorConstant;
}
inline bool Method::has_color_constant() const {
  return _internal_has_color_constant();
}
inline void Method::set_has_color_constant() {
  _oneof_case_[0] = kColorConstant;
}
inline void Method::clear_color_constant() {
  if (_internal_has_color_constant()) {
    if (GetArena() == nullptr) {
      delete methods_.color_constant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::Color_Constant* Method::release_color_constant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.Color_Constant)
  if (_internal_has_color_constant()) {
    clear_has_methods();
      ::IvionOnline::Color_Constant* temp = methods_.color_constant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.color_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::Color_Constant& Method::_internal_color_constant() const {
  return _internal_has_color_constant()
      ? *methods_.color_constant_
      : reinterpret_cast< ::IvionOnline::Color_Constant&>(::IvionOnline::_Color_Constant_default_instance_);
}
inline const ::IvionOnline::Color_Constant& Method::color_constant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.Color_Constant)
  return _internal_color_constant();
}
inline ::IvionOnline::Color_Constant* Method::unsafe_arena_release_color_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.Color_Constant)
  if (_internal_has_color_constant()) {
    clear_has_methods();
    ::IvionOnline::Color_Constant* temp = methods_.color_constant_;
    methods_.color_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_color_constant(::IvionOnline::Color_Constant* color_constant) {
  clear_methods();
  if (color_constant) {
    set_has_color_constant();
    methods_.color_constant_ = color_constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.Color_Constant)
}
inline ::IvionOnline::Color_Constant* Method::_internal_mutable_color_constant() {
  if (!_internal_has_color_constant()) {
    clear_methods();
    set_has_color_constant();
    methods_.color_constant_ = CreateMaybeMessage< ::IvionOnline::Color_Constant >(GetArena());
  }
  return methods_.color_constant_;
}
inline ::IvionOnline::Color_Constant* Method::mutable_color_constant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.Color_Constant)
  return _internal_mutable_color_constant();
}

// .IvionOnline.ObjectPath_Constant ObjectPath_Constant = 20;
inline bool Method::_internal_has_objectpath_constant() const {
  return methods_case() == kObjectPathConstant;
}
inline bool Method::has_objectpath_constant() const {
  return _internal_has_objectpath_constant();
}
inline void Method::set_has_objectpath_constant() {
  _oneof_case_[0] = kObjectPathConstant;
}
inline void Method::clear_objectpath_constant() {
  if (_internal_has_objectpath_constant()) {
    if (GetArena() == nullptr) {
      delete methods_.objectpath_constant_;
    }
    clear_has_methods();
  }
}
inline ::IvionOnline::ObjectPath_Constant* Method::release_objectpath_constant() {
  // @@protoc_insertion_point(field_release:IvionOnline.Method.ObjectPath_Constant)
  if (_internal_has_objectpath_constant()) {
    clear_has_methods();
      ::IvionOnline::ObjectPath_Constant* temp = methods_.objectpath_constant_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    methods_.objectpath_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::IvionOnline::ObjectPath_Constant& Method::_internal_objectpath_constant() const {
  return _internal_has_objectpath_constant()
      ? *methods_.objectpath_constant_
      : reinterpret_cast< ::IvionOnline::ObjectPath_Constant&>(::IvionOnline::_ObjectPath_Constant_default_instance_);
}
inline const ::IvionOnline::ObjectPath_Constant& Method::objectpath_constant() const {
  // @@protoc_insertion_point(field_get:IvionOnline.Method.ObjectPath_Constant)
  return _internal_objectpath_constant();
}
inline ::IvionOnline::ObjectPath_Constant* Method::unsafe_arena_release_objectpath_constant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:IvionOnline.Method.ObjectPath_Constant)
  if (_internal_has_objectpath_constant()) {
    clear_has_methods();
    ::IvionOnline::ObjectPath_Constant* temp = methods_.objectpath_constant_;
    methods_.objectpath_constant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Method::unsafe_arena_set_allocated_objectpath_constant(::IvionOnline::ObjectPath_Constant* objectpath_constant) {
  clear_methods();
  if (objectpath_constant) {
    set_has_objectpath_constant();
    methods_.objectpath_constant_ = objectpath_constant;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:IvionOnline.Method.ObjectPath_Constant)
}
inline ::IvionOnline::ObjectPath_Constant* Method::_internal_mutable_objectpath_constant() {
  if (!_internal_has_objectpath_constant()) {
    clear_methods();
    set_has_objectpath_constant();
    methods_.objectpath_constant_ = CreateMaybeMessage< ::IvionOnline::ObjectPath_Constant >(GetArena());
  }
  return methods_.objectpath_constant_;
}
inline ::IvionOnline::ObjectPath_Constant* Method::mutable_objectpath_constant() {
  // @@protoc_insertion_point(field_mutable:IvionOnline.Method.ObjectPath_Constant)
  return _internal_mutable_objectpath_constant();
}

inline bool Method::has_methods() const {
  return methods_case() != METHODS_NOT_SET;
}
inline void Method::clear_has_methods() {
  _oneof_case_[0] = METHODS_NOT_SET;
}
inline Method::MethodsCase Method::methods_case() const {
  return Method::MethodsCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// List_Method

// repeated .IvionOnline.Method element = 1;
inline int List_Method::_internal_element_size() const {
  return element_.size();
}
inline int List_Method::element_size() const {
  return _internal_element_size();
}
inline void List_Method::clear_element() {
  element_.Clear();
}
inline ::IvionOnline::Method* List_Method::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:IvionOnline.List_Method.element)
  return element_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Method >*
List_Method::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:IvionOnline.List_Method.element)
  return &element_;
}
inline const ::IvionOnline::Method& List_Method::_internal_element(int index) const {
  return element_.Get(index);
}
inline const ::IvionOnline::Method& List_Method::element(int index) const {
  // @@protoc_insertion_point(field_get:IvionOnline.List_Method.element)
  return _internal_element(index);
}
inline ::IvionOnline::Method* List_Method::_internal_add_element() {
  return element_.Add();
}
inline ::IvionOnline::Method* List_Method::add_element() {
  // @@protoc_insertion_point(field_add:IvionOnline.List_Method.element)
  return _internal_add_element();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::IvionOnline::Method >&
List_Method::element() const {
  // @@protoc_insertion_point(field_list:IvionOnline.List_Method.element)
  return element_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IvionOnline

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::IvionOnline::Terrain_Terrain_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IvionOnline::Terrain_Terrain_Type>() {
  return ::IvionOnline::Terrain_Terrain_Type_descriptor();
}
template <> struct is_proto_enum< ::IvionOnline::Color_Color_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IvionOnline::Color_Color_Type>() {
  return ::IvionOnline::Color_Color_Type_descriptor();
}
template <> struct is_proto_enum< ::IvionOnline::ObjectType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IvionOnline::ObjectType>() {
  return ::IvionOnline::ObjectType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_GameState_2eproto
