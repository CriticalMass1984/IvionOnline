parser grammar IvionParser;
options { tokenVocab = IvionLexer; }

//////////////////////////////////////////////////////////////////////////// PLAYER


playerType: Player | Enemy;
playerPreFix: Another | Controlled | Uncontrolled;
playerPostFix
    : In Terrain 
    | Near Terrain 
    | Near CARD_NAME 
    | In CARD_NAME 
    | In tile
    | At Least literalValue Tile Away
    ;

playerFilter: playerPreFix* playerType playerPostFix*;

currentPlayer: Yourself | You | Your;
targetPlayer: Another? Target playerFilter;
previousPlayer
    : Them
    | They
    | That playerType
    | Their
    ;
previousCardsController
    : previousCard Controller
    | Its Controller
    ;
singlePlayer
    : targetPlayer
    | previousPlayer
    | currentPlayer
    | previousCardsController
    ;
multiPlayer
    : UpToFlag=upToFlag? literalValue targetPlayer
    ;
allPlayers
    : (Each | All) Other? playerFilter
    ;

////
player
    : singlePlayer
    | multiPlayer
    | allPlayers
    ;

hypotheticalPlayer
    : A? playerFilter
    | player
    ;

//////////////////////////////////////////////////////////////////////////// CARD

cardPrefix
    : Enemy
    | Attached
    | Non? Ability
    | Non? Attack
    | Revealed
    ;
cardPostfix
    : In Terrain
    | Near Terrain
    | Near hypotheticalPlayer
    | Near hypotheticalTile
    | In hypotheticalTile
    | Targeting hypotheticalPlayer
    | With A Resource Cost Of literalValue Or Less
    | Attached To hypotheticalPlayer
    | Attached To hypotheticalTile
    | Controlled By hypotheticalPlayer
    ;
cardFilter
    : cardPrefix* Card cardPostfix*
    ;
cardName: CARD_NAME;
bottomCard: The Bottom Card Of hypotheticalPlayer Deck;
previousCard
    : That Card
    | The Card
    ;
targetCard: Target cardFilter;
singleCard
    : cardName
    | targetCard
    | bottomCard
    | previousCard
    ;
allCards
    : All cardFilter
    ;
multiCard
    : UpToFlag=upToFlag? literalValue targetCard
    ;
////
card
    : singleCard
    | allCards
    | multiCard
    ;

hypotheticalCard
    : A? cardFilter
    | card
    ;

//////////////////////////////////////////////////////////////////////////// TILE

tilePreFix
    : Non? Empty
    ;
tilePostFix
    : With Terrain 
    | Near Terrain 
    | Near hypotheticalPlayer
    | Near card
    | At Least literalValue Tile Away
    | At Least literalValue Tile Away From hypotheticalPlayer
    | That Already Had Terrain
    ;

tileFilter
    : tilePreFix* Tile tilePostFix*
    ;

targetTile: Another? literalValue? Target tileFilter;

previousTile
    : That Tile
    | The Tile
    ;
theNearestTile
    : The Nearest tileFilter Next To (hypotheticalPlayer | hypotheticalCard)
    ;
playersTile
    : The Tile player (Are | Is) In
    ;
cardsTile
    : This Tile
    ;
singleTile
    : targetTile
    | previousTile
    | theNearestTile
    | playersTile
    | cardsTile
    ;

multiTile
    : UpToFlag=upToFlag? literalValue targetTile
    ;

allTiles
    : (Each | All) tileFilter
    ;

////

tile
    : singleTile
    | allTiles
    | multiTile
    ;
hypotheticalTile
    : A? tileFilter
    | tile
    ;

//////////////////////////////////////////////////////////////////////////// EFFECTS


disarmPlayer
	: Disarm literalValue player
	| Disarm literalValue
	;

silencePlayer
	: Silence literalValue player
	| Silence literalValue
	;

slowPlayer
	: Slow literalValue player
	| Slow literalValue
	;

controlPlayer
	: Apply literalValue More Instances Of A Control Type Of Your Choice To player
	| Apply A Instance Of A Control Type Of Your Choice To player
	| Increase The Value Of A Control Type Already Affecting player By literalValue
	;

awayFlag
    : Away From player
    ;
upToFlag: Up To;
travelDistance
    : Travel TargetPlayer=player? UpToFlag=upToFlag? Another? literalValue Tile Awayflag=awayFlag?
    ;

travelPlayer
	: Travel TargetPlayer=player? To (TargetTile=tile | TargetCard=card)
	;

destroyCard
	: Destroy card
	;

dealDamage
	: Deal literalValue Damage To player
	| Deal Damage To player Equal To gameStateValue
	| Deal literalValue Damage To player Plus Damage Equal To gameStateValue
	| Deal literalValue Damage To
	| Deal Damage To player
	| Deal literalValue More Damage To player
	| Deal literalValue Damage To player Plus literalValue More Damage For Each Revealed Card In Their Hand
	| Deal Damage To player Equal To literalValue
	;

counterCard
	: Counter card
	;

attachCard
	: Attach To player
	| Attach To tile 
	| Attach To tile Until End Of Turn
	| Attach To player Until turnTrigger
	| Attach CARD_NAME To player
	;

gainPower
	: They Gain literalValue POWER
	| Gain literalValue More POWER
	| Gain literalValue Additional POWER
	| Gain literalValue POWER
	| Gain literalValue More POWER
	;

gainAction
	: They Gain literalValue ACTION
	| Gain literalValue More ACTION
	| Gain literalValue Additional ACTION
	| Gain literalValue ACTION
	| Gain literalValue More ACTION
	;

gainInitiative
	: Gain INITIATIVE+
	| They Gain INITIATIVE+
	| Gain Another INITIATIVE+
	;

gainMitigate
	: player Gains Mitigate literalValue
	| Gain Mitigate literalValue
	;

loseMitigate
	: Lose Your Mitigate
	;

useSecondWind
	: Use Your Second Wind
	;

returnCard
	: Return Target Attached Card To Its Owners Hand
	| Return Target Card With A Resource Cost Of literalValue Or Less From Your Discard To Your Hand
	| Return Target Ability Card From Your Discard To Your Hand
	| Return A Attack Card With A Resource Cost Of literalValue Or Less From Your Discard To Your Hand
	| Return A Card From Your Discard To Your Hand
	| Return Target Card From Your Discard To Your Hand
	| Return CARD_NAME To Your Hand
	| Return It From Your Discard To Your Hand
	| Return Target Card With A Resource Cost Of literalValue Or More From Your Discard To Your Hand
	;

putBottomCardOfDeckIntoHand
	: Put hypotheticalCard Into Your Hand
	;

triggerDurationEffects
	: Trigger Your Duration Effects As Though Your Turn Had Just Ended
	;

playCard
	: Play A Card
	| Play A Card For literalValue Less Resource
	| Play A Card For Free
	| Play That Card For Free
	| Play Target Non Attack Card From Your Discard Targeting hypotheticalPlayer For Free
	| Play A Attack Card Targeting hypotheticalPlayer
	| Play A Ability Card From Your Discard Targeting player
	| Play A Attack Card Targeting player For literalValue Less Resource
	| Play A Card With Frenzy For literalValue Less Resource
	| Play A Card Targeting player
	| Play Cursed Dagger For Free P This Doesnt Count Towards Your Cursed Dagger Limit Per Turn
	| Play Runic Slaughter Targeting player For Free P This Doesnt Count Towards Your Runic Slaughter Limit Per Turn
	| Play A Card For literalValue Less Resource
	| Play A Non Attack Card Targeting hypotheticalPlayer
	| Play A Ability Card Targeting player For literalValue Less Resource
	;

discardCards
	: Discard literalValue Card
	| Discard A Card
	| Discard A Revealed Card Of player Choice
	| player Discard literalValue Card
	| player Discard A Card
	| player Discards Target Revealed Card
	| player Discards literalValue Card
	| player Discards A Revealed Card Of player Choice
	| Discard A Revealed Card
	;

gainsHeroic
	: That Card Gains Heroic
	;

healPlayer
	: Heal player literalValue HP
	| Heal player literalValue HP
	| Heal player literalValue HP
	| Heal player HP Equal To The Number Of hypotheticalCard In Their Hand
	;

stunPlayer
	: Stun player
	;

revealCards
	: player Reveals literalValue Card From Their Hand
	| They Reveal literalValue Card From Their Hand
	| They Reveal A Card From Their Hand
	| player Reveals A Card From Their Hand
	| player Reveals literalValue Card From Their Hand
	| player Reveals A Card From Their Hand
	| Reveal CARD_NAME
	| Reveal A Card From Your Hand
    | Reveals A Card From Their Hand
	;



drawCards
	: Draw A Card
	| Draw literalValue Card
	| Draw A Additional Card
	| player Draw literalValue Card
	| player Draw literalValue Card
	| player Draw A Card
	;

removeControl
	: Remove Up To literalValue Instances Of Control From player
	| Remove All Control Affecting player
    | Remove A Instance Of Control From player
	;

hardcastEffect
	: Hardcast
	;

seekEffect
	: Seek
	;

makeTerrain
	: Make tile Difficult Terrain
	;

removeTerrain
	: Remove Target Terrain Token
	;

spendResources
	: Spend literalValue Resource
	;

scryEffect
	: Look At The Top literalValue Card Of Your Deck P Put Any Number On The Bottom And The Rest On Top In Any Order
	;

overrideFrenzy
	: That Card Has Frenzy Even If No Player Has Used Their Second Wind
	;

increaseCardDuration
	: Increase The Duration Of A Card You Control By literalValue
	;

resetUseOfCard
	: Reset The Use Of CARD_NAME
	;

heroic: Heroic;

//////////////////////////////////////////////////////////////////////////// PASSIVE EFFECTS


onlyPlayCertainCards
	: hypotheticalPlayer May Only Play Card Named CARD_NAME
	| Only Play CARD_NAME If hypotheticalPlayer (Have | Has) Resolve A Attack Card This Turn
	| Only Play CARD_NAME If hypotheticalPlayer (Is | Are) Controlled
	| Only Play CARD_NAME If hypotheticalPlayer (Is | Are) Uncontrolled
	| Only Play CARD_NAME If hypotheticalPlayer (Is | Are) Near Terrain
	| Only Play CARD_NAME If hypotheticalPlayer (Have | Has) At Least literalValue Card In Your Discard
	| Only Play CARD_NAME If hypotheticalPlayer (Have | Has) Taken literalValue Or More Damage This Turn
	;

costReduction
	: Attack Card hypotheticalPlayer Play Cost literalValue Less Resource
    | The Second Attack Card hypotheticalPlayer Play During Your Turn Cost literalValue Less Resource
	;

rangeSet
	: The Range Of Your Attack Card Is literalValue
	;

cantPlayCards
	: hypotheticalPlayer Cant Play Card
	;

playerCantBeTargeted
	: hypotheticalPlayer Cant Be Targeted By Enemies
	| hypotheticalPlayer Cant Be Targeted By Card
	;

increasedHandSize
    : Your Maximum Hand Size Is Increased By literalValue
    ;

increasedMaxHP
    : Your Maximum HP Is Increased By literalValue
    ;

replacesSecondWind
    : CARD_NAME Replaces Your Second Wind
    ;

noInitiative
    : hypotheticalPlayer Dont Gain INITIATIVE At The Start Of Your Turn
    ;
    
drawRange
	: All Of hypotheticalPlayer Card C Except Travel Card That Target A Tile C Also Draw Range From CARD_NAME
	| All Of hypotheticalPlayer Card C Except Travel Card That Target A Tile C Also Draw Range From hypotheticalTile
	;

gainRange
	: All Of hypotheticalPlayer Card C Except Travel Card That Target A Tile C Gain literalValue Range
    ;

limitTargets
    : Only Target Other hypotheticalPlayer condition
    ;

passiveEffect
    : playerCantBeTargeted
    | cantPlayCards
    | rangeSet
    | costReduction
    | onlyPlayCertainCards
    | increasedHandSize
    | increasedMaxHP
    | replacesSecondWind
    | noInitiative
    | drawRange
    | gainRange
    | limitTargets
    ;

//////////////////////////////////////////////////////////////////////////// PASSIVE TRIGGERS


durationEffect
	: Duration 
	;

turnTrigger
	: The Start Of hypotheticalPlayer Turn
	| The End Of hypotheticalPlayer Turn
	| The Start Of hypotheticalPlayer Turn
    | End Of Turn
	| The Start Of hypotheticalPlayer Next Turn
	| The End Of The Turn
	| The End Of Turn
	;

gameStartTrigger
	: At The Start Of The Game
	;


afterEffectTrigger
	: After hypotheticalPlayer Resolve A Ability Card Targeting player
	| After hypotheticalPlayer Draw A Card
	| After hypotheticalPlayer Resolve Your First Ability Card During Your Turn
	| After hypotheticalPlayer Make Terrain In hypotheticalTile
	| After hypotheticalPlayer Enters hypotheticalTile
	| After hypotheticalPlayer Enters CARD_NAME
	| After hypotheticalPlayer Enters tile
	| After hypotheticalPlayer Or A Ally Enters CARD_NAME
	| After That Card Resolves
	| After A Attack Card Targeting hypotheticalPlayer Resolves For The First Time During Each Turn
	| After hypotheticalPlayer Resolve Your First Attack Card Targeting hypotheticalPlayer During Your Turn
	| After Any Player Enters This Tile
	| After hypotheticalPlayer Play A Card
	| After hypotheticalPlayer Play Your Second Attack Card During Your Turn
	| After A Resource Is Removed In This Way
	| After hypotheticalPlayer Attach Another Card To player
	| After They Resolve Their First Card During Their Turn
	| After A Attack Card Targeting hypotheticalPlayer Resolves
	| After CARD_NAME Is Revealed
	| After hypotheticalPlayer Resolve Your First Attack Card During Your Turn
	| After hypotheticalPlayer Resolve Your First Attack Card Targeting player During Your Turn
	| After hypotheticalPlayer Stun hypotheticalPlayer
	| After CARD_NAME Is Sent To Your Discard
	| After hypotheticalPlayer Second Wind
	| After hypotheticalPlayer Play CARD_NAME
    | After A Card With Hardcast hypotheticalPlayer Played Fails To Resolve
    | After hypotheticalPlayer Slow hypotheticalPlayer For The First Time During Your Turn
    | After hypotheticalPlayer Slow hypotheticalPlayer
	;

afterControlled
    : After They Receive Control C effect For Each Instance Of Control They Receive
    ;


triggerEffect
    : At turnTrigger C effect
	| afterEffectTrigger C effect
    | durationEffect D effect
    | afterControlled
    | gameStartTrigger C effect
	;

//////////////////////////////////////////////////////////////////////////// replacement Trigger

ifWouldRecieveControl
    : If hypotheticalPlayer Would Receive Control C Instead They Receive The Control
    ;

ifWouldTakeDamage
    : If hypotheticalPlayer Would Take Damage For The First Time During Each Turn C Instead Take literalValue Less Damage P This May Not Reduce Damage Taken Below literalValue
    ;

ifWouldHeal
    : If hypotheticalPlayer Would Heal player Or Another Player HP C Instead Deal That Much Damage To player
    ;


replacementTriggerEffect
	: ifWouldRecieveControl
    | ifWouldTakeDamage
    | ifWouldHeal
	;

////////////////////////////////////////////////////////////////////////////


ifPlayerMakesChoice
	: If They Do
	| If They Dont
    | If You Do
    | If You Dont
	;

ifPreviousActionInvalid
	: If They Cant
	| If You Cant
	;

ifResolvedCard
	: If player (Have | Has)? Resolved Another Ability Card This Turn
	| If player (Have | Has)? Resolved A Attack Card This Turn
	;

ifUsedSecondWind
	: If player (Have | Has)? Already Used Your Second Wind
	;

ifNear
	: If player Are Near CARD_NAME
	| If player Are Near Terrain
	;

ifControlled
	: If player Are Controlled
	;

ifPlayed
	: If player (Have | Has)? Played A Attack Card This Turn
	;

ifTileHadTerrain
	: If That Tile Already Had Terrain
	;

ifCardRevealed
	: If player (Have | Has) At Least literalValue Revealed Card In Your Hand
	;

ifPlayerHasMitigate
	: If player (Have | Has) Mitigate
	;

ifPlayerDidntLeaveTile
	: If player Didnt Leave A Tile This Turn
	;

ifCardCostReduced
    : If Its Cost Is Reduced
    ;

ifPlayerHasMoreHP
    : If player (Have | Has) More HP Than player
    ;

ifPlayerHasNoActions
    : If player (Have | Has) No Resource
    ;

ifPlayerInTerrain
    : If player Are In Terrain
    ;

counterCardCondition
	: If hypotheticalCard Is Countered
	;

stunPlayerCondition
	: If A Resource Is Removed This Way
	;
revealCardsCondition
    : If hypotheticalCard Is Revealed This Way
    ;

condition
	: ifPlayerMakesChoice
	| ifPreviousActionInvalid
	| ifResolvedCard
	| ifUsedSecondWind
	| ifNear
	| ifControlled
	| ifPlayed
	| ifTileHadTerrain
	| ifCardRevealed
	| ifPlayerHasMitigate
    | ifPlayerDidntLeaveTile
    | ifCardCostReduced
    | ifPlayerHasMoreHP
    | ifPlayerHasNoActions
    | ifPlayerInTerrain
    | revealCardsCondition
    | stunPlayerCondition
    | counterCardCondition
	;

//////////////////////////////////////////////////////////////////////////// OMNI PRESENT EFFECTS


cardCantBeTargeted
	: CARD_NAME Cant Be Targeted By Card
	;

whileEffect
	: While CARD_NAME Is Revealed In Your Hand C passiveEffect
	;

primaryCostReduction
	: CARD_NAME Cost literalValue Less POWER For Each Other Revealed Card In Your Hand
	;

onlyPlayIf
	: Only Play CARD_NAME condition
	;

oncePerGameLimit
	: CARD_NAME May Be Played Once Per Game
	;

triggerLimit
    : CARD_NAME May Only Trigger condition
    ;

triggerTurnLimit
    : CARD_NAME May Trigger literalValue Per Turn
    ;


omniPresentEffect
    : cardCantBeTargeted
    | whileEffect
    | primaryCostReduction
    | onlyPlayIf
    | oncePerGameLimit
    | triggerLimit
    | triggerTurnLimit
    ;

//////////////////////////////////////////////////////////////////////////// misc

one: A | Once | One;
two: Two | Twice;
three: Three;
number: Integer;
playerPowerValue: player POWER;
playerControlAmountValue: The Total Value Of Control Affecting player;
playerHandSize: The Number Of hypotheticalCard In Their Hand;
playerMitigate: player Mitigate;

literalValue
    : one 
    | two 
    | three 
    | number 
    ;
gameStateValue
    : playerPowerValue
    | playerControlAmountValue
    | playerHandSize
    | playerMitigate
    ;



//////////////////////////////////////////////////////////////////////////// effects

chooseSameMultipleTimes: You May Choose The Same Mode literalValue;

effectList
    : D effect 
    | effectList P D effect
    ;
chooseEffect
    : Choose literalValue For Each playerFilter In It O effectList P chooseSameMultipleTimes
    | Choose literalValue O effectList P chooseSameMultipleTimes
    | Choose literalValue O effectList
    | Choose literalValue For Each playerFilter In It O effectList
    ;
  
singleEffect
    : chooseEffect
    | disarmPlayer
    | silencePlayer
    | slowPlayer
    | controlPlayer
    | travelPlayer
    | travelDistance
    | destroyCard
    | dealDamage
    | counterCard
    | attachCard
    | gainPower
    | gainAction
    | gainInitiative
    | gainMitigate
    | loseMitigate
    | useSecondWind
    | returnCard
    | putBottomCardOfDeckIntoHand
    | triggerDurationEffects
    | playCard
    | discardCards
    | gainsHeroic
    | healPlayer
    | stunPlayer
    | revealCards
    | drawCards
    | removeControl
    | hardcastEffect
    | seekEffect
    | makeTerrain
    | removeTerrain
    | spendResources
    | scryEffect
    | overrideFrenzy
    | increaseCardDuration
    | resetUseOfCard
    | heroic
    | spendResources
    ;

conditionalEffect
    : condition C effect
    | singleEffect
    ;

alternativeEffect
    : condition C Instead effect
    | conditionalEffect
    ;

effect
    : hypotheticalPlayer May Have hypotheticalPlayer alternativeEffect
    | hypotheticalPlayer May alternativeEffect To alternativeEffect
    | hypotheticalPlayer May alternativeEffect
    | alternativeEffect Unless hypotheticalPlayer alternativeEffect
    | alternativeEffect
    ;

effectEnd
    : P Then C
    | P
    | And
    | C And
    | C Then
    | C
    | Then
    ;

anyEffect: effect | passiveEffect | replacementTriggerEffect | triggerEffect;

breachEffect: Breach D (anyEffect effectEnd)+;
advantageEffect: Advantage D (anyEffect effectEnd)+;
frenzyEffect: Frenzy D (anyEffect effectEnd)+;

line
    : omniPresentEffect P
    | breachEffect 
    | advantageEffect 
    | frenzyEffect
    | anyEffect effectEnd
    ;

text: line+ EOF;
