parser grammar IvionParser;
options { tokenVocab = IvionLexer; }

//////////////////////////////////////////////////////////////////////////// PLAYER


playerType: Player | Enemy;
playerPreFix: Another | Controlled | Uncontrolled;
playerPostFix
    : In Terrain 
    | Near Terrain 
    | Near CARD_NAME 
    | In CARD_NAME 
    | In tile
    | At Least value Tile Away
    ;

playerFilter: playerPreFix* playerType playerPostFix*;

currentPlayer: Yourself | You | Your;
targetPlayer: Another? Target playerFilter;
previousPlayer
    : Them
    | They
    | That playerType
    | Their
    ;
previousCardsController: The Card Controller;
singlePlayer
    : targetPlayer
    | previousPlayer
    | currentPlayer
    | previousCardsController
    ;

allPlayers
    : (Each | All) Other? playerFilter
    ;

////
player
    : singlePlayer
    | allPlayers
    ;

hypotheticalPlayer
    : A? playerFilter
    | player
    ;

//////////////////////////////////////////////////////////////////////////// TILE


tilePreFix
    : Empty
    ;
tilePostFix
    : With Terrain 
    | Near Terrain 
    | Near hypotheticalPlayer
    | Near CARD_NAME
    | At Least value Tile Away
    | At Least value Tile Away From hypotheticalPlayer
    | That Already Had Terrain
    ;

tileFilter
    : tilePreFix* Tile tilePostFix*
    ;

targetTile: Another? value? Target tileFilter;

previousTile
    : That Tile
    | The Tile
    ;
theNearestTile
    : The Nearest tileFilter Next To (player | CARD_NAME)
    ;
playersTile
    : The Tile player (Are | Is) In
    ;
cardsTile
    : This Tile
    ;
singleTile
    : targetTile
    | previousTile
    | theNearestTile
    | playersTile
    | cardsTile
    ;

multiTile
    : Up To value targetTile
    ;

allTiles
    : (Each | All) tileFilter
    ;

////

tile
    : singleTile
    | allTiles
    | multiTile
    ;
hypotheticalTile
    : A? tileFilter
    ;

//////////////////////////////////////////////////////////////////////////// EFFECTS


disarmPlayer
	: Disarm value player
	| Disarm value
	;

silencePlayer
	: Silence value player
	| Silence value
	;

slowPlayer
	: Slow value player
	| Slow value
	;

controlPlayer
	: Apply value More Instances Of A Control Type Of Your Choice To player
	| Apply A Instance Of A Control Type Of Your Choice To player
	| Apply A Instance Of A Control Type Of Your Choice To player
	| Apply A Instance Of A Control Type Of Your Choice To player
	| Increase The Value Of A Control Type Already Affecting player By value
	;

travelPlayer
	: Travel player value Tile Away From You
	| Travel player Up To value Tile
	| Travel To tile 
	| Travel player To tile
	| Travel player Up To value Tile
	| Travel player value Tile
	| Travel player value Tile Away From You
	| Travel Up To value Tile
	| Travel player To CARD_NAME
	| Travel player To  Unless They Spend value Resource
	| Travel player Another value Tile
	| Travel value Tile
	| Travel player Up To value Tile Away From You
	;

destroyCard
	: Destroy Target Card Attached To You
	| Destroy Target Card
	| Destroy Target Card In That Tile
	| Destroy Target Card In Terrain
	| Destroy All hypotheticalPlayer Card
	| Destroy CARD_NAME
	| Destroy Up To value Target Card
	;

dealDamage
	: Deal value Damage To player
	| Deal Damage To player Equal To The Number Of Revealed Card In Their Hand
	| Deal value Damage To player Plus Damage Equal To Your Mitigate
	| Deal value Damage To
	| Deal Damage To player
	| Deal value More Damage To player
	| Deal value Damage To player Plus value More Damage For Each Revealed Card In Their Hand
	| Deal Damage To player Equal To value
	;

counterCard
	: Counter Up To value Target Card Unless Its Controller Spends value Resource
	| Counter Target Card Unless Its Controller Spends value Resource
	| Counter Target Card Targeting You With A Resource Cost Of value Or Less Unless Its Controller Spends value Resource
	| Counter Target Card Controlled By A Player In Terrain Unless They Spend value Resource
	| Counter Target Card Targeting You Unless Its Controller Spends value Resource
	| Counter Target Non Attack Card Unless Its Controller Spends value Resource
	| Counter Target Attack Card Targeting You Unless Its Controller Spends value Resource
	| Counter Target Ability Card Unless Its Controller Spends value Resource
	;

counterCardCondition
	: counterCard P If That Card Is Countered C effect
    | counterCard
	;

spendResources: Spend value Resource;

attachCard
	: Attach To player
	| Attach To tile 
	| Attach To tile Until End Of Turn
	| Attach To player Until The Start Of Your Next Turn
	| Attach To player Until The End Of The Turn
	| Attach To player Until The End Of Turn
	| Attach To player Until End Of Turn
	| Attach CARD_NAME To player
	;

gainPower
	: They Gain value POWER
	| Gain value More POWER
	| Gain value Additional POWER
	| Gain value POWER
	| Gain value More POWER
	;

gainAction
	: They Gain value ACTION
	| Gain value More ACTION
	| Gain value Additional ACTION
	| Gain value ACTION
	| Gain value More ACTION
	;

gainInitiative
	: Gain INITIATIVE+
	| They Gain INITIATIVE+
	| Gain Another INITIATIVE+
	;

gainMitigate
	: player Gains Mitigate value
	| Gain Mitigate value
	;

loseMitigate
	: Lose Your Mitigate
	;

useSecondWind
	: Use Your Second Wind
	;

returnCard
	: Return Target Attached Card To Its Owners Hand
	| Return Target Card With A Resource Cost Of value Or Less From Your Discard To Your Hand
	| Return Target Ability Card From Your Discard To Your Hand
	| You May Return A Attack Card With A Resource Cost Of value Or Less From Your Discard To Your Hand
	| Return A Card From Your Discard To Your Hand
	| Return Target Card From Your Discard To Your Hand
	| Return CARD_NAME To Your Hand
	| Return It From Your Discard To Your Hand
	| Return Target Card With A Resource Cost Of value Or More From Your Discard To Your Hand
	;

putBottomCardOfDeckIntoHand
	: Put The Bottom Card Of Your Deck Into Your Hand
	;

triggerDurationEffects
	: Trigger Your Duration Effects As Though Your Turn Had Just Ended
	;

playCard
	: player May Play A Card
	| player May Play A Card For value Less Resource
	| Play A Card For Free
	| Play That Card For Free
	| Play Target Non Attack Card From Your Discard Targeting hypotheticalPlayer For Free
	| Play A Attack Card Targeting hypotheticalPlayer
	| Play A Ability Card From Your Discard Targeting player
	| Play A Attack Card Targeting player For value Less Resource
	| Play A Card With Frenzy For value Less Resource
	| Play A Card Targeting player
	| Play Cursed Dagger For Free P This Doesnt Count Towards Your Cursed Dagger Limit Per Turn
	| Play Runic Slaughter Targeting player For Free P This Doesnt Count Towards Your Runic Slaughter Limit Per Turn
	| Play A Card For value Less Resource
	| Play A Non Attack Card Targeting hypotheticalPlayer
	| Play A Ability Card Targeting player For value Less Resource
	;

discardCards
	: Discard value Card
	| Discard A Card
	| Discard A Revealed Card Of player Choice
	| player Discard value Card
	| player Discard A Card
	| player Discards Target Revealed Card
	| player Discards value Card
	| player Discards A Revealed Card Of player Choice
	| Discard A Revealed Card
	;

gainsHeroic
	: That Card Gains Heroic
	;

healPlayer
	: Heal player value HP
	| Heal player value HP
	| Heal player value HP
	| Heal player HP Equal To The Number Of Revealed Card In Their Hand
	;

stunPlayer
	: Stun player
	| Stun player
	| Stun player
	;

stunPlayerCondition
	: stunPlayer P If A Resource Is Removed This Way C effect
    | stunPlayer
	;

revealCards
	: player Reveals value Card From Their Hand
	| They Reveal value Card From Their Hand
	| They Reveal A Card From Their Hand
	| player Reveals A Card From Their Hand
	| player Reveals value Card From Their Hand
	| player Reveals A Card From Their Hand
	| Reveal CARD_NAME
	| Reveal A Card From Your Hand
    | Reveals A Card From Their Hand
	;

revealCardsCondition
    : revealCards
    | revealCards P If A Non Attack Card Is Revealed This Way;

drawCards
	: Draw A Card
	| Draw value Card
	| Draw A Additional Card
	| player Draw value Card
	| player Draw value Card
	| player Draw A Card
	;

removeControl
	: Remove Up To value Instances Of Control From player
	| Remove All Control Affecting player
    | Remove A Instance Of Control From player
	;

hardcastEffect
	: Hardcast
	;

seekEffect
	: Seek
	;

makeTerrain
	: Make tile Difficult Terrain
	;

removeTerrain
	: Remove Target Terrain Token
	;

payResources
	: Spend value Resource
	;

scryEffect
	: Look At The Top value Card Of Your Deck P Put Any Number On The Bottom And The Rest On Top In Any Order
	;

overrideFrenzy
	: That Card Has Frenzy Even If No Player Has Used Their Second Wind
	;

increaseCardDuration
	: Increase The Duration Of A Card You Control By value
	;

resetUseOfCard
	: Reset The Use Of CARD_NAME
	;

heroic: Heroic;

//////////////////////////////////////////////////////////////////////////// PASSIVE EFFECTS


onlyPlayCertainCards
	: hypotheticalPlayer May Only Play Card Named CARD_NAME
	| Only Play CARD_NAME If hypotheticalPlayer (Have | Has) Resolve A Attack Card This Turn
	| Only Play CARD_NAME If hypotheticalPlayer (Is | Are) Controlled
	| Only Play CARD_NAME If hypotheticalPlayer (Is | Are) Uncontrolled
	| Only Play CARD_NAME If hypotheticalPlayer (Is | Are) Near Terrain
	| Only Play CARD_NAME If hypotheticalPlayer (Have | Has) At Least value Card In Your Discard
	| Only Play CARD_NAME If hypotheticalPlayer (Have | Has) Taken value Or More Damage This Turn
	;

costReduction
	: Attack Card hypotheticalPlayer Play Cost value Less Resource
    | The Second Attack Card hypotheticalPlayer Play During Your Turn Cost value Less Resource
	;

rangeSet
	: The Range Of Your Attack Card Is value
	;

cantPlayCards
	: hypotheticalPlayer Cant Play Card
	;

playerCantBeTargeted
	: hypotheticalPlayer Cant Be Targeted By Enemies
	| hypotheticalPlayer Cant Be Targeted By Card
	;

increasedHandSize
    : Your Maximum Hand Size Is Increased By value
    ;

increasedMaxHP
    : Your Maximum HP Is Increased By value
    ;

replacesSecondWind
    : CARD_NAME Replaces Your Second Wind
    ;

noInitiative
    : hypotheticalPlayer Dont Gain INITIATIVE At The Start Of Your Turn
    ;
    
drawRange
	: All Of hypotheticalPlayer Card C Except Travel Card That Target A Tile C Also Draw Range From CARD_NAME
	| All Of hypotheticalPlayer Card C Except Travel Card That Target A Tile C Also Draw Range From hypotheticalTile
	;

gainRange
	: All Of hypotheticalPlayer Card C Except Travel Card That Target A Tile C Gain value Range
    ;

limitTargets
    : Only Target Other hypotheticalPlayer conditionEffect
    ;

passiveEffect
    : playerCantBeTargeted
    | cantPlayCards
    | rangeSet
    | costReduction
    | onlyPlayCertainCards
    | increasedHandSize
    | increasedMaxHP
    | replacesSecondWind
    | noInitiative
    | drawRange
    | gainRange
    | limitTargets
    ;

//////////////////////////////////////////////////////////////////////////// PASSIVE TRIGGERS


durationEffect
	: Duration 
	;

turnTrigger
	: At The Start Of hypotheticalPlayer Turn
	| At The End Of hypotheticalPlayer Turn
	| At The Start Of hypotheticalPlayer Turn
	;

gameStartTrigger
	: At The Start Of The Game
	;


afterEffectTrigger
	: After hypotheticalPlayer Resolve A Ability Card Targeting player
	| After hypotheticalPlayer Draw A Card
	| After hypotheticalPlayer Resolve Your First Ability Card During Your Turn
	| After hypotheticalPlayer Make Terrain In hypotheticalTile
	| After hypotheticalPlayer Enters hypotheticalTile
	| After hypotheticalPlayer Enters CARD_NAME
	| After hypotheticalPlayer Enters tile
	| After hypotheticalPlayer Or A Ally Enters CARD_NAME
	| After That Card Resolves
	| After A Attack Card Targeting hypotheticalPlayer Resolves For The First Time During Each Turn
	| After hypotheticalPlayer Resolve Your First Attack Card Targeting hypotheticalPlayer During Your Turn
	| After Any Player Enters This Tile
	| After hypotheticalPlayer Play A Card
	| After hypotheticalPlayer Play Your Second Attack Card During Your Turn
	| After A Resource Is Removed In This Way
	| After hypotheticalPlayer Attach Another Card To player
	| After They Resolve Their First Card During Their Turn
	| After A Attack Card Targeting hypotheticalPlayer Resolves
	| After CARD_NAME Is Revealed
	| After hypotheticalPlayer Resolve Your First Attack Card During Your Turn
	| After hypotheticalPlayer Resolve Your First Attack Card Targeting player During Your Turn
	| After hypotheticalPlayer Stun hypotheticalPlayer
	| After CARD_NAME Is Sent To Your Discard
	| After hypotheticalPlayer Second Wind
	| After hypotheticalPlayer Play CARD_NAME
    | After A Card With Hardcast hypotheticalPlayer Played Fails To Resolve
    | After hypotheticalPlayer Slow hypotheticalPlayer For The First Time During Your Turn
    | After hypotheticalPlayer Slow hypotheticalPlayer
	;

afterControlled
    : After They Receive Control C effect For Each Instance Of Control They Receive
    ;


triggerEffect
    : turnTrigger C effect
	| afterEffectTrigger C effect
    | durationEffect D effect
    | afterControlled
    | gameStartTrigger C effect
	;

//////////////////////////////////////////////////////////////////////////// replacement Trigger

ifWouldRecieveControl
    : If hypotheticalPlayer Would Receive Control C Instead They Receive The Control
    ;

ifWouldTakeDamage
    : If hypotheticalPlayer Would Take Damage For The First Time During Each Turn C Instead Take value Less Damage P This May Not Reduce Damage Taken Below value
    ;

ifWouldHeal
    : If hypotheticalPlayer Would Heal player Or Another Player HP C Instead Deal That Much Damage To player
    ;


replacementTriggerEffect
	: ifWouldRecieveControl
    | ifWouldTakeDamage
    | ifWouldHeal
	;

////////////////////////////////////////////////////////////////////////////


ifPlayerMakesChoice
	: If They Do
	| If They Dont
    | If You Do
    | If You Dont
	;

ifPreviousActionInvalid
	: If They Cant
	| If You Cant
	;

ifResolvedCard
	: If player (Have | Has)? Resolved Another Ability Card This Turn
	| If player (Have | Has)? Resolved A Attack Card This Turn
	;

ifUsedSecondWind
	: If player (Have | Has)? Already Used Your Second Wind
	;

ifNear
	: If player Are Near CARD_NAME
	| If player Are Near Terrain
	;

ifControlled
	: If player Are Controlled
	;

ifPlayed
	: If player (Have | Has)? Played A Attack Card This Turn
	;

ifTileHadTerrain
	: If That Tile Already Had Terrain
	;

ifCardRevealed
	: If player (Have | Has) At Least value Revealed Card In Your Hand
	;

ifPlayerHasMitigate
	: If player (Have | Has) Mitigate
	;

ifPlayerDidntLeaveTile
	: If player Didnt Leave A Tile This Turn
	;

ifCardCostReduced
    : If Its Cost Was Reduced
    ;

ifPlayerHasMoreHP
    : If player (Have | Has) More HP Than player
    ;

ifPlayerHasNoActions
    : If player (Have | Has) No Resource
    ;

ifPlayerInTerrain
    : If player Are In Terrain
    ;

conditionEffect
	: ifPlayerMakesChoice
	| ifPreviousActionInvalid
	| ifResolvedCard
	| ifUsedSecondWind
	| ifNear
	| ifControlled
	| ifPlayed
	| ifTileHadTerrain
	| ifCardRevealed
	| ifPlayerHasMitigate
    | ifPlayerDidntLeaveTile
    | ifCardCostReduced
    | ifPlayerHasMoreHP
    | ifPlayerHasNoActions
    | ifPlayerInTerrain
	;

//////////////////////////////////////////////////////////////////////////// OMNI PRESENT EFFECTS


cardCantBeTargeted
	: CARD_NAME Cant Be Targeted By Card
	;

whileEffect
	: While CARD_NAME Is Revealed In Your Hand C passiveEffect
	;

primaryCostReduction
	: CARD_NAME Cost value Less POWER For Each Other Revealed Card In Your Hand
	;

onlyPlayIf
	: Only Play CARD_NAME conditionEffect
	;

oncePerGameLimit
	: CARD_NAME May Be Played Once Per Game
	;

triggerLimit
    : CARD_NAME May Only Trigger conditionEffect
    ;

triggerTurnLimit
    : CARD_NAME May Trigger value Per Turn
    ;


omniPresentEffect
    : cardCantBeTargeted
    | whileEffect
    | primaryCostReduction
    | onlyPlayIf
    | oncePerGameLimit
    | triggerLimit
    | triggerTurnLimit
    ;

//////////////////////////////////////////////////////////////////////////// misc

one: A | Once | One;
two: Two | Twice;
three: Three;
number: Integer;
playerPowerValue: player POWER;
playerControlAmountValue: The Total Value Of Control Affecting player;
playerHandSize: The Number Of Card In Their Hand;
value
    : one 
    | two 
    | three 
    | number 
    | playerPowerValue
    | playerControlAmountValue
    | playerHandSize
    ;



//////////////////////////////////////////////////////////////////////////// effects

chooseSameMultipleTimes: You May Choose The Same Mode value;

effectList
    : D effect 
    | effectList P D effect
    ;

chooseEffect
    : Choose value For Each playerFilter In It O effectList P chooseSameMultipleTimes
    | Choose value O effectList P chooseSameMultipleTimes
    | Choose value O effectList
    | Choose value For Each playerFilter In It O effectList
    ;

singleEffect
    : chooseEffect
    | disarmPlayer
    | silencePlayer
    | slowPlayer
    | controlPlayer
    | travelPlayer
    | destroyCard
    | dealDamage
    | counterCardCondition
    | attachCard
    | gainPower
    | gainAction
    | gainInitiative
    | gainMitigate
    | loseMitigate
    | useSecondWind
    | returnCard
    | putBottomCardOfDeckIntoHand
    | triggerDurationEffects
    | playCard
    | discardCards
    | gainsHeroic
    | healPlayer
    | stunPlayerCondition
    | revealCardsCondition
    | drawCards
    | removeControl
    | hardcastEffect
    | seekEffect
    | makeTerrain
    | removeTerrain
    | payResources
    | scryEffect
    | overrideFrenzy
    | increaseCardDuration
    | resetUseOfCard
    | heroic
    | spendResources
    ;

conditionalEffect
    : conditionEffect C singleEffect
    | singleEffect
    ;

alternativeEffect
    : conditionEffect C Instead conditionalEffect
    | conditionalEffect
    ;

optionalEffect
    : hypotheticalPlayer May Have hypotheticalPlayer alternativeEffect
    | hypotheticalPlayer May alternativeEffect To alternativeEffect
    | hypotheticalPlayer May alternativeEffect
    | alternativeEffect Unless hypotheticalPlayer alternativeEffect
    | alternativeEffect
    ;

multiEffect
    : multiEffect Then optionalEffect
    | multiEffect C Then optionalEffect
    | multiEffect C optionalEffect
    | multiEffect C And optionalEffect
    | multiEffect And optionalEffect
    | Then C optionalEffect
    | optionalEffect
    ;

effect
    : multiEffect
    ;

anyEffect: effect | passiveEffect | replacementTriggerEffect | triggerEffect;

breachEffect: Breach D (anyEffect P)+;
advantageEffect: Advantage D (anyEffect P)+;
frenzyEffect: Frenzy D (anyEffect P)+;

line
    : omniPresentEffect P
    | breachEffect 
    | advantageEffect 
    | frenzyEffect
    | anyEffect P
    ;

text: line+ EOF;
