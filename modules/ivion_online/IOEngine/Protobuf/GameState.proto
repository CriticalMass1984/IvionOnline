syntax = "proto3";

package GameState;

import "Types.proto";
import "Effects.proto";
/////// Entities

message Player {
    message Stats {
        Types.IntegerRef Health = 1;
        Types.IntegerRef Actions = 2;
        Types.IntegerRef Power = 3;
        Types.IntegerRef Slow = 4;
        Types.IntegerRef Silence = 5;
        Types.IntegerRef Disarm = 6;
        Types.IntegerRef Initiative = 7;
    }
    string DisplayName = 1;
    string UID = 2;
    
    repeated Types.CardRef Field = 3;
    repeated Types.CardRef Hand = 4;
    repeated Types.CardRef Deck = 5;
    repeated Types.CardRef Discard = 6;
    repeated Types.CardRef Feats = 7;

    Stats State = 8;
    Stats MaxState = 9;

    Types.Vec2iRef Position = 10;
}

message Tile {
    Types.Vec2i Position = 1;
    Types.TerrainType Terrain = 2;
    repeated Types.PlayerRef Players = 3;
    repeated Types.CardRef Cards = 4;
}

message Card {
    enum Color {
        GRAY = 0;
        BLACK = 1;
        RED = 2;
        GREEN = 3;
        BLUE = 4;
        WHITE = 5;
    }
    string Name = 1;
    string Archetype = 2;
    bool Ultimate = 3;
    bool Feat = 4;
    bool BasicAction = 5;
    repeated Color Colors = 6;

    Types.PlayerRef Owner = 7;
    Types.PlayerRef Controller = 8;
    Types.IntegerRef ActionCost = 9;
    Types.IntegerRef PowerCost = 10;
    Types.IntegerRef Range = 11;
    Types.EntityRef Attached = 12;

    Types.IntegerRef AffectedBySlow = 13;
    Types.IntegerRef AffectedBySilence = 14;
    Types.IntegerRef AffectedByDisarm = 15;

    Effects.CardEffect OmniPresentEffect = 16;
    Effects.CardEffect PassiveEffect = 17;
    Effects.CardEffect FeatEffect = 18;
    Effects.CardEffect PlayEffect = 19;
    Effects.CardEffect ResolveEffect = 20;
}

message Team {
    repeated Types.PlayerRef Players = 1;
}

message SetMutation {
    Types.EntityRef Object = 1;

    Types.EntityValue NewValue = 2;
    Types.EntityValue OldValue = 3;
}

message RemoveMutation {
    Types.EntityRef Object = 1;

    Types.EntityValue OldValue = 2;
}

message InsertMutation {
    Types.EntityRef Object = 1;

    Types.EntityValue NewValue = 2;
}

message Mutation {
    oneof mutation {
        SetMutation Set = 1;
        RemoveMutation Remove = 2;
        InsertMutation Insert = 3;
    }
}

message GameState {
    repeated Player Players = 1;
    repeated Card Cards = 2;
    repeated Tile Tiles = 3;
    repeated Team Teams = 4;

    Types.Integer TurnNumber = 6;
    repeated Card Stack = 7;

}

message GameInstance {
    GameState GameState = 1;
    repeated Mutation History = 2;
}
